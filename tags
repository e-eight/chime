!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/4f9f6f83/
$(BUILDDIR)	old_c/Makefile	/^$(BUILDDIR):$/;"	t
$(BUILDDIR)/%.o	old_c/Makefile	/^$(OBJECTS): $(BUILDDIR)\/%.o: $(SOURCEDIR)\/%.cpp$/;"	t
$(EXECUTABLE)	old_c/Makefile	/^$(EXECUTABLE): $(OBJECTS)$/;"	t
$(OBJECTS)	old_c/Makefile	/^$(OBJECTS): $(BUILDDIR)\/%.o: $(SOURCEDIR)\/%.cpp$/;"	t
$(addsuffix .o,$(units_cpp-h))	makefile	/^$(addsuffix .o,$(units_cpp-h)): %.o: %.h$/;"	t
$(addsuffix .o,$(units_cpp-h))	src/deps/basis/makefile	/^$(addsuffix .o,$(units_cpp-h)): %.o: %.h$/;"	t
$(addsuffix .o,$(units_cpp-h))	src/deps/ndmakefile/makefile	/^$(addsuffix .o,$(units_cpp-h)): %.o: %.h$/;"	t
$(list-mpi-objects-cpp)	makefile	/^$(list-mpi-objects-cpp): CXX := $(MPICXX)$/;"	t
$(list-mpi-objects-cpp)	src/deps/basis/makefile	/^$(list-mpi-objects-cpp): CXX := $(MPICXX)$/;"	t
$(list-mpi-objects-cpp)	src/deps/ndmakefile/makefile	/^$(list-mpi-objects-cpp): CXX := $(MPICXX)$/;"	t
$(list-mpi-programs-cpp)	makefile	/^$(list-mpi-programs-cpp): CC := $(MPICXX)$/;"	t
$(list-mpi-programs-cpp)	makefile	/^$(list-mpi-programs-cpp): CXX := $(MPICXX)$/;"	t
$(list-mpi-programs-cpp)	src/deps/basis/makefile	/^$(list-mpi-programs-cpp): CC := $(MPICXX)$/;"	t
$(list-mpi-programs-cpp)	src/deps/basis/makefile	/^$(list-mpi-programs-cpp): CXX := $(MPICXX)$/;"	t
$(list-mpi-programs-cpp)	src/deps/ndmakefile/makefile	/^$(list-mpi-programs-cpp): CC := $(MPICXX)$/;"	t
$(list-mpi-programs-cpp)	src/deps/ndmakefile/makefile	/^$(list-mpi-programs-cpp): CXX := $(MPICXX)$/;"	t
$(programs)	makefile	/^$(programs): $(archives)$/;"	t
$(programs)	src/deps/basis/makefile	/^$(programs): $(archives)$/;"	t
$(programs)	src/deps/ndmakefile/makefile	/^$(programs): $(archives)$/;"	t
$(programs_cpp)	makefile	/^$(programs_cpp): CC := $(CXX)$/;"	t
$(programs_cpp)	src/deps/basis/makefile	/^$(programs_cpp): CC := $(CXX)$/;"	t
$(programs_cpp)	src/deps/ndmakefile/makefile	/^$(programs_cpp): CC := $(CXX)$/;"	t
$(programs_cpp_test)	makefile	/^$(programs_cpp_test): CC := $(CXX)$/;"	t
$(programs_cpp_test)	src/deps/basis/makefile	/^$(programs_cpp_test): CC := $(CXX)$/;"	t
$(programs_cpp_test)	src/deps/ndmakefile/makefile	/^$(programs_cpp_test): CC := $(CXX)$/;"	t
$(programs_f)	makefile	/^$(programs_f): CC=$(FC)$/;"	t
$(programs_f)	src/deps/basis/makefile	/^$(programs_f): CC=$(FC)$/;"	t
$(programs_f)	src/deps/ndmakefile/makefile	/^$(programs_f): CC=$(FC)$/;"	t
$(programs_test)	makefile	/^$(programs_test): $(archives)$/;"	t
$(programs_test)	src/deps/basis/makefile	/^$(programs_test): $(archives)$/;"	t
$(programs_test)	src/deps/ndmakefile/makefile	/^$(programs_test): $(archives)$/;"	t
%.a	makefile	/^%.a:$/;"	t
%.a	src/deps/basis/makefile	/^%.a:$/;"	t
%.a	src/deps/ndmakefile/makefile	/^%.a:$/;"	t
%.o	makefile	/^$(addsuffix .o,$(units_cpp-h)): %.o: %.h$/;"	t
%.o	src/deps/basis/makefile	/^$(addsuffix .o,$(units_cpp-h)): %.o: %.h$/;"	t
%.o	src/deps/ndmakefile/makefile	/^$(addsuffix .o,$(units_cpp-h)): %.o: %.h$/;"	t
%.so	makefile	/^%.so: #$(archives)$/;"	t
%.so	src/deps/basis/makefile	/^%.so: #$(archives)$/;"	t
%.so	src/deps/ndmakefile/makefile	/^%.so: #$(archives)$/;"	t
.PHONY	old_c/Makefile	/^.PHONY = directories all clean$/;"	m
AM_H_	src/deps/basis/am/am.h	/^#define AM_H_$/;"	d
ARFLAGS	makefile	/^ARFLAGS = r$/;"	m
ARFLAGS	src/deps/basis/makefile	/^ARFLAGS = r$/;"	m
ARFLAGS	src/deps/ndmakefile/makefile	/^ARFLAGS = r$/;"	m
AllocatedEntries	src/deps/basis/operator.h	/^    std::size_t AllocatedEntries(const basis::OperatorBlocks<tFloat>& matrices)$/;"	f	namespace:basis	typeref:typename:std::size_t
AllowedTriangle	src/deps/basis/am/am.h	/^    bool AllowedTriangle(const HalfInt& h1, const HalfInt& h2, const HalfInt& h3)$/;"	f	namespace:am	typeref:typename:bool
AngularMomentumJRME	src/deps/basis/am/rme.h	/^  double AngularMomentumJRME(const HalfInt& Jp, const HalfInt& J)$/;"	f	namespace:am	typeref:typename:double
AngularMomentumRangeIntersection	src/deps/basis/am/am.h	/^    HalfInt::pair AngularMomentumRangeIntersection($/;"	f	namespace:am	typeref:typename:HalfInt::pair
AngularMomentumRangeIntersection	src/deps/basis/am/am.h	/^    HalfInt::pair AngularMomentumRangeIntersection(const HalfInt::pair& r1, const HalfInt::pair&/;"	f	namespace:am	typeref:typename:HalfInt::pair
BASIS_BASIS_H_	src/deps/basis/basis.h	/^#define BASIS_BASIS_H_$/;"	d
BASIS_DEGENERATE_H_	src/deps/basis/degenerate.h	/^#define BASIS_DEGENERATE_H_$/;"	d
BASIS_HYPERSECTOR_H_	src/deps/basis/hypersector.h	/^#define BASIS_HYPERSECTOR_H_$/;"	d
BASIS_JJJPN_OPERATOR_H_	src/deps/basis/jjjpn_operator.h	/^#define BASIS_JJJPN_OPERATOR_H_$/;"	d
BASIS_JJJPN_SCHEME_H_	src/deps/basis/jjjpn_scheme.h	/^#define BASIS_JJJPN_SCHEME_H_$/;"	d
BASIS_JJJT_OPERATOR_H_	src/deps/basis/jjjt_operator.h	/^#define BASIS_JJJT_OPERATOR_H_$/;"	d
BASIS_JJJT_SCHEME_H_	src/deps/basis/jjjt_scheme.h	/^#define BASIS_JJJT_SCHEME_H_$/;"	d
BASIS_JT_OPERATOR_H_	src/deps/basis/jt_operator.h	/^#define BASIS_JT_OPERATOR_H_$/;"	d
BASIS_LSJT_OPERATOR_H_	src/deps/basis/lsjt_operator.h	/^#define BASIS_LSJT_OPERATOR_H_$/;"	d
BASIS_LSJT_SCHEME_H_	src/deps/basis/lsjt_scheme.h	/^#define BASIS_LSJT_SCHEME_H_$/;"	d
BASIS_MANY_BODY_H_	src/deps/basis/many_body.h	/^#define BASIS_MANY_BODY_H_$/;"	d
BASIS_M_SCHEME_H_	src/deps/basis/m_scheme.h	/^#define BASIS_M_SCHEME_H_$/;"	d
BASIS_NLJ_OPERATOR_H_	src/deps/basis/nlj_operator.h	/^#define BASIS_NLJ_OPERATOR_H_$/;"	d
BASIS_NLJ_ORBITAL_H_	src/deps/basis/nlj_orbital.h	/^#define BASIS_NLJ_ORBITAL_H_$/;"	d
BASIS_OPERATOR_H_	src/deps/basis/operator.h	/^#define BASIS_OPERATOR_H_$/;"	d
BASIS_PROTON_NEUTRON_H_	src/deps/basis/proton_neutron.h	/^#define BASIS_PROTON_NEUTRON_H_$/;"	d
BUILDDIR	old_c/Makefile	/^BUILDDIR = build$/;"	m
BaseDegenerateSpace	src/deps/basis/degenerate.h	/^    class BaseDegenerateSpace$/;"	c	namespace:basis
BaseDegenerateState	src/deps/basis/degenerate.h	/^      BaseDegenerateState(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::BaseDegenerateState
BaseDegenerateState	src/deps/basis/degenerate.h	/^      BaseDegenerateState(const SubspaceType& subspace, int index)$/;"	f	class:basis::BaseDegenerateState
BaseDegenerateState	src/deps/basis/degenerate.h	/^    class BaseDegenerateState$/;"	c	namespace:basis
BaseDegenerateSubspace	src/deps/basis/degenerate.h	/^    BaseDegenerateSubspace() : full_dimension_(0) {}$/;"	f	class:basis::BaseDegenerateSubspace
BaseDegenerateSubspace	src/deps/basis/degenerate.h	/^    class BaseDegenerateSubspace$/;"	c	namespace:basis
BaseHypersector	src/deps/basis/hypersector.h	/^      BaseHypersector($/;"	f	class:basis::BaseHypersector
BaseHypersector	src/deps/basis/hypersector.h	/^    class BaseHypersector$/;"	c	namespace:basis
BaseHypersectors	src/deps/basis/hypersector.h	/^    class BaseHypersectors$/;"	c	namespace:basis
BaseSector	src/deps/basis/basis.h	/^      BaseSector($/;"	f	class:basis::BaseSector
BaseSector	src/deps/basis/basis.h	/^    class BaseSector$/;"	c	namespace:basis
BaseSectors	src/deps/basis/basis.h	/^    class BaseSectors$/;"	c	namespace:basis
BaseSpace	src/deps/basis/basis.h	/^    class BaseSpace$/;"	c	namespace:basis
BaseState	src/deps/basis/basis.h	/^      BaseState(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::BaseState
BaseState	src/deps/basis/basis.h	/^      BaseState(const SubspaceType& subspace, int index)$/;"	f	class:basis::BaseState
BaseState	src/deps/basis/basis.h	/^    class BaseState$/;"	c	namespace:basis
BaseSubspace	src/deps/basis/basis.h	/^    BaseSubspace() : dimension_(0) {}$/;"	f	class:basis::BaseSubspace
BaseSubspace	src/deps/basis/basis.h	/^    class BaseSubspace$/;"	c	namespace:basis
BinaryDivide	src/deps/basis/mcutils/vector_tuple.h	/^  template<class T> T BinaryDivide(const T& a, const T& b)$/;"	f	namespace:mcutils	typeref:typename:T
BinaryMinus	src/deps/basis/mcutils/vector_tuple.h	/^  template<class T> T BinaryMinus(const T& a, const T& b)$/;"	f	namespace:mcutils	typeref:typename:T
BinaryPlus	src/deps/basis/mcutils/vector_tuple.h	/^  template<class T> T BinaryPlus(const T& a, const T& b)$/;"	f	namespace:mcutils	typeref:typename:T
BinaryTimes	src/deps/basis/mcutils/vector_tuple.h	/^  template<class T> T BinaryTimes(const T& a, const T& b)$/;"	f	namespace:mcutils	typeref:typename:T
CC	makefile	/^$(list-mpi-programs-cpp): CC := $(MPICXX)$/;"	m
CC	makefile	/^$(programs_cpp): CC := $(CXX)$/;"	m
CC	makefile	/^$(programs_cpp_test): CC := $(CXX)$/;"	m
CC	makefile	/^$(programs_f): CC=$(FC)$/;"	m
CC	src/deps/basis/makefile	/^$(list-mpi-programs-cpp): CC := $(MPICXX)$/;"	m
CC	src/deps/basis/makefile	/^$(programs_cpp): CC := $(CXX)$/;"	m
CC	src/deps/basis/makefile	/^$(programs_cpp_test): CC := $(CXX)$/;"	m
CC	src/deps/basis/makefile	/^$(programs_f): CC=$(FC)$/;"	m
CC	src/deps/ndmakefile/makefile	/^$(list-mpi-programs-cpp): CC := $(MPICXX)$/;"	m
CC	src/deps/ndmakefile/makefile	/^$(programs_cpp): CC := $(CXX)$/;"	m
CC	src/deps/ndmakefile/makefile	/^$(programs_cpp_test): CC := $(CXX)$/;"	m
CC	src/deps/ndmakefile/makefile	/^$(programs_f): CC=$(FC)$/;"	m
CHIRAL_H	src/chiral.h	/^#define CHIRAL_H$/;"	d
CXX	config.mk	/^CXX := g++$/;"	m
CXX	makefile	/^$(list-mpi-objects-cpp): CXX := $(MPICXX)$/;"	m
CXX	makefile	/^$(list-mpi-programs-cpp): CXX := $(MPICXX)$/;"	m
CXX	old_c/Makefile	/^CXX = g++$/;"	m
CXX	src/deps/basis/config.mk	/^CXX := g++$/;"	m
CXX	src/deps/basis/makefile	/^$(list-mpi-objects-cpp): CXX := $(MPICXX)$/;"	m
CXX	src/deps/basis/makefile	/^$(list-mpi-programs-cpp): CXX := $(MPICXX)$/;"	m
CXX	src/deps/ndconfig/config-gnu-nersc.mk	/^CXX := CC$/;"	m
CXX	src/deps/ndconfig/config-gnu.mk	/^CXX := g++$/;"	m
CXX	src/deps/ndconfig/config-intel-nersc.mk	/^CXX := CC$/;"	m
CXX	src/deps/ndconfig/config-intel.mk	/^CXX := icpc$/;"	m
CXX	src/deps/ndmakefile/makefile	/^$(list-mpi-objects-cpp): CXX := $(MPICXX)$/;"	m
CXX	src/deps/ndmakefile/makefile	/^$(list-mpi-programs-cpp): CXX := $(MPICXX)$/;"	m
CanonicalizeIndices	src/deps/basis/operator.h	/^    CanonicalizeIndices($/;"	f	namespace:basis	typeref:typename:std::tuple<int,int,int,int,bool>
CanonicalizeIndicesJT	src/deps/basis/jt_operator.h	/^    std::tuple<int,int,bool,double> CanonicalizeIndicesJT($/;"	f	namespace:basis	typeref:typename:std::tuple<int,int,bool,double>
CanonicalizeIndicesJT	src/deps/basis/jt_operator.h	/^    std::tuple<int,int,int,int,bool,double> CanonicalizeIndicesJT($/;"	f	namespace:basis	typeref:typename:std::tuple<int,int,int,int,bool,double>
Choose	src/deps/basis/mcutils/gsl.h	/^  inline int Choose(int x, int y)$/;"	f	namespace:mcutils	typeref:typename:int
ChopMatrix	src/deps/basis/mcutils/eigen.h	/^    void ChopMatrix(tMatrixType& matrix, double tolerance=1e-10)$/;"	f	namespace:mcutils	typeref:typename:void
ClearOperatorJT	src/deps/basis/jt_operator.h	/^    void ClearOperatorJT($/;"	f	namespace:basis	typeref:typename:void
ClebschGordan	src/deps/basis/am/wigner_gsl.h	/^    double ClebschGordan($/;"	f	namespace:am	typeref:typename:double
ClebschGordan2	src/deps/basis/am/wigner_gsl_twice.h	/^    double ClebschGordan2($/;"	f	namespace:am	typeref:typename:double
CompareTimers	src/deps/basis/mcutils/profiling_test.cpp	/^void CompareTimers()$/;"	f	typeref:typename:void
CompleteLowerTriangle	src/deps/basis/mcutils/eigen.h	/^    void CompleteLowerTriangle(tMatrixType& matrix)$/;"	f	namespace:mcutils	typeref:typename:void
ConstructIdentityOperatorRelativeLSJT	src/deps/basis/lsjt_operator.cpp	/^  void ConstructIdentityOperatorRelativeLSJT($/;"	f	namespace:basis	typeref:typename:void
ConstructZeroOperatorRelativeLSJT	src/deps/basis/lsjt_operator.cpp	/^  void ConstructZeroOperatorRelativeLSJT($/;"	f	namespace:basis	typeref:typename:void
ContainsHypersector	src/deps/basis/hypersector.h	/^      bool ContainsHypersector($/;"	f	class:basis::BaseHypersectors	typeref:typename:bool
ContainsSector	src/deps/basis/basis.h	/^      bool ContainsSector(const typename SectorType::KeyType& key) const$/;"	f	class:basis::BaseSectors	typeref:typename:DEPRECATED ("")bool
ContainsSector	src/deps/basis/basis.h	/^      bool ContainsSector(int bra_subspace_index, int ket_subspace_index, int multiplicity_index/;"	f	class:basis::BaseSectors	typeref:typename:bool
ContainsState	src/deps/basis/basis.h	/^    bool ContainsState(const StateLabelsType& state_labels) const$/;"	f	class:basis::BaseSubspace	typeref:typename:bool
ContainsSubspace	src/deps/basis/basis.h	/^      bool ContainsSubspace(const typename SubspaceType::SubspaceLabelsType& subspace_labels) co/;"	f	class:basis::BaseSpace	typeref:typename:bool
DEPRECATED	src/deps/basis/mcutils/deprecated.h	/^#    define DEPRECATED(/;"	d
DebugStr	src/deps/basis/basis.h	/^    std::string BaseSectors<tSpaceType>::DebugStr() const$/;"	f	class:basis::BaseSectors	typeref:typename:std::string
DebugStr	src/deps/basis/degenerate_test.cpp	/^  std::string RelativeDegenerateSpaceLSJT::DebugStr(bool show_subspaces) const$/;"	f	class:basis::RelativeDegenerateSpaceLSJT	typeref:typename:std::string
DebugStr	src/deps/basis/degenerate_test.cpp	/^  std::string RelativeDegenerateSubspaceLSJT::DebugStr() const$/;"	f	class:basis::RelativeDegenerateSubspaceLSJT	typeref:typename:std::string
DebugStr	src/deps/basis/hypersector.h	/^    std::string BaseHypersectors<tSpaceType,tOperatorSpaceType>::DebugStr() const$/;"	f	class:basis::BaseHypersectors	typeref:typename:std::string
DebugStr	src/deps/basis/jjjpn_scheme.cpp	/^  std::string TwoBodySpaceJJJPN::DebugStr() const$/;"	f	class:basis::TwoBodySpaceJJJPN	typeref:typename:std::string
DebugStr	src/deps/basis/jjjpn_scheme.cpp	/^  std::string TwoBodySubspaceJJJPN::DebugStr() const$/;"	f	class:basis::TwoBodySubspaceJJJPN	typeref:typename:std::string
DebugStr	src/deps/basis/jjjt_scheme.cpp	/^  std::string TwoBodySpaceJJJT::DebugStr() const$/;"	f	class:basis::TwoBodySpaceJJJT	typeref:typename:std::string
DebugStr	src/deps/basis/jjjt_scheme.cpp	/^  std::string TwoBodySpaceJJJTN::DebugStr() const$/;"	f	class:basis::TwoBodySpaceJJJTN	typeref:typename:std::string
DebugStr	src/deps/basis/jjjt_scheme.cpp	/^  std::string TwoBodySubspaceJJJT::DebugStr() const$/;"	f	class:basis::TwoBodySubspaceJJJT	typeref:typename:std::string
DebugStr	src/deps/basis/jjjt_scheme.cpp	/^  std::string TwoBodySubspaceJJJTN::DebugStr() const$/;"	f	class:basis::TwoBodySubspaceJJJTN	typeref:typename:std::string
DebugStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string RelativeCMSpaceLSJT::DebugStr() const$/;"	f	class:basis::RelativeCMSpaceLSJT	typeref:typename:std::string
DebugStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string RelativeCMSpaceLSJTN::DebugStr() const$/;"	f	class:basis::RelativeCMSpaceLSJTN	typeref:typename:std::string
DebugStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string RelativeCMSubspaceLSJT::DebugStr() const$/;"	f	class:basis::RelativeCMSubspaceLSJT	typeref:typename:std::string
DebugStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string RelativeCMSubspaceLSJTN::DebugStr() const$/;"	f	class:basis::RelativeCMSubspaceLSJTN	typeref:typename:std::string
DebugStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string RelativeSpaceLSJT::DebugStr() const$/;"	f	class:basis::RelativeSpaceLSJT	typeref:typename:std::string
DebugStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string RelativeSubspaceLSJT::DebugStr() const$/;"	f	class:basis::RelativeSubspaceLSJT	typeref:typename:std::string
DebugStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string TwoBodySpaceLSJT::DebugStr() const$/;"	f	class:basis::TwoBodySpaceLSJT	typeref:typename:std::string
DebugStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string TwoBodySpaceLSJTN::DebugStr() const$/;"	f	class:basis::TwoBodySpaceLSJTN	typeref:typename:std::string
DebugStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string TwoBodySubspaceLSJT::DebugStr() const$/;"	f	class:basis::TwoBodySubspaceLSJT	typeref:typename:std::string
DebugStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string TwoBodySubspaceLSJTN::DebugStr() const$/;"	f	class:basis::TwoBodySubspaceLSJTN	typeref:typename:std::string
DebugStr	src/deps/basis/m_scheme.cpp	/^  std::string SingleParticleSpacePN::DebugStr() const$/;"	f	class:basis::SingleParticleSpacePN	typeref:typename:std::string
DebugStr	src/deps/basis/m_scheme.cpp	/^  std::string SingleParticleSubspacePN::DebugStr() const$/;"	f	class:basis::SingleParticleSubspacePN	typeref:typename:std::string
DebugStr	src/deps/basis/nlj_orbital.cpp	/^  std::string OrbitalSectorsLJPN::DebugStr() const$/;"	f	class:basis::OrbitalSectorsLJPN	typeref:typename:std::string
DebugStr	src/deps/basis/nlj_orbital.cpp	/^  std::string OrbitalSpaceLJPN::DebugStr() const {$/;"	f	class:basis::OrbitalSpaceLJPN	typeref:typename:std::string
DebugStr	src/deps/basis/nlj_orbital.cpp	/^  std::string OrbitalSpacePN::DebugStr() const$/;"	f	class:basis::OrbitalSpacePN	typeref:typename:std::string
DebugStr	src/deps/basis/nlj_orbital.cpp	/^  std::string OrbitalSubspaceLJPN::DebugStr() const {$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:std::string
DebugStr	src/deps/basis/nlj_orbital.cpp	/^  std::string OrbitalSubspacePN::DebugStr() const$/;"	f	class:basis::OrbitalSubspacePN	typeref:typename:std::string
Dimension	src/deps/basis/basis.h	/^      int Dimension() const$/;"	f	class:basis::BaseSpace	typeref:typename:int
DoDelay	src/deps/basis/mcutils/profiling_test.cpp	/^void DoDelay()$/;"	f	typeref:typename:void
EXECUTABLE	old_c/Makefile	/^EXECUTABLE = matelm.exe$/;"	m
ElapsedClocks	src/deps/basis/mcutils/profiling.h	/^    clock_t ElapsedClocks() const {$/;"	f	class:mcutils::Timer	typeref:typename:clock_t
ElapsedTime	src/deps/basis/mcutils/profiling.h	/^    double ElapsedTime() const {$/;"	f	class:mcutils::Timer	typeref:typename:double
ElapsedTime	src/deps/basis/mcutils/profiling.h	/^    double ElapsedTime() const$/;"	f	class:mcutils::SteadyTimer	typeref:typename:double
EnableCaching	src/deps/basis/mcutils/memoizer.h	/^    void EnableCaching(bool b) {cache_enabled_ = b;};$/;"	f	class:mcutils::Memoizer	typeref:typename:void
FC	config.mk	/^FC := gfortran$/;"	m
FC	src/deps/basis/config.mk	/^FC := gfortran$/;"	m
FC	src/deps/ndconfig/config-gnu-nersc.mk	/^FC := ftn$/;"	m
FC	src/deps/ndconfig/config-gnu.mk	/^FC := gfortran$/;"	m
FC	src/deps/ndconfig/config-intel-nersc.mk	/^FC := ftn$/;"	m
FC	src/deps/ndconfig/config-intel.mk	/^FC := ifort$/;"	m
Factorial	src/deps/basis/mcutils/gsl.h	/^  inline double Factorial(double x)$/;"	f	namespace:mcutils	typeref:typename:double
Factorial	src/deps/basis/mcutils/gsl.h	/^  inline double Factorial(int x)$/;"	f	namespace:mcutils	typeref:typename:double
FileExistCheck	src/deps/basis/mcutils/parsing.cpp	/^  bool FileExistCheck(const std::string& filename, bool exit_on_nonexist, bool warn_on_overwrite/;"	f	namespace:mcutils	typeref:typename:bool
FormatMatrix	src/deps/basis/mcutils/eigen.h	/^    std::string FormatMatrix(const tMatrixType& matrix, const std::string& format_string, const /;"	f	namespace:mcutils	typeref:typename:std::string
FullDimension	src/deps/basis/degenerate.h	/^      int FullDimension() const$/;"	f	class:basis::BaseDegenerateSpace	typeref:typename:int
FullOrbitalLabels	src/deps/basis/nlj_orbital.h	/^  typedef std::tuple<OrbitalSpeciesPN,int,int,HalfInt> FullOrbitalLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<OrbitalSpeciesPN,int,int,HalfInt>
FullSingleParticleStateLabels	src/deps/basis/m_scheme.h	/^  typedef std::tuple<OrbitalSpeciesPN,int,int,HalfInt,HalfInt> FullSingleParticleStateLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<OrbitalSpeciesPN,int,int,HalfInt,HalfInt>
GatherOperatorRelativeCMLSJTNToRelativeCMLSJT	src/deps/basis/lsjt_operator.cpp	/^  void GatherOperatorRelativeCMLSJTNToRelativeCMLSJT($/;"	f	namespace:basis	typeref:typename:void
GatherOperatorTwoBodyJJJTNToTwoBodyJJJT	src/deps/basis/jjjt_operator.cpp	/^  void GatherOperatorTwoBodyJJJTNToTwoBodyJJJT($/;"	f	namespace:basis	typeref:typename:void
GatherOperatorTwoBodyLSJTNToTwoBodyLSJT	src/deps/basis/lsjt_operator.cpp	/^  void GatherOperatorTwoBodyLSJTNToTwoBodyLSJT($/;"	f	namespace:basis	typeref:typename:void
GetHypersector	src/deps/basis/hypersector.h	/^      const HypersectorType& GetHypersector(int hypersector_index) const$/;"	f	class:basis::BaseHypersectors	typeref:typename:const HypersectorType &
GetLine	src/deps/basis/mcutils/parsing.h	/^  inline std::basic_istream<CharT, Traits>& GetLine($/;"	f	namespace:mcutils	typeref:typename:std::basic_istream<CharT,Traits> &
GetLine	src/deps/basis/mcutils/parsing.h	/^  inline std::basic_istream<CharT,Traits>& GetLine($/;"	f	namespace:mcutils	typeref:typename:std::basic_istream<CharT,Traits> &
GetNumHyperoperatorME	src/deps/basis/hypersector.h	/^  long int GetNumHyperoperatorME($/;"	f	namespace:basis	typeref:typename:long int
GetOrbital1	src/deps/basis/jjjpn_scheme.h	/^    const OrbitalStatePN GetOrbital1() const {return OrbitalStatePN(orbital_subspace1(),index1()/;"	f	class:basis::TwoBodyStateJJJPN	typeref:typename:const OrbitalStatePN
GetOrbital2	src/deps/basis/jjjpn_scheme.h	/^    const OrbitalStatePN GetOrbital2() const {return OrbitalStatePN(orbital_subspace2(),index2()/;"	f	class:basis::TwoBodyStateJJJPN	typeref:typename:const OrbitalStatePN
GetSector	src/deps/basis/basis.h	/^      const SectorType& GetSector(int sector_index) const$/;"	f	class:basis::BaseSectors	typeref:typename:const SectorType &
GetStateLabels	src/deps/basis/basis.h	/^      const StateLabelsType& GetStateLabels() const$/;"	f	class:basis::BaseState	typeref:typename:DEPRECATED ("")const StateLabelsType &
GetStateLabels	src/deps/basis/basis.h	/^    const StateLabelsType& GetStateLabels(int index) const$/;"	f	class:basis::BaseSubspace	typeref:typename:const StateLabelsType &
GetSubspace	src/deps/basis/basis.h	/^      const SubspaceType& GetSubspace(int i) const$/;"	f	class:basis::BaseSpace	typeref:typename:const SubspaceType &
GetSubspaceLabels	src/deps/basis/basis.h	/^    const SubspaceLabelsType& GetSubspaceLabels() const$/;"	f	class:basis::BaseSubspace	typeref:typename:DEPRECATED ("")const SubspaceLabelsType &
GetValue	src/deps/basis/mcutils/memoizer.h	/^    T Memoizer<Key,T,Compare,Alloc>::GetValue() const$/;"	f	class:mcutils::Memoizer	typeref:typename:T
HALFINT_H_	src/deps/basis/am/halfint.h	/^#define HALFINT_H_$/;"	d
HBARC	old_c/constants.c	/^const double HBARC = 197.3269602; \/\/ (in MeV fm)$/;"	v	typeref:typename:const double
HBARC	src/constants.h	/^    const double HBARC = 197.3269602; \/\/ (in MeV fm)$/;"	v	namespace:constants	typeref:typename:const double
HalfInt	src/deps/basis/am/halfint.h	/^  HalfInt() : twice_value_(0) {};$/;"	f	class:HalfInt
HalfInt	src/deps/basis/am/halfint.h	/^class HalfInt$/;"	c
HalfInt	src/deps/basis/am/halfint.h	/^inline HalfInt::HalfInt(int numerator, int denominator)$/;"	f	class:HalfInt
HalfInt	src/deps/basis/am/halfint.h	/^inline HalfInt::HalfInt(int value)$/;"	f	class:HalfInt
Hat	src/deps/basis/am/am_scratch.cpp	/^double Hat(const HalfInt& j)$/;"	f	typeref:typename:double
Hat	src/deps/basis/am/halfint.h	/^double Hat(const HalfInt& j)$/;"	f	typeref:typename:double
Hat	src/deps/basis/am/halfint.h	/^double Hat(int j)$/;"	f	typeref:typename:double
Hat2	src/deps/basis/am/am_scratch.cpp	/^double Hat2(int two_j)$/;"	f	typeref:typename:double
Hat2	src/deps/basis/am/wigner_gsl_twice.h	/^    double Hat2(int two_j)$/;"	f	namespace:am	typeref:typename:double
HypersectorType	src/deps/basis/hypersector.h	/^      typedef BaseHypersector<SubspaceType,OperatorSubspaceType> HypersectorType;$/;"	t	class:basis::BaseHypersectors	typeref:typename:BaseHypersector<SubspaceType,OperatorSubspaceType>
IdentityTestOLD	src/deps/basis/lsjt_operator_test.cpp	/^void IdentityTestOLD()$/;"	f	typeref:typename:void
IsDiagonal	src/deps/basis/basis.h	/^      inline bool IsDiagonal() const$/;"	f	class:basis::BaseSector	typeref:typename:bool
IsDiagonal	src/deps/basis/hypersector.h	/^      inline bool IsDiagonal() const$/;"	f	class:basis::BaseHypersector	typeref:typename:bool
IsInteger	src/deps/basis/am/halfint.h	/^  bool IsInteger() const$/;"	f	class:HalfInt	typeref:typename:bool
IsInteger	src/deps/basis/am/halfint.h	/^inline bool IsInteger(const HalfInt& h)$/;"	f	typeref:typename:bool
IsOscillatorLike_	src/deps/basis/nlj_orbital.cpp	/^  bool OrbitalSpaceLJPN::IsOscillatorLike_() const$/;"	f	class:basis::OrbitalSpaceLJPN	typeref:typename:bool
IsOscillatorLike_	src/deps/basis/nlj_orbital.cpp	/^  bool OrbitalSpacePN::IsOscillatorLike_() const$/;"	f	class:basis::OrbitalSpacePN	typeref:typename:bool
IsOscillatorLike_	src/deps/basis/nlj_orbital.cpp	/^  bool OrbitalSubspaceLJPN::IsOscillatorLike_() const$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:bool
IsOscillatorLike_	src/deps/basis/nlj_orbital.cpp	/^  bool OrbitalSubspacePN::IsOscillatorLike_() const$/;"	f	class:basis::OrbitalSubspacePN	typeref:typename:bool
IsUpperTriangle	src/deps/basis/basis.h	/^      inline bool IsUpperTriangle() const$/;"	f	class:basis::BaseSector	typeref:typename:bool
IsUpperTriangle	src/deps/basis/hypersector.h	/^      inline bool IsUpperTriangle() const$/;"	f	class:basis::BaseHypersector	typeref:typename:bool
IsZero	src/deps/basis/mcutils/eigen.h	/^    bool IsZero(tMatrixType& matrix,double tolerance=1e-10)$/;"	f	namespace:mcutils	typeref:typename:bool
J	src/deps/basis/degenerate_test.cpp	/^      int J() const {return std::get<2>(labels_);}$/;"	f	class:basis::RelativeDegenerateSubspaceLSJT	typeref:typename:int	file:
J	src/deps/basis/degenerate_test.cpp	/^    int J() const {return subspace().J();}$/;"	f	class:basis::RelativeDegenerateStateLSJT	typeref:typename:int	file:
J	src/deps/basis/jjjpn_scheme.h	/^      int J() const {return std::get<1>(labels_);}$/;"	f	class:basis::TwoBodySubspaceJJJPN	typeref:typename:int
J	src/deps/basis/jjjpn_scheme.h	/^    int J() const {return subspace().J();}$/;"	f	class:basis::TwoBodyStateJJJPN	typeref:typename:int
J	src/deps/basis/jjjt_scheme.h	/^      int J() const {return std::get<0>(labels_);}$/;"	f	class:basis::TwoBodySubspaceJJJT	typeref:typename:int
J	src/deps/basis/jjjt_scheme.h	/^      int J() const {return std::get<0>(labels_);}$/;"	f	class:basis::TwoBodySubspaceJJJTN	typeref:typename:int
J	src/deps/basis/jjjt_scheme.h	/^    int J() const {return subspace().J();}$/;"	f	class:basis::TwoBodyStateJJJT	typeref:typename:int
J	src/deps/basis/jjjt_scheme.h	/^    int J() const {return subspace().J();}$/;"	f	class:basis::TwoBodyStateJJJTN	typeref:typename:int
J	src/deps/basis/lsjt_scheme.h	/^      int J() const {return std::get<2>(labels_);}$/;"	f	class:basis::RelativeCMSubspaceLSJT	typeref:typename:int
J	src/deps/basis/lsjt_scheme.h	/^      int J() const {return std::get<2>(labels_);}$/;"	f	class:basis::RelativeCMSubspaceLSJTN	typeref:typename:int
J	src/deps/basis/lsjt_scheme.h	/^      int J() const {return std::get<2>(labels_);}$/;"	f	class:basis::RelativeSubspaceLSJT	typeref:typename:int
J	src/deps/basis/lsjt_scheme.h	/^      int J() const {return std::get<2>(labels_);}$/;"	f	class:basis::TwoBodySubspaceLSJT	typeref:typename:int
J	src/deps/basis/lsjt_scheme.h	/^      int J() const {return std::get<2>(labels_);}$/;"	f	class:basis::TwoBodySubspaceLSJTN	typeref:typename:int
J	src/deps/basis/lsjt_scheme.h	/^    int J() const {return subspace().J();}$/;"	f	class:basis::RelativeCMStateLSJT	typeref:typename:int
J	src/deps/basis/lsjt_scheme.h	/^    int J() const {return subspace().J();}$/;"	f	class:basis::RelativeCMStateLSJTN	typeref:typename:int
J	src/deps/basis/lsjt_scheme.h	/^    int J() const {return subspace().J();}$/;"	f	class:basis::RelativeStateLSJT	typeref:typename:int
J	src/deps/basis/lsjt_scheme.h	/^    int J() const {return subspace().J();}$/;"	f	class:basis::TwoBodyStateLSJT	typeref:typename:int
J	src/deps/basis/lsjt_scheme.h	/^    int J() const {return subspace().J();}$/;"	f	class:basis::TwoBodyStateLSJTN	typeref:typename:int
J0	src/deps/basis/jjjpn_scheme.h	/^    int J0() const {return J0_;};$/;"	f	class:basis::TwoBodySectorsJJJPN	typeref:typename:int
J0	src/deps/basis/jt_operator.h	/^    int J0, g0, T0_min, T0_max;$/;"	m	struct:basis::OperatorLabelsJT	typeref:typename:int
J0_	src/deps/basis/jjjpn_scheme.h	/^    int J0_, g0_, Tz0_;$/;"	m	class:basis::TwoBodySectorsJJJPN	typeref:typename:int
Jmax	src/deps/basis/degenerate_test.cpp	/^    int Jmax() const {return Jmax_;}$/;"	f	class:basis::RelativeDegenerateSpaceLSJT	typeref:typename:int	file:
Jmax	src/deps/basis/lsjt_operator.h	/^    int Nmax, Jmax;$/;"	m	struct:basis::RelativeOperatorParametersLSJT	typeref:typename:int
Jmax	src/deps/basis/lsjt_scheme.h	/^    int Jmax() const {return Jmax_;}$/;"	f	class:basis::RelativeSpaceLSJT	typeref:typename:int
Jmax_	src/deps/basis/degenerate_test.cpp	/^    int Nmax_, Jmax_;$/;"	m	class:basis::RelativeDegenerateSpaceLSJT	typeref:typename:int	file:
Jmax_	src/deps/basis/lsjt_scheme.h	/^    int Nmax_, Jmax_;$/;"	m	class:basis::RelativeSpaceLSJT	typeref:typename:int
Key	src/deps/basis/basis.h	/^      inline KeyType Key() const$/;"	f	class:basis::BaseSector	typeref:typename:KeyType
Key	src/deps/basis/hypersector.h	/^      inline KeyType Key() const$/;"	f	class:basis::BaseHypersector	typeref:typename:KeyType
Key	src/deps/basis/nlj_orbital.h	/^    inline FullOrbitalLabels Key() const {$/;"	f	struct:basis::OrbitalPNInfo	typeref:typename:FullOrbitalLabels
KeyType	src/deps/basis/basis.h	/^      typedef std::tuple<int,int,int> KeyType;$/;"	t	class:basis::BaseSector	typeref:typename:std::tuple<int,int,int>
KeyType	src/deps/basis/hypersector.h	/^      typedef std::tuple<int,int,int,int> KeyType;$/;"	t	class:basis::BaseHypersector	typeref:typename:std::tuple<int,int,int,int>
Known	src/deps/basis/mcutils/memoizer.h	/^    bool Known(const Key& x) const {return (values_.count(x) == 1);}$/;"	f	class:mcutils::Memoizer	typeref:typename:bool
KroneckerDelta	src/deps/basis/mcutils/arithmetic.h	/^    int KroneckerDelta(const T& x, const T& y)$/;"	f	namespace:mcutils	typeref:typename:int
L	old_c/tdho.h	/^struct q_nums { int n; int l; int N; int L; int s;$/;"	m	struct:q_nums	typeref:typename:int
L	src/deps/basis/degenerate_test.cpp	/^      int L() const {return std::get<0>(labels_);}$/;"	f	class:basis::RelativeDegenerateSubspaceLSJT	typeref:typename:int	file:
L	src/deps/basis/degenerate_test.cpp	/^    int L() const {return subspace().L();}$/;"	f	class:basis::RelativeDegenerateStateLSJT	typeref:typename:int	file:
L	src/deps/basis/lsjt_scheme.h	/^      int L() const {return std::get<0>(labels_);}$/;"	f	class:basis::RelativeCMSubspaceLSJT	typeref:typename:int
L	src/deps/basis/lsjt_scheme.h	/^      int L() const {return std::get<0>(labels_);}$/;"	f	class:basis::RelativeCMSubspaceLSJTN	typeref:typename:int
L	src/deps/basis/lsjt_scheme.h	/^      int L() const {return std::get<0>(labels_);}$/;"	f	class:basis::RelativeSubspaceLSJT	typeref:typename:int
L	src/deps/basis/lsjt_scheme.h	/^      int L() const {return std::get<0>(labels_);}$/;"	f	class:basis::TwoBodySubspaceLSJT	typeref:typename:int
L	src/deps/basis/lsjt_scheme.h	/^      int L() const {return std::get<0>(labels_);}$/;"	f	class:basis::TwoBodySubspaceLSJTN	typeref:typename:int
L	src/deps/basis/lsjt_scheme.h	/^    int L() const {return subspace().L();}$/;"	f	class:basis::RelativeCMStateLSJT	typeref:typename:int
L	src/deps/basis/lsjt_scheme.h	/^    int L() const {return subspace().L();}$/;"	f	class:basis::RelativeCMStateLSJTN	typeref:typename:int
L	src/deps/basis/lsjt_scheme.h	/^    int L() const {return subspace().L();}$/;"	f	class:basis::RelativeStateLSJT	typeref:typename:int
L	src/deps/basis/lsjt_scheme.h	/^    int L() const {return subspace().L();}$/;"	f	class:basis::TwoBodyStateLSJT	typeref:typename:int
L	src/deps/basis/lsjt_scheme.h	/^    int L() const {return subspace().L();}$/;"	f	class:basis::TwoBodyStateLSJTN	typeref:typename:int
LFLAGS	old_c/Makefile	/^LFLAGS = -lgomp -lm -lgsl -lgslcblas$/;"	m
LIBDIR	old_c/Makefile	/^LIBDIR = lib$/;"	m
LJCoupledSphericalHarmonicCRME	src/deps/basis/am/rme.h	/^  double LJCoupledSphericalHarmonicCRME($/;"	f	namespace:am	typeref:typename:double
LJCoupledSphericalHarmonicYRME	src/deps/basis/am/rme.h	/^  double LJCoupledSphericalHarmonicYRME($/;"	f	namespace:am	typeref:typename:double
LabelStr	src/deps/basis/degenerate_test.cpp	/^  std::string RelativeDegenerateStateLSJT::LabelStr() const$/;"	f	class:basis::RelativeDegenerateStateLSJT	typeref:typename:std::string
LabelStr	src/deps/basis/degenerate_test.cpp	/^  std::string RelativeDegenerateSubspaceLSJT::LabelStr() const$/;"	f	class:basis::RelativeDegenerateSubspaceLSJT	typeref:typename:std::string
LabelStr	src/deps/basis/jjjpn_scheme.cpp	/^  std::string TwoBodyStateJJJPN::LabelStr() const$/;"	f	class:basis::TwoBodyStateJJJPN	typeref:typename:std::string
LabelStr	src/deps/basis/jjjpn_scheme.cpp	/^  std::string TwoBodySubspaceJJJPN::LabelStr() const$/;"	f	class:basis::TwoBodySubspaceJJJPN	typeref:typename:std::string
LabelStr	src/deps/basis/jjjt_scheme.cpp	/^  std::string TwoBodySubspaceJJJT::LabelStr() const$/;"	f	class:basis::TwoBodySubspaceJJJT	typeref:typename:std::string
LabelStr	src/deps/basis/jjjt_scheme.cpp	/^  std::string TwoBodySubspaceJJJTN::LabelStr() const$/;"	f	class:basis::TwoBodySubspaceJJJTN	typeref:typename:std::string
LabelStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string RelativeCMSubspaceLSJT::LabelStr() const$/;"	f	class:basis::RelativeCMSubspaceLSJT	typeref:typename:std::string
LabelStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string RelativeCMSubspaceLSJTN::LabelStr() const$/;"	f	class:basis::RelativeCMSubspaceLSJTN	typeref:typename:std::string
LabelStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string RelativeSubspaceLSJT::LabelStr() const$/;"	f	class:basis::RelativeSubspaceLSJT	typeref:typename:std::string
LabelStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string TwoBodySubspaceLSJT::LabelStr() const$/;"	f	class:basis::TwoBodySubspaceLSJT	typeref:typename:std::string
LabelStr	src/deps/basis/lsjt_scheme.cpp	/^  std::string TwoBodySubspaceLSJTN::LabelStr() const$/;"	f	class:basis::TwoBodySubspaceLSJTN	typeref:typename:std::string
LabelStr	src/deps/basis/m_scheme.cpp	/^  std::string SingleParticleStatePN::LabelStr() const$/;"	f	class:basis::SingleParticleStatePN	typeref:typename:std::string
LabelStr	src/deps/basis/m_scheme.cpp	/^  std::string SingleParticleSubspacePN::LabelStr() const$/;"	f	class:basis::SingleParticleSubspacePN	typeref:typename:std::string
LabelStr	src/deps/basis/nlj_orbital.cpp	/^  std::string OrbitalStatePN::LabelStr() const$/;"	f	class:basis::OrbitalStatePN	typeref:typename:std::string
LabelStr	src/deps/basis/nlj_orbital.cpp	/^  std::string OrbitalSubspaceLJPN::LabelStr() const {$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:std::string
LabelStr	src/deps/basis/nlj_orbital.cpp	/^  std::string OrbitalSubspacePN::LabelStr() const$/;"	f	class:basis::OrbitalSubspacePN	typeref:typename:std::string
LookUpHypersectorIndex	src/deps/basis/hypersector.h	/^      int LookUpHypersectorIndex($/;"	f	class:basis::BaseHypersectors	typeref:typename:int
LookUpSectorIndex	src/deps/basis/basis.h	/^      int LookUpSectorIndex(const typename SectorType::KeyType& key) const$/;"	f	class:basis::BaseSectors	typeref:typename:DEPRECATED ("")int
LookUpSectorIndex	src/deps/basis/basis.h	/^      int LookUpSectorIndex(int bra_subspace_index, int ket_subspace_index, int multiplicity_ind/;"	f	class:basis::BaseSectors	typeref:typename:int
LookUpStateIndex	src/deps/basis/basis.h	/^    int LookUpStateIndex(const StateLabelsType& state_labels) const$/;"	f	class:basis::BaseSubspace	typeref:typename:int
LookUpSubspace	src/deps/basis/basis.h	/^      const SubspaceType& LookUpSubspace(const typename SubspaceType::SubspaceLabelsType& subspa/;"	f	class:basis::BaseSpace	typeref:typename:const SubspaceType &
LookUpSubspaceIndex	src/deps/basis/basis.h	/^      int LookUpSubspaceIndex(const typename SubspaceType::SubspaceLabelsType& subspace_labels) /;"	f	class:basis::BaseSpace	typeref:typename:int
MAKEFILE_CONFIG_DIR	makefile	/^MAKEFILE_CONFIG_DIR ?= .$/;"	m
MAKEFILE_CONFIG_DIR	src/deps/basis/makefile	/^MAKEFILE_CONFIG_DIR ?= .$/;"	m
MAKEFILE_CONFIG_DIR	src/deps/ndmakefile/makefile	/^MAKEFILE_CONFIG_DIR ?= .$/;"	m
MAKEFILE_STANDALONE	src/deps/basis/am/project.mk	/^MAKEFILE_STANDALONE = true$/;"	m
MAKEFILE_STANDALONE	src/deps/basis/mcutils/project.mk	/^MAKEFILE_STANDALONE = true$/;"	m
MAKEFILE_STANDALONE	src/deps/basis/project.mk	/^MAKEFILE_STANDALONE = true$/;"	m
MCUTILS_ARITHMETIC_H_	src/deps/basis/mcutils/arithmetic.h	/^#define MCUTILS_ARITHMETIC_H_$/;"	d
MCUTILS_DEPRECATED_H_	src/deps/basis/mcutils/deprecated.h	/^#define MCUTILS_DEPRECATED_H_$/;"	d
MCUTILS_EIGEN_H_	src/deps/basis/mcutils/eigen.h	/^#define MCUTILS_EIGEN_H_$/;"	d
MCUTILS_GSL_H_	src/deps/basis/mcutils/gsl.h	/^#define MCUTILS_GSL_H_$/;"	d
MCUTILS_IO_H_	src/deps/basis/mcutils/io.h	/^#define MCUTILS_IO_H_$/;"	d
MCUTILS_MEMOIZER_H_	src/deps/basis/mcutils/memoizer.h	/^#define MCUTILS_MEMOIZER_H_$/;"	d
MCUTILS_PARSING_H_	src/deps/basis/mcutils/parsing.h	/^#define MCUTILS_PARSING_H_$/;"	d
MCUTILS_VECTOR_TUPLE_H_	src/deps/basis/mcutils/vector_tuple.h	/^#define MCUTILS_VECTOR_TUPLE_H_$/;"	d
MEMOIZE	src/deps/basis/mcutils/memoizer.h	/^#define MEMOIZE(/;"	d
MFDnOrbitalFormat	src/deps/basis/nlj_orbital.cpp	/^  enum class MFDnOrbitalFormat : int {kVersion15099=15099};$/;"	g	namespace:basis	typeref:typename:int	file:
MKDIR	makefile	/^MKDIR := mkdir -p$/;"	m
MKDIR	src/deps/basis/makefile	/^MKDIR := mkdir -p$/;"	m
MKDIR	src/deps/ndmakefile/makefile	/^MKDIR := mkdir -p$/;"	m
MKDIR_P	old_c/Makefile	/^MKDIR_P = mkdir -p$/;"	m
MatrixElementIndicesLJPN	src/deps/basis/nlj_operator.cpp	/^  MatrixElementIndicesLJPN($/;"	f	namespace:basis	typeref:typename:std::tuple<int,int,int>
MatrixElementLJPN	src/deps/basis/nlj_operator.cpp	/^  double MatrixElementLJPN($/;"	f	namespace:basis	typeref:typename:double
MatrixFile	main.py	/^class MatrixFile:$/;"	c
MatrixVector	src/deps/basis/operator.h	/^  typedef basis::OperatorBlocks<double> MatrixVector;$/;"	t	namespace:basis	typeref:typename:basis::OperatorBlocks<double>
Memoizer	src/deps/basis/mcutils/memoizer.h	/^    Memoizer() : cache_enabled_(true) {};$/;"	f	class:mcutils::Memoizer
Memoizer	src/deps/basis/mcutils/memoizer.h	/^    Memoizer(bool b) {cache_enabled_ = b;};$/;"	f	class:mcutils::Memoizer
Memoizer	src/deps/basis/mcutils/memoizer.h	/^    class Memoizer{$/;"	c	namespace:mcutils
N	old_c/tdho.h	/^struct q_nums { int n; int l; int N; int L; int s;$/;"	m	struct:q_nums	typeref:typename:int
N	src/deps/basis/degenerate_test.cpp	/^    int N() const {return std::get<0>(labels());}$/;"	f	class:basis::RelativeDegenerateStateLSJT	typeref:typename:int	file:
N	src/deps/basis/jjjt_scheme.h	/^      int N() const {return std::get<3>(labels_);}  \/\/ (MODIFICATION for subspacing by N)$/;"	f	class:basis::TwoBodySubspaceJJJTN	typeref:typename:int
N	src/deps/basis/jjjt_scheme.h	/^    int N() const {return N1()+N2();}$/;"	f	class:basis::TwoBodyStateJJJT	typeref:typename:int
N	src/deps/basis/jjjt_scheme.h	/^    int N() const {return N1()+N2();}$/;"	f	class:basis::TwoBodyStateJJJTN	typeref:typename:int
N	src/deps/basis/lsjt_scheme.h	/^      int N() const {return std::get<5>(labels_);}  \/\/ (MODIFICATION for subspacing by N)$/;"	f	class:basis::RelativeCMSubspaceLSJTN	typeref:typename:int
N	src/deps/basis/lsjt_scheme.h	/^      int N() const {return std::get<5>(labels_);}  \/\/ (MODIFICATION for subspacing by N)$/;"	f	class:basis::TwoBodySubspaceLSJTN	typeref:typename:int
N	src/deps/basis/lsjt_scheme.h	/^    int N() const {return  Nr()+Nc();}$/;"	f	class:basis::RelativeCMStateLSJT	typeref:typename:int
N	src/deps/basis/lsjt_scheme.h	/^    int N() const {return  Nr()+Nc();}$/;"	f	class:basis::RelativeCMStateLSJTN	typeref:typename:int
N	src/deps/basis/lsjt_scheme.h	/^    int N() const {return N1()+N2();}$/;"	f	class:basis::TwoBodyStateLSJT	typeref:typename:int
N	src/deps/basis/lsjt_scheme.h	/^    int N() const {return N1()+N2();}$/;"	f	class:basis::TwoBodyStateLSJTN	typeref:typename:int
N	src/deps/basis/lsjt_scheme.h	/^    int N() const {return std::get<0>(labels());}$/;"	f	class:basis::RelativeStateLSJT	typeref:typename:int
N	src/deps/basis/m_scheme.h	/^      int N() const {return 2*n()+l();}$/;"	f	class:basis::SingleParticleStatePN	typeref:typename:int
N	src/deps/basis/nlj_orbital.h	/^    int N() const {return 2*n()+l();}$/;"	f	class:basis::OrbitalStateLJPN	typeref:typename:int
N	src/deps/basis/nlj_orbital.h	/^    int N() const {return 2*n()+l();}$/;"	f	class:basis::OrbitalStatePN	typeref:typename:int
N1	src/deps/basis/jjjt_scheme.h	/^    int N1() const {return std::get<0>(labels());}$/;"	f	class:basis::TwoBodyStateJJJT	typeref:typename:int
N1	src/deps/basis/jjjt_scheme.h	/^    int N1() const {return std::get<0>(labels());}$/;"	f	class:basis::TwoBodyStateJJJTN	typeref:typename:int
N1	src/deps/basis/lsjt_scheme.h	/^    int N1() const {return std::get<0>(labels());}$/;"	f	class:basis::TwoBodyStateLSJT	typeref:typename:int
N1	src/deps/basis/lsjt_scheme.h	/^    int N1() const {return std::get<0>(labels());}$/;"	f	class:basis::TwoBodyStateLSJTN	typeref:typename:int
N1max	src/deps/basis/jjjt_scheme.h	/^      int N1max() const {return N1max_;}$/;"	f	class:basis::TwoBodySubspaceJJJT	typeref:typename:int
N1max	src/deps/basis/jjjt_scheme.h	/^      int N1max() const {return N1max_;}$/;"	f	class:basis::TwoBodySubspaceJJJTN	typeref:typename:int
N1max	src/deps/basis/jjjt_scheme.h	/^    int N1max() const {return N1max_;}$/;"	f	class:basis::TwoBodySpaceJJJT	typeref:typename:int
N1max	src/deps/basis/jjjt_scheme.h	/^    int N1max() const {return N1max_;}$/;"	f	class:basis::TwoBodySpaceJJJTN	typeref:typename:int
N1max	src/deps/basis/lsjt_scheme.h	/^      int N1max() const {return N1max_;}$/;"	f	class:basis::TwoBodySubspaceLSJT	typeref:typename:int
N1max	src/deps/basis/lsjt_scheme.h	/^      int N1max() const {return N1max_;}$/;"	f	class:basis::TwoBodySubspaceLSJTN	typeref:typename:int
N1max	src/deps/basis/lsjt_scheme.h	/^    int N1max() const {return N1max_;}$/;"	f	class:basis::TwoBodySpaceLSJT	typeref:typename:int
N1max	src/deps/basis/lsjt_scheme.h	/^    int N1max() const {return N1max_;}$/;"	f	class:basis::TwoBodySpaceLSJTN	typeref:typename:int
N1max_	src/deps/basis/jjjt_scheme.h	/^      int N1max_, N2max_;$/;"	m	class:basis::TwoBodySubspaceJJJT	typeref:typename:int
N1max_	src/deps/basis/jjjt_scheme.h	/^      int N1max_, N2max_;$/;"	m	class:basis::TwoBodySubspaceJJJTN	typeref:typename:int
N1max_	src/deps/basis/jjjt_scheme.h	/^    int N1max_, N2max_;$/;"	m	class:basis::TwoBodySpaceJJJT	typeref:typename:int
N1max_	src/deps/basis/jjjt_scheme.h	/^    int N1max_, N2max_;$/;"	m	class:basis::TwoBodySpaceJJJTN	typeref:typename:int
N1max_	src/deps/basis/lsjt_scheme.h	/^      int N1max_, N2max_;$/;"	m	class:basis::TwoBodySubspaceLSJT	typeref:typename:int
N1max_	src/deps/basis/lsjt_scheme.h	/^      int N1max_, N2max_;$/;"	m	class:basis::TwoBodySubspaceLSJTN	typeref:typename:int
N1max_	src/deps/basis/lsjt_scheme.h	/^    int N1max_, N2max_;$/;"	m	class:basis::TwoBodySpaceLSJT	typeref:typename:int
N1max_	src/deps/basis/lsjt_scheme.h	/^    int N1max_, N2max_;$/;"	m	class:basis::TwoBodySpaceLSJTN	typeref:typename:int
N2	src/deps/basis/jjjt_scheme.h	/^    int N2() const {return std::get<2>(labels());}$/;"	f	class:basis::TwoBodyStateJJJT	typeref:typename:int
N2	src/deps/basis/jjjt_scheme.h	/^    int N2() const {return std::get<2>(labels());}$/;"	f	class:basis::TwoBodyStateJJJTN	typeref:typename:int
N2	src/deps/basis/lsjt_scheme.h	/^    int N2() const {return std::get<2>(labels());}$/;"	f	class:basis::TwoBodyStateLSJT	typeref:typename:int
N2	src/deps/basis/lsjt_scheme.h	/^    int N2() const {return std::get<2>(labels());}$/;"	f	class:basis::TwoBodyStateLSJTN	typeref:typename:int
N2max	src/deps/basis/jjjt_scheme.h	/^      int N2max() const {return N2max_;}$/;"	f	class:basis::TwoBodySubspaceJJJT	typeref:typename:int
N2max	src/deps/basis/jjjt_scheme.h	/^      int N2max() const {return N2max_;}$/;"	f	class:basis::TwoBodySubspaceJJJTN	typeref:typename:int
N2max	src/deps/basis/jjjt_scheme.h	/^    int N2max() const {return N2max_;}$/;"	f	class:basis::TwoBodySpaceJJJT	typeref:typename:int
N2max	src/deps/basis/jjjt_scheme.h	/^    int N2max() const {return N2max_;}$/;"	f	class:basis::TwoBodySpaceJJJTN	typeref:typename:int
N2max	src/deps/basis/lsjt_scheme.h	/^      int N2max() const {return N2max_;}$/;"	f	class:basis::TwoBodySubspaceLSJT	typeref:typename:int
N2max	src/deps/basis/lsjt_scheme.h	/^      int N2max() const {return N2max_;}$/;"	f	class:basis::TwoBodySubspaceLSJTN	typeref:typename:int
N2max	src/deps/basis/lsjt_scheme.h	/^    int N2max() const {return N2max_;}$/;"	f	class:basis::TwoBodySpaceLSJT	typeref:typename:int
N2max	src/deps/basis/lsjt_scheme.h	/^    int N2max() const {return N2max_;}$/;"	f	class:basis::TwoBodySpaceLSJTN	typeref:typename:int
N2max_	src/deps/basis/jjjt_scheme.h	/^      int N1max_, N2max_;$/;"	m	class:basis::TwoBodySubspaceJJJT	typeref:typename:int
N2max_	src/deps/basis/jjjt_scheme.h	/^      int N1max_, N2max_;$/;"	m	class:basis::TwoBodySubspaceJJJTN	typeref:typename:int
N2max_	src/deps/basis/jjjt_scheme.h	/^    int N1max_, N2max_;$/;"	m	class:basis::TwoBodySpaceJJJT	typeref:typename:int
N2max_	src/deps/basis/jjjt_scheme.h	/^    int N1max_, N2max_;$/;"	m	class:basis::TwoBodySpaceJJJTN	typeref:typename:int
N2max_	src/deps/basis/lsjt_scheme.h	/^      int N1max_, N2max_;$/;"	m	class:basis::TwoBodySubspaceLSJT	typeref:typename:int
N2max_	src/deps/basis/lsjt_scheme.h	/^      int N1max_, N2max_;$/;"	m	class:basis::TwoBodySubspaceLSJTN	typeref:typename:int
N2max_	src/deps/basis/lsjt_scheme.h	/^    int N1max_, N2max_;$/;"	m	class:basis::TwoBodySpaceLSJT	typeref:typename:int
N2max_	src/deps/basis/lsjt_scheme.h	/^    int N1max_, N2max_;$/;"	m	class:basis::TwoBodySpaceLSJTN	typeref:typename:int
N_	src/deps/basis/jjjt_scheme.h	/^      int N_;  \/\/ (MODIFICATION for subspacing by N)$/;"	m	class:basis::TwoBodySubspaceJJJTN	typeref:typename:int
N_	src/deps/basis/lsjt_scheme.h	/^      int N_;  \/\/ (MODIFICATION for subspacing by N)$/;"	m	class:basis::RelativeCMSubspaceLSJTN	typeref:typename:int
N_	src/deps/basis/lsjt_scheme.h	/^      int N_;  \/\/ (MODIFICATION for subspacing by N)$/;"	m	class:basis::TwoBodySubspaceLSJTN	typeref:typename:int
Name	src/chiral.h	/^        enum class Name$/;"	g	class:chiral::Operator
Nc	src/deps/basis/lsjt_scheme.h	/^    int Nc() const {return std::get<2>(labels());}$/;"	f	class:basis::RelativeCMStateLSJT	typeref:typename:int
Nc	src/deps/basis/lsjt_scheme.h	/^    int Nc() const {return std::get<2>(labels());}$/;"	f	class:basis::RelativeCMStateLSJTN	typeref:typename:int
Nmax	src/deps/basis/degenerate_test.cpp	/^      int Nmax() const {return Nmax_;}$/;"	f	class:basis::RelativeDegenerateSubspaceLSJT	typeref:typename:int	file:
Nmax	src/deps/basis/degenerate_test.cpp	/^    int Nmax() const {return Nmax_;}$/;"	f	class:basis::RelativeDegenerateSpaceLSJT	typeref:typename:int	file:
Nmax	src/deps/basis/lsjt_operator.h	/^    int Nmax, Jmax;$/;"	m	struct:basis::RelativeOperatorParametersLSJT	typeref:typename:int
Nmax	src/deps/basis/lsjt_operator.h	/^    int Nmax;$/;"	m	struct:basis::RelativeCMOperatorParametersLSJT	typeref:typename:int
Nmax	src/deps/basis/lsjt_scheme.h	/^      int Nmax() const {return Nmax_;}$/;"	f	class:basis::RelativeCMSubspaceLSJT	typeref:typename:int
Nmax	src/deps/basis/lsjt_scheme.h	/^      int Nmax() const {return Nmax_;}$/;"	f	class:basis::RelativeSubspaceLSJT	typeref:typename:int
Nmax	src/deps/basis/lsjt_scheme.h	/^    int Nmax() const {return Nmax_;}$/;"	f	class:basis::RelativeCMSpaceLSJT	typeref:typename:int
Nmax	src/deps/basis/lsjt_scheme.h	/^    int Nmax() const {return Nmax_;}$/;"	f	class:basis::RelativeCMSpaceLSJTN	typeref:typename:int
Nmax	src/deps/basis/lsjt_scheme.h	/^    int Nmax() const {return Nmax_;}$/;"	f	class:basis::RelativeSpaceLSJT	typeref:typename:int
Nmax	src/deps/basis/m_scheme.h	/^      int Nmax() const {assert(is_oscillator_like()); return Nmax_;}$/;"	f	class:basis::SingleParticleSubspacePN	typeref:typename:int
Nmax	src/deps/basis/m_scheme.h	/^    int Nmax() const {assert(is_oscillator_like()); return Nmax_;}$/;"	f	class:basis::SingleParticleSpacePN	typeref:typename:int
Nmax	src/deps/basis/nlj_orbital.h	/^      int Nmax() const {assert(is_oscillator_like()); return Nmax_;}$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:int
Nmax	src/deps/basis/nlj_orbital.h	/^      int Nmax() const {assert(is_oscillator_like()); return Nmax_;}$/;"	f	class:basis::OrbitalSubspacePN	typeref:typename:int
Nmax	src/deps/basis/nlj_orbital.h	/^    int Nmax() const {assert(is_oscillator_like()); return Nmax_;}$/;"	f	class:basis::OrbitalSpaceLJPN	typeref:typename:int
Nmax	src/deps/basis/nlj_orbital.h	/^    int Nmax() const {assert(is_oscillator_like()); return Nmax_;}$/;"	f	class:basis::OrbitalSpacePN	typeref:typename:int
Nmax_	src/deps/basis/degenerate_test.cpp	/^      int Nmax_;$/;"	m	class:basis::RelativeDegenerateSubspaceLSJT	typeref:typename:int	file:
Nmax_	src/deps/basis/degenerate_test.cpp	/^    int Nmax_, Jmax_;$/;"	m	class:basis::RelativeDegenerateSpaceLSJT	typeref:typename:int	file:
Nmax_	src/deps/basis/lsjt_scheme.h	/^      int Nmax_;$/;"	m	class:basis::RelativeCMSubspaceLSJT	typeref:typename:int
Nmax_	src/deps/basis/lsjt_scheme.h	/^      int Nmax_;$/;"	m	class:basis::RelativeSubspaceLSJT	typeref:typename:int
Nmax_	src/deps/basis/lsjt_scheme.h	/^    int Nmax_, Jmax_;$/;"	m	class:basis::RelativeSpaceLSJT	typeref:typename:int
Nmax_	src/deps/basis/lsjt_scheme.h	/^    int Nmax_;$/;"	m	class:basis::RelativeCMSpaceLSJT	typeref:typename:int
Nmax_	src/deps/basis/lsjt_scheme.h	/^    int Nmax_;$/;"	m	class:basis::RelativeCMSpaceLSJTN	typeref:typename:int
Nmax_	src/deps/basis/m_scheme.h	/^      int Nmax_;  \/\/ only meaningful if oscillator scheme constructor used$/;"	m	class:basis::SingleParticleSubspacePN	typeref:typename:int
Nmax_	src/deps/basis/m_scheme.h	/^    int Nmax_;  \/\/ only meaningful if oscillator scheme constructor used$/;"	m	class:basis::SingleParticleSpacePN	typeref:typename:int
Nmax_	src/deps/basis/nlj_orbital.h	/^      int Nmax_;  \/\/ only meaningful if oscillator scheme constructor used$/;"	m	class:basis::OrbitalSubspaceLJPN	typeref:typename:int
Nmax_	src/deps/basis/nlj_orbital.h	/^      int Nmax_;  \/\/ only meaningful if oscillator scheme constructor used$/;"	m	class:basis::OrbitalSubspacePN	typeref:typename:int
Nmax_	src/deps/basis/nlj_orbital.h	/^    int Nmax_;  \/\/ only meaningful if oscillator scheme constructor used$/;"	m	class:basis::OrbitalSpaceLJPN	typeref:typename:int
Nmax_	src/deps/basis/nlj_orbital.h	/^    int Nmax_;  \/\/ only meaningful if oscillator scheme constructor used$/;"	m	class:basis::OrbitalSpacePN	typeref:typename:int
NonzerosInMatrix	src/deps/basis/mcutils/eigen.h	/^    int NonzerosInMatrix(tMatrixType& matrix, double tolerance=1e-10)$/;"	f	namespace:mcutils	typeref:typename:int
NormalizationConversion	src/deps/basis/many_body.h	/^  enum class NormalizationConversion {kNone, kASToNAS, kNASToAS};$/;"	g	namespace:basis
Nr	src/deps/basis/lsjt_scheme.h	/^    int Nr() const {return std::get<0>(labels());}$/;"	f	class:basis::RelativeCMStateLSJT	typeref:typename:int
Nr	src/deps/basis/lsjt_scheme.h	/^    int Nr() const {return std::get<0>(labels());}$/;"	f	class:basis::RelativeCMStateLSJTN	typeref:typename:int
OBJECTS	old_c/Makefile	/^OBJECTS = $(patsubst $(SOURCEDIR)\/%.cpp, $(BUILDDIR)\/%.o, $(SOURCES)) $(wildcard *\/*.o)$/;"	m
ONLYIF	src/deps/basis/mcutils/arithmetic.h	/^#define ONLYIF(/;"	d
OPERATOR_RC_SQ_H	src/operator_rc_sq.h	/^#define OPERATOR_RC_SQ_H$/;"	d
OneBodyOperatorLJPN	src/deps/basis/nlj_operator.h	/^  struct OneBodyOperatorLJPN$/;"	s	namespace:basis
OneBodyOperatorType	src/deps/basis/nlj_operator.h	/^  enum class OneBodyOperatorType : char {$/;"	g	namespace:basis	typeref:typename:char
OpenCheck	src/deps/basis/mcutils/parsing.cpp	/^  void OpenCheck(bool success, const std::string& filename)$/;"	f	namespace:mcutils	typeref:typename:void
Operator	src/chiral.h	/^        Operator() {}$/;"	f	class:chiral::Operator
Operator	src/chiral.h	/^    class Operator$/;"	c	namespace:chiral
OperatorBlock	src/deps/basis/operator.h	/^    using OperatorBlock = Eigen::Matrix<tFloat,Eigen::Dynamic,Eigen::Dynamic>;$/;"	t	namespace:basis	typeref:typename:Eigen::Matrix<tFloat,Eigen::Dynamic,Eigen::Dynamic>
OperatorBlocks	src/deps/basis/operator.h	/^    using OperatorBlocks = std::vector<OperatorBlock<tFloat>>;$/;"	t	namespace:basis	typeref:typename:std::vector<OperatorBlock<tFloat>>
OperatorHyperblocks	src/deps/basis/hypersector.h	/^    using OperatorHyperblocks = std::vector<std::vector<OperatorBlock<tFloat>>>;$/;"	t	namespace:basis	typeref:typename:std::vector<std::vector<OperatorBlock<tFloat>>>
OperatorLabelsJT	src/deps/basis/jt_operator.h	/^  OperatorLabelsJT()$/;"	f	struct:basis::OperatorLabelsJT
OperatorLabelsJT	src/deps/basis/jt_operator.h	/^  OperatorLabelsJT(int J0_, int g0_, int T0_min_, int T0_max_, basis::SymmetryPhaseMode symmetry/;"	f	struct:basis::OperatorLabelsJT
OperatorLabelsJT	src/deps/basis/jt_operator.h	/^  struct OperatorLabelsJT$/;"	s	namespace:basis
OperatorSpaceType	src/deps/basis/hypersector.h	/^      typedef tOperatorSpaceType OperatorSpaceType;$/;"	t	class:basis::BaseHypersectors	typeref:typename:tOperatorSpaceType
OperatorSubspaceType	src/deps/basis/hypersector.h	/^      typedef tOperatorSubspaceType OperatorSubspaceType;$/;"	t	class:basis::BaseHypersector	typeref:typename:tOperatorSubspaceType
OperatorSubspaceType	src/deps/basis/hypersector.h	/^      typedef typename tOperatorSpaceType::SubspaceType OperatorSubspaceType;$/;"	t	class:basis::BaseHypersectors	typeref:typename:tOperatorSpaceType::SubspaceType
OperatorTypePN	src/deps/basis/proton_neutron.h	/^  enum class OperatorTypePN {kP=0,kN=1,kTotal=2};$/;"	g	namespace:basis
OrbitalDefinitionStr	src/deps/basis/nlj_orbital.cpp	/^  std::string OrbitalDefinitionStr(const OrbitalPNList& orbitals, bool standalone)$/;"	f	namespace:basis	typeref:typename:std::string
OrbitalInfo	src/deps/basis/nlj_orbital.cpp	/^  OrbitalPNInfo OrbitalStateLJPN::OrbitalInfo() const$/;"	f	class:basis::OrbitalStateLJPN	typeref:typename:OrbitalPNInfo
OrbitalInfo	src/deps/basis/nlj_orbital.cpp	/^  OrbitalPNInfo OrbitalStatePN::OrbitalInfo() const$/;"	f	class:basis::OrbitalStatePN	typeref:typename:OrbitalPNInfo
OrbitalInfo	src/deps/basis/nlj_orbital.cpp	/^  OrbitalPNList OrbitalSpaceLJPN::OrbitalInfo() const$/;"	f	class:basis::OrbitalSpaceLJPN	typeref:typename:OrbitalPNList
OrbitalInfo	src/deps/basis/nlj_orbital.cpp	/^  OrbitalPNList OrbitalSpacePN::OrbitalInfo() const$/;"	f	class:basis::OrbitalSpacePN	typeref:typename:OrbitalPNList
OrbitalInfo	src/deps/basis/nlj_orbital.cpp	/^  OrbitalPNList OrbitalSubspaceLJPN::OrbitalInfo() const$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:OrbitalPNList
OrbitalInfo	src/deps/basis/nlj_orbital.cpp	/^  OrbitalPNList OrbitalSubspacePN::OrbitalInfo() const$/;"	f	class:basis::OrbitalSubspacePN	typeref:typename:OrbitalPNList
OrbitalPNInfo	src/deps/basis/nlj_orbital.h	/^    OrbitalPNInfo(OrbitalSpeciesPN os, int n, int l, HalfInt j, double weight)$/;"	f	struct:basis::OrbitalPNInfo
OrbitalPNInfo	src/deps/basis/nlj_orbital.h	/^  struct OrbitalPNInfo$/;"	s	namespace:basis
OrbitalPNList	src/deps/basis/nlj_orbital.h	/^  typedef std::vector<OrbitalPNInfo> OrbitalPNList;$/;"	t	namespace:basis	typeref:typename:std::vector<OrbitalPNInfo>
OrbitalSectorsLJPN	src/deps/basis/nlj_orbital.cpp	/^  OrbitalSectorsLJPN::OrbitalSectorsLJPN($/;"	f	class:basis::OrbitalSectorsLJPN
OrbitalSectorsLJPN	src/deps/basis/nlj_orbital.h	/^    OrbitalSectorsLJPN($/;"	f	class:basis::OrbitalSectorsLJPN
OrbitalSectorsLJPN	src/deps/basis/nlj_orbital.h	/^    explicit OrbitalSectorsLJPN($/;"	f	class:basis::OrbitalSectorsLJPN
OrbitalSectorsLJPN	src/deps/basis/nlj_orbital.h	/^  class OrbitalSectorsLJPN$/;"	c	namespace:basis
OrbitalSortCmpWeight	src/deps/basis/nlj_orbital.h	/^  inline bool OrbitalSortCmpWeight(const OrbitalPNInfo& lhs, const OrbitalPNInfo& rhs) {$/;"	f	namespace:basis	typeref:typename:bool
OrbitalSpaceLJPN	src/deps/basis/nlj_orbital.cpp	/^  OrbitalSpaceLJPN::OrbitalSpaceLJPN(const OrbitalPNList& states)$/;"	f	class:basis::OrbitalSpaceLJPN
OrbitalSpaceLJPN	src/deps/basis/nlj_orbital.cpp	/^  OrbitalSpaceLJPN::OrbitalSpaceLJPN(int Nmax) {$/;"	f	class:basis::OrbitalSpaceLJPN
OrbitalSpaceLJPN	src/deps/basis/nlj_orbital.h	/^  class OrbitalSpaceLJPN$/;"	c	namespace:basis
OrbitalSpacePN	src/deps/basis/nlj_orbital.cpp	/^  OrbitalSpacePN::OrbitalSpacePN(const OrbitalPNList& states)$/;"	f	class:basis::OrbitalSpacePN
OrbitalSpacePN	src/deps/basis/nlj_orbital.cpp	/^  OrbitalSpacePN::OrbitalSpacePN(int Nmax)$/;"	f	class:basis::OrbitalSpacePN
OrbitalSpacePN	src/deps/basis/nlj_orbital.h	/^  class OrbitalSpacePN$/;"	c	namespace:basis
OrbitalSpeciesPN	src/deps/basis/proton_neutron.h	/^  enum class OrbitalSpeciesPN {kP=0,kN=1};$/;"	g	namespace:basis
OrbitalStateLJPN	src/deps/basis/nlj_orbital.h	/^    OrbitalStateLJPN(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::OrbitalStateLJPN
OrbitalStateLJPN	src/deps/basis/nlj_orbital.h	/^    OrbitalStateLJPN(const SubspaceType& subspace, int index)$/;"	f	class:basis::OrbitalStateLJPN
OrbitalStateLJPN	src/deps/basis/nlj_orbital.h	/^  class OrbitalStateLJPN$/;"	c	namespace:basis
OrbitalStateLJPNLabels	src/deps/basis/nlj_orbital.h	/^  typedef std::tuple<int> OrbitalStateLJPNLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int>
OrbitalStatePN	src/deps/basis/nlj_orbital.h	/^    OrbitalStatePN(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::OrbitalStatePN
OrbitalStatePN	src/deps/basis/nlj_orbital.h	/^    OrbitalStatePN(const SubspaceType& subspace, int index)$/;"	f	class:basis::OrbitalStatePN
OrbitalStatePN	src/deps/basis/nlj_orbital.h	/^  class OrbitalStatePN$/;"	c	namespace:basis
OrbitalStatePNLabels	src/deps/basis/nlj_orbital.h	/^  typedef std::tuple<int,int,HalfInt> OrbitalStatePNLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,HalfInt>
OrbitalSubspaceLJPN	src/deps/basis/nlj_orbital.cpp	/^  OrbitalSubspaceLJPN::OrbitalSubspaceLJPN(OrbitalSpeciesPN orbital_species,$/;"	f	class:basis::OrbitalSubspaceLJPN
OrbitalSubspaceLJPN	src/deps/basis/nlj_orbital.h	/^  class OrbitalSubspaceLJPN$/;"	c	namespace:basis
OrbitalSubspaceLJPNLabels	src/deps/basis/nlj_orbital.h	/^  typedef std::tuple<OrbitalSpeciesPN,int,HalfInt> OrbitalSubspaceLJPNLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<OrbitalSpeciesPN,int,HalfInt>
OrbitalSubspacePN	src/deps/basis/nlj_orbital.cpp	/^  OrbitalSubspacePN::OrbitalSubspacePN(OrbitalSpeciesPN orbital_species, int Nmax)$/;"	f	class:basis::OrbitalSubspacePN
OrbitalSubspacePN	src/deps/basis/nlj_orbital.cpp	/^  OrbitalSubspacePN::OrbitalSubspacePN(OrbitalSpeciesPN orbital_species,$/;"	f	class:basis::OrbitalSubspacePN
OrbitalSubspacePN	src/deps/basis/nlj_orbital.h	/^  class OrbitalSubspacePN$/;"	c	namespace:basis
OrbitalSubspacePNLabels	src/deps/basis/nlj_orbital.h	/^  typedef std::tuple<OrbitalSpeciesPN> OrbitalSubspacePNLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<OrbitalSpeciesPN>
Order	src/chiral.h	/^        enum class Order { lo, nlo, n2lo, n3lo, n4lo, full };$/;"	g	class:chiral::Operator
PION_MASS	old_c/constants.c	/^const double PION_MASS = 134.9770; \/\/ (in MeV\/c^2)$/;"	v	typeref:typename:const double
PION_MASS	src/constants.h	/^    const double PION_MASS = 134.9770; \/\/ (in MeV\/c^2)$/;"	v	namespace:constants	typeref:typename:const double
PROFILING_H_	src/deps/basis/mcutils/profiling.h	/^#define PROFILING_H_$/;"	d
ParitySign	src/deps/basis/am/am_scratch.cpp	/^int ParitySign(const HalfInt& sum)$/;"	f	typeref:typename:int
ParitySign	src/deps/basis/am/halfint.h	/^int ParitySign(const HalfInt& sum)$/;"	f	typeref:typename:int
ParitySign	src/deps/basis/am/halfint.h	/^int ParitySign(int sum)$/;"	f	typeref:typename:int
ParitySign2	src/deps/basis/am/am_scratch.cpp	/^int ParitySign2(int two_sum)$/;"	f	typeref:typename:int
ParitySign2	src/deps/basis/am/wigner_gsl_twice.h	/^    int ParitySign2(int two_sum)$/;"	f	namespace:am	typeref:typename:int
ParseOrbitalPNStream	src/deps/basis/nlj_orbital.cpp	/^  OrbitalPNList ParseOrbitalPNStream(std::istream& is, bool standalone)$/;"	f	namespace:basis	typeref:typename:OrbitalPNList
ParsingCheck	src/deps/basis/mcutils/parsing.cpp	/^  void ParsingCheck(std::istringstream& line_stream, int line_count, const std::string& line)$/;"	f	namespace:mcutils	typeref:typename:void
ParsingError	src/deps/basis/mcutils/parsing.cpp	/^  void ParsingError(int line_count, const std::string& line, const std::string& message)$/;"	f	namespace:mcutils	typeref:typename:void
ProductAngularMomenta	src/deps/basis/am/am.cpp	/^  HalfInt::vector ProductAngularMomenta(const HalfInt& j1, const HalfInt& j2)$/;"	f	namespace:am	typeref:typename:HalfInt::vector
ProductAngularMomentumRange	src/deps/basis/am/am.h	/^    HalfInt::pair ProductAngularMomentumRange(const HalfInt& j1, const HalfInt& j2)$/;"	f	namespace:am	typeref:typename:HalfInt::pair
PushHypersector	src/deps/basis/hypersector.h	/^      void PushHypersector(const HypersectorType& hypersector)$/;"	f	class:basis::BaseHypersectors	typeref:typename:void
PushSector	src/deps/basis/basis.h	/^      void PushSector(const SectorType& sector)$/;"	f	class:basis::BaseSectors	typeref:typename:void
PushStateLabels	src/deps/basis/basis.h	/^    void PushStateLabels(const StateLabelsType& state_labels)$/;"	f	class:basis::BaseSubspace	typeref:typename:void
PushStateLabels	src/deps/basis/degenerate.h	/^    void PushStateLabels(const StateLabelsType& state_labels, int degeneracy)$/;"	f	class:basis::BaseDegenerateSubspace	typeref:typename:void
PushSubspace	src/deps/basis/basis.h	/^      void PushSubspace(const SubspaceType& subspace)$/;"	f	class:basis::BaseSpace	typeref:typename:void
RACAH_REDUCTION_H_	src/deps/basis/am/racah_reduction.h	/^#define RACAH_REDUCTION_H_$/;"	d
RED_NUCLEON_MASS	old_c/constants.c	/^const double RED_NUCLEON_MASS = 469.4593340; \/\/ (in MeV\/c^2)$/;"	v	typeref:typename:const double
RED_NUCLEON_MASS	src/constants.h	/^    const double RED_NUCLEON_MASS = 469.4593340; \/\/ (in MeV\/c^2)$/;"	v	namespace:constants	typeref:typename:const double
RME_H_	src/deps/basis/am/rme.h	/^#define RME_H_$/;"	d
R_ES_SQUARED	old_c/constants.c	/^const double R_ES_SQUARED = 0.777; $/;"	v	typeref:typename:const double
R_ES_SQUARED	src/constants.h	/^    const double R_ES_SQUARED = 0.777;$/;"	v	namespace:constants	typeref:typename:const double
RacahReductionFactor12DotRose	src/deps/basis/am/racah_reduction.h	/^  double RacahReductionFactor12DotRose($/;"	f	namespace:am	typeref:typename:double
RacahReductionFactor12Rose	src/deps/basis/am/racah_reduction.h	/^  double RacahReductionFactor12Rose($/;"	f	namespace:am	typeref:typename:double
RacahReductionFactor1Rose	src/deps/basis/am/racah_reduction.h	/^  double RacahReductionFactor1Rose($/;"	f	namespace:am	typeref:typename:double
RacahReductionFactor2Rose	src/deps/basis/am/racah_reduction.h	/^  double RacahReductionFactor2Rose($/;"	f	namespace:am	typeref:typename:double
RacahReductionFactorRose	src/deps/basis/am/racah_reduction.h	/^  double RacahReductionFactorRose($/;"	f	namespace:am	typeref:typename:double
Rank	src/deps/basis/many_body.h	/^  enum class Rank {kOneBody=1, kTwoBody=2, kThreeBody=3, kFourBody=4};$/;"	g	namespace:basis
ReadBinary	src/deps/basis/mcutils/io.h	/^    void ReadBinary(std::istream& is, tDataType &data)$/;"	f	namespace:mcutils	typeref:typename:void
ReadRelativeCMOperatorParametersLSJT	src/deps/basis/lsjt_operator.cpp	/^  void ReadRelativeCMOperatorParametersLSJT($/;"	f	namespace:basis	typeref:typename:void
ReadRelativeOperatorComponentLSJT	src/deps/basis/lsjt_operator.cpp	/^  void ReadRelativeOperatorComponentLSJT($/;"	f	namespace:basis	typeref:typename:void
ReadRelativeOperatorLSJT	src/deps/basis/lsjt_operator.cpp	/^  void ReadRelativeOperatorLSJT($/;"	f	namespace:basis	typeref:typename:void
ReadRelativeOperatorParametersLSJT	src/deps/basis/lsjt_operator.cpp	/^  void ReadRelativeOperatorParametersLSJT($/;"	f	namespace:basis	typeref:typename:void
ReadTestRelative	src/deps/basis/lsjt_operator_test.cpp	/^void ReadTestRelative(const std::string& filename)$/;"	f	typeref:typename:void
ReadTestRelativeManual	src/deps/basis/lsjt_operator_test.cpp	/^void ReadTestRelativeManual(const std::string& filename)$/;"	f	typeref:typename:void
RecastLabelsRelativeCMLSJTToRelativeCMLSJTN	src/deps/basis/lsjt_operator.cpp	/^  void RecastLabelsRelativeCMLSJTToRelativeCMLSJTN($/;"	f	namespace:basis	typeref:typename:void
RecastLabelsTwoBodyJJJTToTwoBodyJJJTN	src/deps/basis/jjjt_operator.cpp	/^  void RecastLabelsTwoBodyJJJTToTwoBodyJJJTN($/;"	f	namespace:basis	typeref:typename:void
RecastLabelsTwoBodyLSJTToTwoBodyLSJTN	src/deps/basis/lsjt_operator.cpp	/^  void RecastLabelsTwoBodyLSJTToTwoBodyLSJTN($/;"	f	namespace:basis	typeref:typename:void
RelativeCMOperatorParametersLSJT	src/deps/basis/lsjt_operator.h	/^    RelativeCMOperatorParametersLSJT($/;"	f	struct:basis::RelativeCMOperatorParametersLSJT
RelativeCMOperatorParametersLSJT	src/deps/basis/lsjt_operator.h	/^    RelativeCMOperatorParametersLSJT()$/;"	f	struct:basis::RelativeCMOperatorParametersLSJT
RelativeCMOperatorParametersLSJT	src/deps/basis/lsjt_operator.h	/^  struct RelativeCMOperatorParametersLSJT$/;"	s	namespace:basis
RelativeCMSectorsLSJT	src/deps/basis/lsjt_scheme.cpp	/^  RelativeCMSectorsLSJT::RelativeCMSectorsLSJT($/;"	f	class:basis::RelativeCMSectorsLSJT
RelativeCMSectorsLSJT	src/deps/basis/lsjt_scheme.h	/^    RelativeCMSectorsLSJT() {};$/;"	f	class:basis::RelativeCMSectorsLSJT
RelativeCMSectorsLSJT	src/deps/basis/lsjt_scheme.h	/^  class RelativeCMSectorsLSJT$/;"	c	namespace:basis
RelativeCMSectorsLSJTN	src/deps/basis/lsjt_scheme.cpp	/^  RelativeCMSectorsLSJTN::RelativeCMSectorsLSJTN($/;"	f	class:basis::RelativeCMSectorsLSJTN
RelativeCMSectorsLSJTN	src/deps/basis/lsjt_scheme.h	/^    RelativeCMSectorsLSJTN() {};$/;"	f	class:basis::RelativeCMSectorsLSJTN
RelativeCMSectorsLSJTN	src/deps/basis/lsjt_scheme.h	/^  class RelativeCMSectorsLSJTN$/;"	c	namespace:basis
RelativeCMSpaceLSJT	src/deps/basis/lsjt_scheme.cpp	/^  RelativeCMSpaceLSJT::RelativeCMSpaceLSJT(int Nmax)$/;"	f	class:basis::RelativeCMSpaceLSJT
RelativeCMSpaceLSJT	src/deps/basis/lsjt_scheme.h	/^    RelativeCMSpaceLSJT() {};$/;"	f	class:basis::RelativeCMSpaceLSJT
RelativeCMSpaceLSJT	src/deps/basis/lsjt_scheme.h	/^  class RelativeCMSpaceLSJT$/;"	c	namespace:basis
RelativeCMSpaceLSJTN	src/deps/basis/lsjt_scheme.cpp	/^  RelativeCMSpaceLSJTN::RelativeCMSpaceLSJTN(int Nmax)$/;"	f	class:basis::RelativeCMSpaceLSJTN
RelativeCMSpaceLSJTN	src/deps/basis/lsjt_scheme.h	/^    RelativeCMSpaceLSJTN() {};$/;"	f	class:basis::RelativeCMSpaceLSJTN
RelativeCMSpaceLSJTN	src/deps/basis/lsjt_scheme.h	/^  class RelativeCMSpaceLSJTN$/;"	c	namespace:basis
RelativeCMStateLSJT	src/deps/basis/lsjt_scheme.h	/^    RelativeCMStateLSJT(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::RelativeCMStateLSJT
RelativeCMStateLSJT	src/deps/basis/lsjt_scheme.h	/^    RelativeCMStateLSJT(const SubspaceType& subspace, int index)$/;"	f	class:basis::RelativeCMStateLSJT
RelativeCMStateLSJT	src/deps/basis/lsjt_scheme.h	/^  class RelativeCMStateLSJT$/;"	c	namespace:basis
RelativeCMStateLSJTLabels	src/deps/basis/lsjt_scheme.h	/^  typedef std::tuple<int,int,int,int> RelativeCMStateLSJTLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int,int>
RelativeCMStateLSJTN	src/deps/basis/lsjt_scheme.h	/^    RelativeCMStateLSJTN(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::RelativeCMStateLSJTN
RelativeCMStateLSJTN	src/deps/basis/lsjt_scheme.h	/^    RelativeCMStateLSJTN(const SubspaceType& subspace, int index)$/;"	f	class:basis::RelativeCMStateLSJTN
RelativeCMStateLSJTN	src/deps/basis/lsjt_scheme.h	/^  class RelativeCMStateLSJTN$/;"	c	namespace:basis
RelativeCMStateLSJTNLabels	src/deps/basis/lsjt_scheme.h	/^  typedef std::tuple<int,int,int,int> RelativeCMStateLSJTNLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int,int>
RelativeCMSubspaceLSJT	src/deps/basis/lsjt_scheme.cpp	/^  RelativeCMSubspaceLSJT::RelativeCMSubspaceLSJT(int L, int S, int J, int T, int g, int Nmax)$/;"	f	class:basis::RelativeCMSubspaceLSJT
RelativeCMSubspaceLSJT	src/deps/basis/lsjt_scheme.h	/^      RelativeCMSubspaceLSJT() {};$/;"	f	class:basis::RelativeCMSubspaceLSJT
RelativeCMSubspaceLSJT	src/deps/basis/lsjt_scheme.h	/^  class RelativeCMSubspaceLSJT$/;"	c	namespace:basis
RelativeCMSubspaceLSJTLabels	src/deps/basis/lsjt_scheme.h	/^  typedef std::tuple<int,int,int,int,int> RelativeCMSubspaceLSJTLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int,int,int>
RelativeCMSubspaceLSJTN	src/deps/basis/lsjt_scheme.cpp	/^  RelativeCMSubspaceLSJTN::RelativeCMSubspaceLSJTN(int L, int S, int J, int T, int g, int N)$/;"	f	class:basis::RelativeCMSubspaceLSJTN
RelativeCMSubspaceLSJTN	src/deps/basis/lsjt_scheme.h	/^      RelativeCMSubspaceLSJTN() {};$/;"	f	class:basis::RelativeCMSubspaceLSJTN
RelativeCMSubspaceLSJTN	src/deps/basis/lsjt_scheme.h	/^  class RelativeCMSubspaceLSJTN$/;"	c	namespace:basis
RelativeCMSubspaceLSJTNLabels	src/deps/basis/lsjt_scheme.h	/^  typedef std::tuple<int,int,int,int,int,int> RelativeCMSubspaceLSJTNLabels;  \/\/ (MODIFICATION/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int,int,int,int>
RelativeDegenerateSpaceLSJT	src/deps/basis/degenerate_test.cpp	/^    RelativeDegenerateSpaceLSJT() {};$/;"	f	class:basis::RelativeDegenerateSpaceLSJT	file:
RelativeDegenerateSpaceLSJT	src/deps/basis/degenerate_test.cpp	/^  RelativeDegenerateSpaceLSJT::RelativeDegenerateSpaceLSJT(int Nmax, int Jmax)$/;"	f	class:basis::RelativeDegenerateSpaceLSJT
RelativeDegenerateSpaceLSJT	src/deps/basis/degenerate_test.cpp	/^  class RelativeDegenerateSpaceLSJT$/;"	c	namespace:basis	file:
RelativeDegenerateStateLSJT	src/deps/basis/degenerate_test.cpp	/^    RelativeDegenerateStateLSJT(const SubspaceType& subspace, const StateLabelsType& state_label/;"	f	class:basis::RelativeDegenerateStateLSJT	file:
RelativeDegenerateStateLSJT	src/deps/basis/degenerate_test.cpp	/^    RelativeDegenerateStateLSJT(const SubspaceType& subspace, int index)$/;"	f	class:basis::RelativeDegenerateStateLSJT	file:
RelativeDegenerateStateLSJT	src/deps/basis/degenerate_test.cpp	/^  class RelativeDegenerateStateLSJT$/;"	c	namespace:basis	file:
RelativeDegenerateSubspaceLSJT	src/deps/basis/degenerate_test.cpp	/^      RelativeDegenerateSubspaceLSJT() {};$/;"	f	class:basis::RelativeDegenerateSubspaceLSJT	file:
RelativeDegenerateSubspaceLSJT	src/deps/basis/degenerate_test.cpp	/^  RelativeDegenerateSubspaceLSJT::RelativeDegenerateSubspaceLSJT(int L, int S, int J, int T, int/;"	f	class:basis::RelativeDegenerateSubspaceLSJT
RelativeDegenerateSubspaceLSJT	src/deps/basis/degenerate_test.cpp	/^  class RelativeDegenerateSubspaceLSJT$/;"	c	namespace:basis	file:
RelativeHypersectorsLSJT	src/deps/basis/hypersector_test.cpp	/^    RelativeHypersectorsLSJT() {};$/;"	f	class:basis::RelativeHypersectorsLSJT	file:
RelativeHypersectorsLSJT	src/deps/basis/hypersector_test.cpp	/^  RelativeHypersectorsLSJT::RelativeHypersectorsLSJT($/;"	f	class:basis::RelativeHypersectorsLSJT
RelativeHypersectorsLSJT	src/deps/basis/hypersector_test.cpp	/^  class RelativeHypersectorsLSJT$/;"	c	namespace:basis	file:
RelativeOperatorParametersLSJT	src/deps/basis/lsjt_operator.h	/^    RelativeOperatorParametersLSJT($/;"	f	struct:basis::RelativeOperatorParametersLSJT
RelativeOperatorParametersLSJT	src/deps/basis/lsjt_operator.h	/^    RelativeOperatorParametersLSJT()$/;"	f	struct:basis::RelativeOperatorParametersLSJT
RelativeOperatorParametersLSJT	src/deps/basis/lsjt_operator.h	/^  struct RelativeOperatorParametersLSJT$/;"	s	namespace:basis
RelativeSectorsLSJT	src/deps/basis/lsjt_scheme.cpp	/^  RelativeSectorsLSJT::RelativeSectorsLSJT($/;"	f	class:basis::RelativeSectorsLSJT
RelativeSectorsLSJT	src/deps/basis/lsjt_scheme.h	/^    RelativeSectorsLSJT() {};$/;"	f	class:basis::RelativeSectorsLSJT
RelativeSectorsLSJT	src/deps/basis/lsjt_scheme.h	/^  class RelativeSectorsLSJT$/;"	c	namespace:basis
RelativeSpaceLSJT	src/deps/basis/lsjt_scheme.cpp	/^  RelativeSpaceLSJT::RelativeSpaceLSJT(int Nmax, int Jmax)$/;"	f	class:basis::RelativeSpaceLSJT
RelativeSpaceLSJT	src/deps/basis/lsjt_scheme.h	/^    RelativeSpaceLSJT() {};$/;"	f	class:basis::RelativeSpaceLSJT
RelativeSpaceLSJT	src/deps/basis/lsjt_scheme.h	/^  class RelativeSpaceLSJT$/;"	c	namespace:basis
RelativeStateLSJT	src/deps/basis/lsjt_scheme.h	/^    RelativeStateLSJT(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::RelativeStateLSJT
RelativeStateLSJT	src/deps/basis/lsjt_scheme.h	/^    RelativeStateLSJT(const SubspaceType& subspace, int index)$/;"	f	class:basis::RelativeStateLSJT
RelativeStateLSJT	src/deps/basis/lsjt_scheme.h	/^  class RelativeStateLSJT$/;"	c	namespace:basis
RelativeStateLSJTLabels	src/deps/basis/degenerate_test.cpp	/^  typedef std::tuple<int> RelativeStateLSJTLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int>	file:
RelativeStateLSJTLabels	src/deps/basis/lsjt_scheme.h	/^  typedef std::tuple<int> RelativeStateLSJTLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int>
RelativeSubspaceLSJT	src/deps/basis/lsjt_scheme.cpp	/^  RelativeSubspaceLSJT::RelativeSubspaceLSJT(int L, int S, int J, int T, int g, int Nmax)$/;"	f	class:basis::RelativeSubspaceLSJT
RelativeSubspaceLSJT	src/deps/basis/lsjt_scheme.h	/^      RelativeSubspaceLSJT() {};$/;"	f	class:basis::RelativeSubspaceLSJT
RelativeSubspaceLSJT	src/deps/basis/lsjt_scheme.h	/^  class RelativeSubspaceLSJT$/;"	c	namespace:basis
RelativeSubspaceLSJTLabels	src/deps/basis/degenerate_test.cpp	/^  typedef std::tuple<int,int,int,int,int> RelativeSubspaceLSJTLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int,int,int>	file:
RelativeSubspaceLSJTLabels	src/deps/basis/lsjt_scheme.h	/^  typedef std::tuple<int,int,int,int,int> RelativeSubspaceLSJTLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int,int,int>
Reset	src/deps/basis/mcutils/profiling.h	/^    void Reset()$/;"	f	class:mcutils::SteadyTimer	typeref:typename:void
S	src/deps/basis/degenerate_test.cpp	/^      int S() const {return std::get<1>(labels_);}$/;"	f	class:basis::RelativeDegenerateSubspaceLSJT	typeref:typename:int	file:
S	src/deps/basis/degenerate_test.cpp	/^    int S() const {return subspace().S();}$/;"	f	class:basis::RelativeDegenerateStateLSJT	typeref:typename:int	file:
S	src/deps/basis/lsjt_scheme.h	/^      int S() const {return std::get<1>(labels_);}$/;"	f	class:basis::RelativeCMSubspaceLSJT	typeref:typename:int
S	src/deps/basis/lsjt_scheme.h	/^      int S() const {return std::get<1>(labels_);}$/;"	f	class:basis::RelativeCMSubspaceLSJTN	typeref:typename:int
S	src/deps/basis/lsjt_scheme.h	/^      int S() const {return std::get<1>(labels_);}$/;"	f	class:basis::RelativeSubspaceLSJT	typeref:typename:int
S	src/deps/basis/lsjt_scheme.h	/^      int S() const {return std::get<1>(labels_);}$/;"	f	class:basis::TwoBodySubspaceLSJT	typeref:typename:int
S	src/deps/basis/lsjt_scheme.h	/^      int S() const {return std::get<1>(labels_);}$/;"	f	class:basis::TwoBodySubspaceLSJTN	typeref:typename:int
S	src/deps/basis/lsjt_scheme.h	/^    int S() const {return subspace().S();}$/;"	f	class:basis::RelativeCMStateLSJT	typeref:typename:int
S	src/deps/basis/lsjt_scheme.h	/^    int S() const {return subspace().S();}$/;"	f	class:basis::RelativeCMStateLSJTN	typeref:typename:int
S	src/deps/basis/lsjt_scheme.h	/^    int S() const {return subspace().S();}$/;"	f	class:basis::RelativeStateLSJT	typeref:typename:int
S	src/deps/basis/lsjt_scheme.h	/^    int S() const {return subspace().S();}$/;"	f	class:basis::TwoBodyStateLSJT	typeref:typename:int
S	src/deps/basis/lsjt_scheme.h	/^    int S() const {return subspace().S();}$/;"	f	class:basis::TwoBodyStateLSJTN	typeref:typename:int
SHAREDLIBS	old_c/Makefile	/^SHAREDLIBS = $(wildcard *.a)$/;"	m
SOURCEDIR	old_c/Makefile	/^SOURCEDIR = src$/;"	m
SOURCES	old_c/Makefile	/^SOURCES = $(wildcard $(SOURCEDIR)\/*.cpp) $/;"	m
SectorDirection	src/deps/basis/basis.h	/^  enum class SectorDirection {kCanonical,kBoth};$/;"	g	namespace:basis
SectorType	src/deps/basis/basis.h	/^      typedef BaseSector<SubspaceType> SectorType;$/;"	t	class:basis::BaseSectors	typeref:typename:BaseSector<SubspaceType>
Seek	src/deps/basis/mcutils/memoizer.h	/^    bool Memoizer<Key,T,Compare,Alloc>::Seek(const Key& x)$/;"	f	class:mcutils::Memoizer	typeref:typename:bool
SetDelimiters	src/deps/basis/mcutils/memoizer.h	/^    void Memoizer<Key,T,Compare,Alloc>::SetDelimiters($/;"	f	class:mcutils::Memoizer	typeref:typename:void
SetDelimiters	src/deps/basis/mcutils/vector_tuple.h	/^    void VectorTuple<T,N,B>::SetDelimiters($/;"	f	class:mcutils::VectorTuple	typeref:typename:void
SetHyperoperatorToZero	src/deps/basis/hypersector.h	/^  void SetHyperoperatorToZero($/;"	f	namespace:basis	typeref:typename:void
SetOperatorToDiagonalConstant	src/deps/basis/operator.h	/^  void SetOperatorToDiagonalConstant($/;"	f	namespace:basis	typeref:typename:void
SetOperatorToIdentity	src/deps/basis/operator.h	/^  void SetOperatorToIdentity($/;"	f	namespace:basis	typeref:typename:void
SetOperatorToZero	src/deps/basis/operator.h	/^  void SetOperatorToZero($/;"	f	namespace:basis	typeref:typename:void
SetValue	src/deps/basis/mcutils/memoizer.h	/^    T Memoizer<Key,T,Compare,Alloc>::SetValue(const Key& x, const T& y)$/;"	f	class:mcutils::Memoizer	typeref:typename:T
SingleParticleSpacePN	src/deps/basis/m_scheme.cpp	/^  SingleParticleSpacePN::SingleParticleSpacePN(const OrbitalSpacePN& orbital_space)$/;"	f	class:basis::SingleParticleSpacePN
SingleParticleSpacePN	src/deps/basis/m_scheme.h	/^    explicit SingleParticleSpacePN(const OrbitalPNList& states)$/;"	f	class:basis::SingleParticleSpacePN
SingleParticleSpacePN	src/deps/basis/m_scheme.h	/^  class SingleParticleSpacePN$/;"	c	namespace:basis
SingleParticleStatePN	src/deps/basis/m_scheme.h	/^      SingleParticleStatePN(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::SingleParticleStatePN
SingleParticleStatePN	src/deps/basis/m_scheme.h	/^      SingleParticleStatePN(const SubspaceType& subspace, int index)$/;"	f	class:basis::SingleParticleStatePN
SingleParticleStatePN	src/deps/basis/m_scheme.h	/^  class SingleParticleStatePN$/;"	c	namespace:basis
SingleParticleStatePNLabels	src/deps/basis/m_scheme.h	/^  typedef std::tuple<int,int,HalfInt,HalfInt> SingleParticleStatePNLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,HalfInt,HalfInt>
SingleParticleSubspacePN	src/deps/basis/m_scheme.cpp	/^  SingleParticleSubspacePN::SingleParticleSubspacePN(const OrbitalSubspacePN& orbital_subspace)$/;"	f	class:basis::SingleParticleSubspacePN
SingleParticleSubspacePN	src/deps/basis/m_scheme.h	/^      SingleParticleSubspacePN($/;"	f	class:basis::SingleParticleSubspacePN
SingleParticleSubspacePN	src/deps/basis/m_scheme.h	/^  class SingleParticleSubspacePN$/;"	c	namespace:basis
SingleParticleSubspacePNLabels	src/deps/basis/m_scheme.h	/^  typedef std::tuple<OrbitalSpeciesPN> SingleParticleSubspacePNLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<OrbitalSpeciesPN>
SpaceType	src/deps/basis/basis.h	/^      typedef tSpaceType SpaceType;$/;"	t	class:basis::BaseSectors	typeref:typename:tSpaceType
SpaceType	src/deps/basis/hypersector.h	/^      typedef tSpaceType SpaceType;$/;"	t	class:basis::BaseHypersectors	typeref:typename:tSpaceType
SphericalHarmonicCRME	src/deps/basis/am/rme.h	/^  double SphericalHarmonicCRME(const int& lp, const int& l, const int& k)$/;"	f	namespace:am	typeref:typename:double
SphericalHarmonicYRME	src/deps/basis/am/rme.h	/^  double SphericalHarmonicYRME(const int& lp, const int& l, const int& k)$/;"	f	namespace:am	typeref:typename:double
Start	src/deps/basis/mcutils/profiling.h	/^    void Start()$/;"	f	class:mcutils::SteadyTimer	typeref:typename:void
Start	src/deps/basis/mcutils/profiling.h	/^    void Start()$/;"	f	class:mcutils::Timer	typeref:typename:void
StateLabelsType	src/deps/basis/basis.h	/^      typedef typename SubspaceType::StateLabelsType StateLabelsType;$/;"	t	class:basis::BaseState	typeref:typename:SubspaceType::StateLabelsType
StateLabelsType	src/deps/basis/basis.h	/^    typedef tStateLabelsType StateLabelsType;$/;"	t	class:basis::BaseSubspace	typeref:typename:tStateLabelsType
StateLabelsType	src/deps/basis/degenerate.h	/^      typedef typename SubspaceType::StateLabelsType StateLabelsType;$/;"	t	class:basis::BaseDegenerateState	typeref:typename:SubspaceType::StateLabelsType
StateLabelsType	src/deps/basis/degenerate.h	/^    typedef tStateLabelsType StateLabelsType;$/;"	t	class:basis::BaseDegenerateSubspace	typeref:typename:tStateLabelsType
SteadyTimer	src/deps/basis/mcutils/profiling.h	/^    SteadyTimer() : timer_is_running_(false),accumulated_time_(0)$/;"	f	class:mcutils::SteadyTimer
SteadyTimer	src/deps/basis/mcutils/profiling.h	/^  class SteadyTimer$/;"	c	namespace:mcutils
Stop	src/deps/basis/mcutils/profiling.h	/^    void Stop()$/;"	f	class:mcutils::SteadyTimer	typeref:typename:void
Stop	src/deps/basis/mcutils/profiling.h	/^    void Stop()$/;"	f	class:mcutils::Timer	typeref:typename:void
Str	src/deps/basis/am/halfint.cpp	/^std::string HalfInt::Str() const$/;"	f	class:HalfInt	typeref:typename:std::string
StreamCheck	src/deps/basis/mcutils/parsing.cpp	/^  void StreamCheck(bool success, const std::string& filename, const std::string& message)$/;"	f	namespace:mcutils	typeref:typename:void
Subspace	src/deps/basis/basis.h	/^      const SubspaceType& Subspace() const$/;"	f	class:basis::BaseState	typeref:typename:DEPRECATED ("")const SubspaceType &
SubspaceLabelsType	src/deps/basis/basis.h	/^    typedef tSubspaceLabelsType SubspaceLabelsType;$/;"	t	class:basis::BaseSubspace	typeref:typename:tSubspaceLabelsType
SubspaceLabelsType	src/deps/basis/degenerate.h	/^    typedef tSubspaceLabelsType SubspaceLabelsType;$/;"	t	class:basis::BaseDegenerateSubspace	typeref:typename:tSubspaceLabelsType
SubspaceType	src/deps/basis/basis.h	/^      typedef tSubspaceType SubspaceType;$/;"	t	class:basis::BaseSector	typeref:typename:tSubspaceType
SubspaceType	src/deps/basis/basis.h	/^      typedef tSubspaceType SubspaceType;$/;"	t	class:basis::BaseSpace	typeref:typename:tSubspaceType
SubspaceType	src/deps/basis/basis.h	/^      typedef tSubspaceType SubspaceType;$/;"	t	class:basis::BaseState	typeref:typename:tSubspaceType
SubspaceType	src/deps/basis/basis.h	/^      typedef typename tSpaceType::SubspaceType SubspaceType;$/;"	t	class:basis::BaseSectors	typeref:typename:tSpaceType::SubspaceType
SubspaceType	src/deps/basis/degenerate.h	/^      typedef tSubspaceType SubspaceType;$/;"	t	class:basis::BaseDegenerateSpace	typeref:typename:tSubspaceType
SubspaceType	src/deps/basis/degenerate.h	/^      typedef tSubspaceType SubspaceType;$/;"	t	class:basis::BaseDegenerateState	typeref:typename:tSubspaceType
SubspaceType	src/deps/basis/hypersector.h	/^      typedef tSubspaceType SubspaceType;$/;"	t	class:basis::BaseHypersector	typeref:typename:tSubspaceType
SubspaceType	src/deps/basis/hypersector.h	/^      typedef typename tSpaceType::SubspaceType SubspaceType;$/;"	t	class:basis::BaseHypersectors	typeref:typename:tSpaceType::SubspaceType
SymmetryPhaseMode	src/deps/basis/jt_operator.h	/^  enum class SymmetryPhaseMode {kHermitian=0};$/;"	g	namespace:basis
T	src/deps/basis/degenerate_test.cpp	/^      int T() const {return std::get<3>(labels_);}$/;"	f	class:basis::RelativeDegenerateSubspaceLSJT	typeref:typename:int	file:
T	src/deps/basis/degenerate_test.cpp	/^    int T() const {return subspace().T();}$/;"	f	class:basis::RelativeDegenerateStateLSJT	typeref:typename:int	file:
T	src/deps/basis/jjjt_scheme.h	/^      int T() const {return std::get<1>(labels_);}$/;"	f	class:basis::TwoBodySubspaceJJJT	typeref:typename:int
T	src/deps/basis/jjjt_scheme.h	/^      int T() const {return std::get<1>(labels_);}$/;"	f	class:basis::TwoBodySubspaceJJJTN	typeref:typename:int
T	src/deps/basis/jjjt_scheme.h	/^    int T() const {return subspace().T();}$/;"	f	class:basis::TwoBodyStateJJJT	typeref:typename:int
T	src/deps/basis/jjjt_scheme.h	/^    int T() const {return subspace().T();}$/;"	f	class:basis::TwoBodyStateJJJTN	typeref:typename:int
T	src/deps/basis/lsjt_scheme.h	/^      int T() const {return std::get<3>(labels_);}$/;"	f	class:basis::RelativeCMSubspaceLSJT	typeref:typename:int
T	src/deps/basis/lsjt_scheme.h	/^      int T() const {return std::get<3>(labels_);}$/;"	f	class:basis::RelativeCMSubspaceLSJTN	typeref:typename:int
T	src/deps/basis/lsjt_scheme.h	/^      int T() const {return std::get<3>(labels_);}$/;"	f	class:basis::RelativeSubspaceLSJT	typeref:typename:int
T	src/deps/basis/lsjt_scheme.h	/^      int T() const {return std::get<3>(labels_);}$/;"	f	class:basis::TwoBodySubspaceLSJT	typeref:typename:int
T	src/deps/basis/lsjt_scheme.h	/^      int T() const {return std::get<3>(labels_);}$/;"	f	class:basis::TwoBodySubspaceLSJTN	typeref:typename:int
T	src/deps/basis/lsjt_scheme.h	/^    int T() const {return subspace().T();}$/;"	f	class:basis::RelativeCMStateLSJT	typeref:typename:int
T	src/deps/basis/lsjt_scheme.h	/^    int T() const {return subspace().T();}$/;"	f	class:basis::RelativeCMStateLSJTN	typeref:typename:int
T	src/deps/basis/lsjt_scheme.h	/^    int T() const {return subspace().T();}$/;"	f	class:basis::RelativeStateLSJT	typeref:typename:int
T	src/deps/basis/lsjt_scheme.h	/^    int T() const {return subspace().T();}$/;"	f	class:basis::TwoBodyStateLSJT	typeref:typename:int
T	src/deps/basis/lsjt_scheme.h	/^    int T() const {return subspace().T();}$/;"	f	class:basis::TwoBodyStateLSJTN	typeref:typename:int
T0_max	src/deps/basis/jt_operator.h	/^    int J0, g0, T0_min, T0_max;$/;"	m	struct:basis::OperatorLabelsJT	typeref:typename:int
T0_min	src/deps/basis/jt_operator.h	/^    int J0, g0, T0_min, T0_max;$/;"	m	struct:basis::OperatorLabelsJT	typeref:typename:int
Test	src/deps/basis/degenerate_test.cpp	/^void Test()$/;"	f	typeref:typename:void
TestHyprersectors	src/deps/basis/hypersector_test.cpp	/^void TestHyprersectors()$/;"	f	typeref:typename:void
TestLJOrbitalsNmax	src/deps/basis/nlj_orbital_test.cpp	/^void TestLJOrbitalsNmax(const std::string& filename)$/;"	f	typeref:typename:void
TestLJOrbitalsRead	src/deps/basis/nlj_orbital_test.cpp	/^void TestLJOrbitalsRead(const std::string& filename) {$/;"	f	typeref:typename:void
TestLJSectors	src/deps/basis/nlj_orbital_test.cpp	/^void TestLJSectors() {$/;"	f	typeref:typename:void
TestNotation	src/deps/basis/jjjpn_scheme_test.cpp	/^void TestNotation()$/;"	f	typeref:typename:void
TestOrbitalsNmax	src/deps/basis/nlj_orbital_test.cpp	/^void TestOrbitalsNmax(const std::string& filename)$/;"	f	typeref:typename:void
TestOrbitalsRead	src/deps/basis/nlj_orbital_test.cpp	/^void TestOrbitalsRead(const std::string& filename) {$/;"	f	typeref:typename:void
TestRelative	src/deps/basis/lsjt_scheme_test.cpp	/^void TestRelative()$/;"	f	typeref:typename:void
TestRelativeCM	src/deps/basis/lsjt_scheme_test.cpp	/^void TestRelativeCM()$/;"	f	typeref:typename:void
TestRelativeCMN	src/deps/basis/lsjt_scheme_test.cpp	/^void TestRelativeCMN()$/;"	f	typeref:typename:void
TestStatesNmax	src/deps/basis/m_scheme_test.cpp	/^void TestStatesNmax()$/;"	f	typeref:typename:void
TestSteadyTimer	src/deps/basis/mcutils/profiling_test.cpp	/^void TestSteadyTimer()$/;"	f	typeref:typename:void
TestTimer	src/deps/basis/mcutils/profiling_test.cpp	/^void TestTimer()$/;"	f	typeref:typename:void
TestTwoBody	src/deps/basis/jjjt_scheme_test.cpp	/^void TestTwoBody()$/;"	f	typeref:typename:void
TestTwoBody	src/deps/basis/lsjt_scheme_test.cpp	/^void TestTwoBody()$/;"	f	typeref:typename:void
TestTwoBodyN	src/deps/basis/jjjt_scheme_test.cpp	/^void TestTwoBodyN()$/;"	f	typeref:typename:void
TestTwoBodyN	src/deps/basis/lsjt_scheme_test.cpp	/^void TestTwoBodyN()$/;"	f	typeref:typename:void
TestTwoBodyN1max	src/deps/basis/lsjt_scheme_test.cpp	/^void TestTwoBodyN1max()$/;"	f	typeref:typename:void
TestTwoBodyNmax	src/deps/basis/jjjpn_scheme_test.cpp	/^void TestTwoBodyNmax()$/;"	f	typeref:typename:void
TestTwoBodyTz	src/deps/basis/jjjpn_scheme_test.cpp	/^void TestTwoBodyTz()$/;"	f	typeref:typename:void
TimeSinceLastStart	src/deps/basis/mcutils/profiling.h	/^    double TimeSinceLastStart() const$/;"	f	class:mcutils::SteadyTimer	typeref:typename:double
Timer	src/deps/basis/mcutils/profiling.h	/^    Timer() : start_time_(0), elapsed_time_(0)$/;"	f	class:mcutils::Timer
Timer	src/deps/basis/mcutils/profiling.h	/^  Timer$/;"	c	namespace:mcutils
TwiceValue	src/deps/basis/am/halfint.h	/^  int TwiceValue() const$/;"	f	class:HalfInt	typeref:typename:int
TwiceValue	src/deps/basis/am/halfint.h	/^inline int TwiceValue(const HalfInt& h)$/;"	f	typeref:typename:int
TwoBodyCutoffs	src/deps/basis/many_body.cpp	/^  std::tuple<int,int> TwoBodyCutoffs(basis::Rank truncation_rank, int truncation_cutoff)$/;"	f	namespace:basis	typeref:typename:std::tuple<int,int>
TwoBodySectorsJJJPN	src/deps/basis/jjjpn_scheme.cpp	/^  TwoBodySectorsJJJPN::TwoBodySectorsJJJPN($/;"	f	class:basis::TwoBodySectorsJJJPN
TwoBodySectorsJJJPN	src/deps/basis/jjjpn_scheme.h	/^  class TwoBodySectorsJJJPN$/;"	c	namespace:basis
TwoBodySectorsJJJT	src/deps/basis/jjjt_scheme.cpp	/^  TwoBodySectorsJJJT::TwoBodySectorsJJJT($/;"	f	class:basis::TwoBodySectorsJJJT
TwoBodySectorsJJJT	src/deps/basis/jjjt_scheme.h	/^    TwoBodySectorsJJJT() {};$/;"	f	class:basis::TwoBodySectorsJJJT
TwoBodySectorsJJJT	src/deps/basis/jjjt_scheme.h	/^  class TwoBodySectorsJJJT$/;"	c	namespace:basis
TwoBodySectorsJJJTN	src/deps/basis/jjjt_scheme.cpp	/^  TwoBodySectorsJJJTN::TwoBodySectorsJJJTN($/;"	f	class:basis::TwoBodySectorsJJJTN
TwoBodySectorsJJJTN	src/deps/basis/jjjt_scheme.h	/^    TwoBodySectorsJJJTN() {};$/;"	f	class:basis::TwoBodySectorsJJJTN
TwoBodySectorsJJJTN	src/deps/basis/jjjt_scheme.h	/^  class TwoBodySectorsJJJTN$/;"	c	namespace:basis
TwoBodySectorsLSJT	src/deps/basis/lsjt_scheme.cpp	/^  TwoBodySectorsLSJT::TwoBodySectorsLSJT($/;"	f	class:basis::TwoBodySectorsLSJT
TwoBodySectorsLSJT	src/deps/basis/lsjt_scheme.h	/^    TwoBodySectorsLSJT() {};$/;"	f	class:basis::TwoBodySectorsLSJT
TwoBodySectorsLSJT	src/deps/basis/lsjt_scheme.h	/^  class TwoBodySectorsLSJT$/;"	c	namespace:basis
TwoBodySectorsLSJTN	src/deps/basis/lsjt_scheme.cpp	/^  TwoBodySectorsLSJTN::TwoBodySectorsLSJTN($/;"	f	class:basis::TwoBodySectorsLSJTN
TwoBodySectorsLSJTN	src/deps/basis/lsjt_scheme.h	/^    TwoBodySectorsLSJTN() {};$/;"	f	class:basis::TwoBodySectorsLSJTN
TwoBodySectorsLSJTN	src/deps/basis/lsjt_scheme.h	/^  class TwoBodySectorsLSJTN$/;"	c	namespace:basis
TwoBodySpaceJJJPN	src/deps/basis/jjjpn_scheme.cpp	/^  TwoBodySpaceJJJPN::TwoBodySpaceJJJPN($/;"	f	class:basis::TwoBodySpaceJJJPN
TwoBodySpaceJJJPN	src/deps/basis/jjjpn_scheme.h	/^  class TwoBodySpaceJJJPN$/;"	c	namespace:basis
TwoBodySpaceJJJT	src/deps/basis/jjjt_scheme.cpp	/^  TwoBodySpaceJJJT::TwoBodySpaceJJJT(basis::Rank truncation_rank, int truncation_cutoff)$/;"	f	class:basis::TwoBodySpaceJJJT
TwoBodySpaceJJJT	src/deps/basis/jjjt_scheme.h	/^    TwoBodySpaceJJJT() {};$/;"	f	class:basis::TwoBodySpaceJJJT
TwoBodySpaceJJJT	src/deps/basis/jjjt_scheme.h	/^  class TwoBodySpaceJJJT$/;"	c	namespace:basis
TwoBodySpaceJJJTN	src/deps/basis/jjjt_scheme.cpp	/^  TwoBodySpaceJJJTN::TwoBodySpaceJJJTN(basis::Rank truncation_rank, int truncation_cutoff)$/;"	f	class:basis::TwoBodySpaceJJJTN
TwoBodySpaceJJJTN	src/deps/basis/jjjt_scheme.h	/^    TwoBodySpaceJJJTN() {};$/;"	f	class:basis::TwoBodySpaceJJJTN
TwoBodySpaceJJJTN	src/deps/basis/jjjt_scheme.h	/^  class TwoBodySpaceJJJTN$/;"	c	namespace:basis
TwoBodySpaceLSJT	src/deps/basis/lsjt_scheme.cpp	/^  TwoBodySpaceLSJT::TwoBodySpaceLSJT(basis::Rank truncation_rank, int truncation_cutoff)$/;"	f	class:basis::TwoBodySpaceLSJT
TwoBodySpaceLSJT	src/deps/basis/lsjt_scheme.h	/^    TwoBodySpaceLSJT() {};$/;"	f	class:basis::TwoBodySpaceLSJT
TwoBodySpaceLSJT	src/deps/basis/lsjt_scheme.h	/^  class TwoBodySpaceLSJT$/;"	c	namespace:basis
TwoBodySpaceLSJTN	src/deps/basis/lsjt_scheme.cpp	/^  TwoBodySpaceLSJTN::TwoBodySpaceLSJTN(basis::Rank truncation_rank, int truncation_cutoff)$/;"	f	class:basis::TwoBodySpaceLSJTN
TwoBodySpaceLSJTN	src/deps/basis/lsjt_scheme.h	/^    TwoBodySpaceLSJTN() {};$/;"	f	class:basis::TwoBodySpaceLSJTN
TwoBodySpaceLSJTN	src/deps/basis/lsjt_scheme.h	/^  class TwoBodySpaceLSJTN$/;"	c	namespace:basis
TwoBodySpeciesPN	src/deps/basis/proton_neutron.h	/^  enum class TwoBodySpeciesPN {kPP=0,kNN=1,kPN=2};$/;"	g	namespace:basis
TwoBodyStateJJJPN	src/deps/basis/jjjpn_scheme.h	/^    TwoBodyStateJJJPN(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::TwoBodyStateJJJPN
TwoBodyStateJJJPN	src/deps/basis/jjjpn_scheme.h	/^    TwoBodyStateJJJPN(const SubspaceType& subspace, int index)$/;"	f	class:basis::TwoBodyStateJJJPN
TwoBodyStateJJJPN	src/deps/basis/jjjpn_scheme.h	/^  class TwoBodyStateJJJPN$/;"	c	namespace:basis
TwoBodyStateJJJPNLabels	src/deps/basis/jjjpn_scheme.h	/^  typedef std::tuple<int,int> TwoBodyStateJJJPNLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int>
TwoBodyStateJJJT	src/deps/basis/jjjt_scheme.h	/^    TwoBodyStateJJJT(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::TwoBodyStateJJJT
TwoBodyStateJJJT	src/deps/basis/jjjt_scheme.h	/^    TwoBodyStateJJJT(const SubspaceType& subspace, int index)$/;"	f	class:basis::TwoBodyStateJJJT
TwoBodyStateJJJT	src/deps/basis/jjjt_scheme.h	/^  class TwoBodyStateJJJT$/;"	c	namespace:basis
TwoBodyStateJJJTLabels	src/deps/basis/jjjt_scheme.h	/^  typedef std::tuple<int,HalfInt,int,HalfInt> TwoBodyStateJJJTLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,HalfInt,int,HalfInt>
TwoBodyStateJJJTN	src/deps/basis/jjjt_scheme.h	/^    TwoBodyStateJJJTN(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::TwoBodyStateJJJTN
TwoBodyStateJJJTN	src/deps/basis/jjjt_scheme.h	/^    TwoBodyStateJJJTN(const SubspaceType& subspace, int index)$/;"	f	class:basis::TwoBodyStateJJJTN
TwoBodyStateJJJTN	src/deps/basis/jjjt_scheme.h	/^  class TwoBodyStateJJJTN$/;"	c	namespace:basis
TwoBodyStateJJJTNLabels	src/deps/basis/jjjt_scheme.h	/^  typedef std::tuple<int,HalfInt,int,HalfInt> TwoBodyStateJJJTNLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,HalfInt,int,HalfInt>
TwoBodyStateLSJT	src/deps/basis/lsjt_scheme.h	/^    TwoBodyStateLSJT(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::TwoBodyStateLSJT
TwoBodyStateLSJT	src/deps/basis/lsjt_scheme.h	/^    TwoBodyStateLSJT(const SubspaceType& subspace, int index)$/;"	f	class:basis::TwoBodyStateLSJT
TwoBodyStateLSJT	src/deps/basis/lsjt_scheme.h	/^  class TwoBodyStateLSJT$/;"	c	namespace:basis
TwoBodyStateLSJTLabels	src/deps/basis/lsjt_scheme.h	/^  typedef std::tuple<int,int,int,int> TwoBodyStateLSJTLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int,int>
TwoBodyStateLSJTN	src/deps/basis/lsjt_scheme.h	/^    TwoBodyStateLSJTN(const SubspaceType& subspace, const StateLabelsType& state_labels)$/;"	f	class:basis::TwoBodyStateLSJTN
TwoBodyStateLSJTN	src/deps/basis/lsjt_scheme.h	/^    TwoBodyStateLSJTN(const SubspaceType& subspace, int index)$/;"	f	class:basis::TwoBodyStateLSJTN
TwoBodyStateLSJTN	src/deps/basis/lsjt_scheme.h	/^  class TwoBodyStateLSJTN$/;"	c	namespace:basis
TwoBodyStateLSJTNLabels	src/deps/basis/lsjt_scheme.h	/^  typedef std::tuple<int,int,int,int> TwoBodyStateLSJTNLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int,int>
TwoBodySubspaceJJJPN	src/deps/basis/jjjpn_scheme.cpp	/^  TwoBodySubspaceJJJPN::TwoBodySubspaceJJJPN($/;"	f	class:basis::TwoBodySubspaceJJJPN
TwoBodySubspaceJJJPN	src/deps/basis/jjjpn_scheme.h	/^  class TwoBodySubspaceJJJPN$/;"	c	namespace:basis
TwoBodySubspaceJJJPNLabels	src/deps/basis/jjjpn_scheme.h	/^  typedef std::tuple<TwoBodySpeciesPN,int,int> TwoBodySubspaceJJJPNLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<TwoBodySpeciesPN,int,int>
TwoBodySubspaceJJJT	src/deps/basis/jjjt_scheme.cpp	/^  TwoBodySubspaceJJJT::TwoBodySubspaceJJJT($/;"	f	class:basis::TwoBodySubspaceJJJT
TwoBodySubspaceJJJT	src/deps/basis/jjjt_scheme.h	/^      TwoBodySubspaceJJJT() {};$/;"	f	class:basis::TwoBodySubspaceJJJT
TwoBodySubspaceJJJT	src/deps/basis/jjjt_scheme.h	/^  class TwoBodySubspaceJJJT$/;"	c	namespace:basis
TwoBodySubspaceJJJTLabels	src/deps/basis/jjjt_scheme.h	/^  typedef std::tuple<int,int,int> TwoBodySubspaceJJJTLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int>
TwoBodySubspaceJJJTN	src/deps/basis/jjjt_scheme.cpp	/^  TwoBodySubspaceJJJTN::TwoBodySubspaceJJJTN($/;"	f	class:basis::TwoBodySubspaceJJJTN
TwoBodySubspaceJJJTN	src/deps/basis/jjjt_scheme.h	/^      TwoBodySubspaceJJJTN() {};$/;"	f	class:basis::TwoBodySubspaceJJJTN
TwoBodySubspaceJJJTN	src/deps/basis/jjjt_scheme.h	/^  class TwoBodySubspaceJJJTN$/;"	c	namespace:basis
TwoBodySubspaceJJJTNLabels	src/deps/basis/jjjt_scheme.h	/^  typedef std::tuple<int,int,int,int> TwoBodySubspaceJJJTNLabels;  \/\/ (MODIFICATION for subspa/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int,int>
TwoBodySubspaceLSJT	src/deps/basis/lsjt_scheme.cpp	/^  TwoBodySubspaceLSJT::TwoBodySubspaceLSJT($/;"	f	class:basis::TwoBodySubspaceLSJT
TwoBodySubspaceLSJT	src/deps/basis/lsjt_scheme.h	/^      TwoBodySubspaceLSJT() {};$/;"	f	class:basis::TwoBodySubspaceLSJT
TwoBodySubspaceLSJT	src/deps/basis/lsjt_scheme.h	/^  class TwoBodySubspaceLSJT$/;"	c	namespace:basis
TwoBodySubspaceLSJTLabels	src/deps/basis/lsjt_scheme.h	/^  typedef std::tuple<int,int,int,int,int> TwoBodySubspaceLSJTLabels;$/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int,int,int>
TwoBodySubspaceLSJTN	src/deps/basis/lsjt_scheme.cpp	/^  TwoBodySubspaceLSJTN::TwoBodySubspaceLSJTN($/;"	f	class:basis::TwoBodySubspaceLSJTN
TwoBodySubspaceLSJTN	src/deps/basis/lsjt_scheme.h	/^      TwoBodySubspaceLSJTN() {};$/;"	f	class:basis::TwoBodySubspaceLSJTN
TwoBodySubspaceLSJTN	src/deps/basis/lsjt_scheme.h	/^  class TwoBodySubspaceLSJTN$/;"	c	namespace:basis
TwoBodySubspaceLSJTNLabels	src/deps/basis/lsjt_scheme.h	/^  typedef std::tuple<int,int,int,int,int,int> TwoBodySubspaceLSJTNLabels;  \/\/ (MODIFICATION fo/;"	t	namespace:basis	typeref:typename:std::tuple<int,int,int,int,int,int>
Tz	src/deps/basis/m_scheme.h	/^      HalfInt Tz() const {return kOrbitalSpeciesPNCodeTz[int(orbital_species())];}$/;"	f	class:basis::SingleParticleSubspacePN	typeref:typename:HalfInt
Tz	src/deps/basis/m_scheme.h	/^      HalfInt Tz() const {return subspace().Tz();}$/;"	f	class:basis::SingleParticleStatePN	typeref:typename:HalfInt
Tz	src/deps/basis/nlj_orbital.h	/^      HalfInt Tz() const {return kOrbitalSpeciesPNCodeTz[int(orbital_species())];}$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:HalfInt
Tz	src/deps/basis/nlj_orbital.h	/^      HalfInt Tz() const {return kOrbitalSpeciesPNCodeTz[int(orbital_species())];}$/;"	f	class:basis::OrbitalSubspacePN	typeref:typename:HalfInt
Tz	src/deps/basis/nlj_orbital.h	/^    HalfInt Tz() const {return subspace().Tz();}$/;"	f	class:basis::OrbitalStateLJPN	typeref:typename:HalfInt
Tz	src/deps/basis/nlj_orbital.h	/^    HalfInt Tz() const {return subspace().Tz();}$/;"	f	class:basis::OrbitalStatePN	typeref:typename:HalfInt
Tz0	src/deps/basis/jjjpn_scheme.h	/^    int Tz0() const {return Tz0_;};$/;"	f	class:basis::TwoBodySectorsJJJPN	typeref:typename:int
Tz0	src/deps/basis/nlj_orbital.h	/^    int Tz0()    const {return Tz0_;}$/;"	f	class:basis::OrbitalSectorsLJPN	typeref:typename:int
Tz0_	src/deps/basis/jjjpn_scheme.h	/^    int J0_, g0_, Tz0_;$/;"	m	class:basis::TwoBodySectorsJJJPN	typeref:typename:int
Tz0_	src/deps/basis/nlj_orbital.h	/^    int j0_, g0_, Tz0_;$/;"	m	class:basis::OrbitalSectorsLJPN	typeref:typename:int
UnaryMinus	src/deps/basis/mcutils/vector_tuple.h	/^  template<class T> T UnaryMinus(const T& a)$/;"	f	namespace:mcutils	typeref:typename:T
UnitStep	src/deps/basis/mcutils/arithmetic.h	/^    int UnitStep(const T& x)$/;"	f	namespace:mcutils	typeref:typename:int
Unitary6J	src/deps/basis/am/wigner_gsl.h	/^    double Unitary6J($/;"	f	namespace:am	typeref:typename:double
Unitary6J2	src/deps/basis/am/wigner_gsl_twice.h	/^    double Unitary6J2($/;"	f	namespace:am	typeref:typename:double
Unitary6JZ	src/deps/basis/am/wigner_gsl.h	/^    double Unitary6JZ($/;"	f	namespace:am	typeref:typename:double
Unitary9J	src/deps/basis/am/wigner_gsl.h	/^    double Unitary9J($/;"	f	namespace:am	typeref:typename:double
Unitary9J2	src/deps/basis/am/wigner_gsl_twice.h	/^    double Unitary9J2($/;"	f	namespace:am	typeref:typename:double
UpperTriangularEntries	src/deps/basis/operator.h	/^    int UpperTriangularEntries($/;"	f	namespace:basis	typeref:typename:int
ValidIndex	src/deps/basis/basis.h	/^      int ValidIndex() const$/;"	f	class:basis::BaseState	typeref:typename:int
ValidLabels	src/deps/basis/degenerate_test.cpp	/^  bool RelativeDegenerateSubspaceLSJT::ValidLabels() const$/;"	f	class:basis::RelativeDegenerateSubspaceLSJT	typeref:typename:bool
ValidLabels	src/deps/basis/jjjt_scheme.cpp	/^  bool TwoBodySubspaceJJJT::ValidLabels() const$/;"	f	class:basis::TwoBodySubspaceJJJT	typeref:typename:bool
ValidLabels	src/deps/basis/jjjt_scheme.cpp	/^  bool TwoBodySubspaceJJJTN::ValidLabels() const$/;"	f	class:basis::TwoBodySubspaceJJJTN	typeref:typename:bool
ValidLabels	src/deps/basis/lsjt_scheme.cpp	/^  bool RelativeCMSubspaceLSJT::ValidLabels() const$/;"	f	class:basis::RelativeCMSubspaceLSJT	typeref:typename:bool
ValidLabels	src/deps/basis/lsjt_scheme.cpp	/^  bool RelativeCMSubspaceLSJTN::ValidLabels() const$/;"	f	class:basis::RelativeCMSubspaceLSJTN	typeref:typename:bool
ValidLabels	src/deps/basis/lsjt_scheme.cpp	/^  bool RelativeSubspaceLSJT::ValidLabels() const$/;"	f	class:basis::RelativeSubspaceLSJT	typeref:typename:bool
ValidLabels	src/deps/basis/lsjt_scheme.cpp	/^  bool TwoBodySubspaceLSJT::ValidLabels() const$/;"	f	class:basis::TwoBodySubspaceLSJT	typeref:typename:bool
ValidLabels	src/deps/basis/lsjt_scheme.cpp	/^  bool TwoBodySubspaceLSJTN::ValidLabels() const$/;"	f	class:basis::TwoBodySubspaceLSJTN	typeref:typename:bool
VectorTuple	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple() : values_(N){};$/;"	f	class:mcutils::VectorTuple
VectorTuple	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple(const vector_type& v) : values_(v) {};$/;"	f	class:mcutils::VectorTuple
VectorTuple	src/deps/basis/mcutils/vector_tuple.h	/^    class VectorTuple{$/;"	c	namespace:mcutils
VectorTuple	src/deps/basis/mcutils/vector_tuple.h	/^    explicit VectorTuple(const T& a) : values_(N,a) {};$/;"	f	class:mcutils::VectorTuple
VerifyBinary	src/deps/basis/mcutils/io.h	/^    void VerifyBinary($/;"	f	namespace:mcutils	typeref:typename:void
WIGNER2_GSL_H_	src/deps/basis/am/wigner_gsl_twice.h	/^#define WIGNER2_GSL_H_$/;"	d
WIGNER_GSL_H_	src/deps/basis/am/wigner_gsl.h	/^#define WIGNER_GSL_H_$/;"	d
WeightMax	src/deps/basis/jjjpn_scheme.h	/^    WeightMax() {};$/;"	f	struct:basis::WeightMax
WeightMax	src/deps/basis/jjjpn_scheme.h	/^    WeightMax(basis::Rank truncation_rank, int truncation_cutoff)$/;"	f	struct:basis::WeightMax
WeightMax	src/deps/basis/jjjpn_scheme.h	/^    WeightMax(double wp, double wn, double wpp, double wnn, double wpn)$/;"	f	struct:basis::WeightMax
WeightMax	src/deps/basis/jjjpn_scheme.h	/^    WeightMax(int N1max, int N2max)$/;"	f	struct:basis::WeightMax
WeightMax	src/deps/basis/jjjpn_scheme.h	/^  struct WeightMax$/;"	s	namespace:basis
Wigner3J	src/deps/basis/am/wigner_gsl.h	/^    double Wigner3J($/;"	f	namespace:am	typeref:typename:double
Wigner3J2	src/deps/basis/am/wigner_gsl_twice.h	/^    double Wigner3J2($/;"	f	namespace:am	typeref:typename:double
Wigner6J	src/deps/basis/am/wigner_gsl.h	/^    double Wigner6J($/;"	f	namespace:am	typeref:typename:double
Wigner6J2	src/deps/basis/am/wigner_gsl_twice.h	/^    double Wigner6J2($/;"	f	namespace:am	typeref:typename:double
Wigner9J	src/deps/basis/am/wigner_gsl.h	/^    double Wigner9J($/;"	f	namespace:am	typeref:typename:double
Wigner9J2	src/deps/basis/am/wigner_gsl_twice.h	/^    double Wigner9J2($/;"	f	namespace:am	typeref:typename:double
WriteBinary	src/deps/basis/mcutils/io.h	/^    void WriteBinary(std::ostream& os, tDataType data)$/;"	f	namespace:mcutils	typeref:typename:void
WriteRelativeCMOperatorComponentLSJT	src/deps/basis/lsjt_operator.cpp	/^  void WriteRelativeCMOperatorComponentLSJT($/;"	f	namespace:basis	typeref:typename:void
WriteRelativeCMOperatorParametersLSJT	src/deps/basis/lsjt_operator.cpp	/^  void WriteRelativeCMOperatorParametersLSJT($/;"	f	namespace:basis	typeref:typename:void
WriteRelativeOperatorComponentLSJT	src/deps/basis/lsjt_operator.cpp	/^  void WriteRelativeOperatorComponentLSJT($/;"	f	namespace:basis	typeref:typename:void
WriteRelativeOperatorLSJT	src/deps/basis/lsjt_operator.cpp	/^  void WriteRelativeOperatorLSJT($/;"	f	namespace:basis	typeref:typename:void
WriteRelativeOperatorParametersLSJT	src/deps/basis/lsjt_operator.cpp	/^  void WriteRelativeOperatorParametersLSJT($/;"	f	namespace:basis	typeref:typename:void
WriteTest	src/deps/basis/jjjpn_operator_test.cpp	/^void WriteTest(const std::string& filename)$/;"	f	typeref:typename:void
WriteTestRelative	src/deps/basis/lsjt_operator_test.cpp	/^void WriteTestRelative(const std::string& filename)$/;"	f	typeref:typename:void
WriteTestRelativeCM	src/deps/basis/lsjt_operator_test.cpp	/^void WriteTestRelativeCM(const std::string& filename)$/;"	f	typeref:typename:void
WriteTestRelativeManual	src/deps/basis/lsjt_operator_test.cpp	/^void WriteTestRelativeManual(const std::string& filename)$/;"	f	typeref:typename:void
WriteTestTwoBody	src/deps/basis/lsjt_operator_test.cpp	/^void WriteTestTwoBody(const std::string& filename)$/;"	f	typeref:typename:void
WriteTwoBodyOperatorComponentJJJT	src/deps/basis/jjjt_operator.cpp	/^  void WriteTwoBodyOperatorComponentJJJT($/;"	f	namespace:basis	typeref:typename:void
WriteTwoBodyOperatorComponentLSJT	src/deps/basis/lsjt_operator.cpp	/^  void WriteTwoBodyOperatorComponentLSJT($/;"	f	namespace:basis	typeref:typename:void
WriteTwoBodyOperatorJJJPN	src/deps/basis/jjjpn_operator.cpp	/^  void WriteTwoBodyOperatorJJJPN($/;"	f	namespace:basis	typeref:typename:void
__CONSTANTS_H__	src/constants.h	/^#define __CONSTANTS_H__$/;"	d
__OPERATORS_H__	old_c/operators.h	/^#define __OPERATORS_H__$/;"	d
__TDHO_H__	old_c/tdho.h	/^#define __TDHO_H__$/;"	d
__UTILITY_H__	src/utility.h	/^#define __UTILITY_H__$/;"	d
__init__	main.py	/^    def __init__(self, operator, osc_energy, nmax, jmax):$/;"	m	class:MatrixFile
abs	src/deps/basis/am/halfint.h	/^inline HalfInt abs(const HalfInt& h)$/;"	f	typeref:typename:HalfInt
accumulated_time_	src/deps/basis/mcutils/profiling.h	/^    double accumulated_time_;$/;"	m	class:mcutils::SteadyTimer	typeref:typename:double
add_to_file	main.py	/^        def add_to_file(fname):$/;"	f	member:MatrixFile.generate_files	file:
all	makefile	/^all: splash libraries programs generated finished$/;"	t
all	old_c/Makefile	/^all: $(EXECUTABLE)$/;"	t
all	src/deps/basis/makefile	/^all: splash libraries programs generated finished$/;"	t
all	src/deps/ndmakefile/makefile	/^all: splash libraries programs generated finished$/;"	t
allocator_type	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::allocator_type allocator_type;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::allocator_type
am	src/deps/basis/am/am.cpp	/^namespace am {$/;"	n	file:
am	src/deps/basis/am/am.h	/^namespace am {$/;"	n
am	src/deps/basis/am/racah_reduction.h	/^namespace am {$/;"	n
am	src/deps/basis/am/rme.h	/^namespace am {$/;"	n
am	src/deps/basis/am/wigner_gsl.h	/^namespace am {$/;"	n
am	src/deps/basis/am/wigner_gsl_twice.h	/^namespace am {$/;"	n
archive_ext	makefile	/^archive_ext := .a$/;"	m
archive_ext	src/deps/basis/makefile	/^archive_ext := .a$/;"	m
archive_ext	src/deps/ndmakefile/makefile	/^archive_ext := .a$/;"	m
archives	makefile	/^archives := $(addsuffix $(archive_ext),$(libraries))$/;"	m
archives	src/deps/basis/makefile	/^archives := $(addsuffix $(archive_ext),$(libraries))$/;"	m
archives	src/deps/ndmakefile/makefile	/^archives := $(addsuffix $(archive_ext),$(libraries))$/;"	m
b	old_c/tdho.h	/^struct wf_params { int n; int l; int ml; double b; };$/;"	m	struct:wf_params	typeref:typename:double
basis	src/deps/basis/basis.h	/^namespace basis {$/;"	n
basis	src/deps/basis/degenerate.h	/^namespace basis {$/;"	n
basis	src/deps/basis/degenerate_test.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/hypersector.h	/^namespace basis {$/;"	n
basis	src/deps/basis/hypersector_test.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/jjjpn_operator.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/jjjpn_operator.h	/^namespace basis {$/;"	n
basis	src/deps/basis/jjjpn_scheme.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/jjjpn_scheme.h	/^namespace basis {$/;"	n
basis	src/deps/basis/jjjt_operator.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/jjjt_operator.h	/^namespace basis {$/;"	n
basis	src/deps/basis/jjjt_scheme.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/jjjt_scheme.h	/^namespace basis {$/;"	n
basis	src/deps/basis/jt_operator.h	/^namespace basis {$/;"	n
basis	src/deps/basis/lsjt_operator.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/lsjt_operator.h	/^namespace basis {$/;"	n
basis	src/deps/basis/lsjt_scheme.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/lsjt_scheme.h	/^namespace basis {$/;"	n
basis	src/deps/basis/m_scheme.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/m_scheme.h	/^namespace basis {$/;"	n
basis	src/deps/basis/many_body.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/many_body.h	/^namespace basis {$/;"	n
basis	src/deps/basis/nlj_operator.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/nlj_operator.h	/^namespace basis {$/;"	n
basis	src/deps/basis/nlj_orbital.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/nlj_orbital.h	/^namespace basis {$/;"	n
basis	src/deps/basis/operator.h	/^namespace basis {$/;"	n
basis	src/deps/basis/proton_neutron.cpp	/^namespace basis {$/;"	n	file:
basis	src/deps/basis/proton_neutron.h	/^namespace basis {$/;"	n
begin	src/deps/basis/mcutils/memoizer.h	/^    const_iterator begin() const {return values_.begin();};$/;"	f	class:mcutils::Memoizer	typeref:typename:const_iterator
begin	src/deps/basis/mcutils/vector_tuple.h	/^    const_iterator begin() const {return values_.begin();};$/;"	f	class:mcutils::VectorTuple	typeref:typename:const_iterator
begin	src/deps/basis/mcutils/vector_tuple.h	/^    iterator begin() {return values_.begin();};$/;"	f	class:mcutils::VectorTuple	typeref:typename:iterator
begin-module	makefile	/^define begin-module$/;"	m
begin-module	src/deps/basis/makefile	/^define begin-module$/;"	m
begin-module	src/deps/ndmakefile/makefile	/^define begin-module$/;"	m
binary_ext	makefile	/^binary_ext := $(get-exe-ext)$/;"	m
binary_ext	src/deps/basis/makefile	/^binary_ext := $(get-exe-ext)$/;"	m
binary_ext	src/deps/ndmakefile/makefile	/^binary_ext := $(get-exe-ext)$/;"	m
bra	src/chiral.h	/^        basis::RelativeStateLSJT bra;$/;"	m	class:chiral::Operator	typeref:typename:basis::RelativeStateLSJT
bra_orbital_space	src/deps/basis/nlj_operator.h	/^    OrbitalSpaceLJPN bra_orbital_space;$/;"	m	struct:basis::OneBodyOperatorLJPN	typeref:typename:OrbitalSpaceLJPN
bra_subspace	src/deps/basis/basis.h	/^      const SubspaceType& bra_subspace() const {return *bra_subspace_ptr_;}$/;"	f	class:basis::BaseSector	typeref:typename:const SubspaceType &
bra_subspace	src/deps/basis/hypersector.h	/^      const SubspaceType& bra_subspace() const {return *bra_subspace_ptr_;}$/;"	f	class:basis::BaseHypersector	typeref:typename:const SubspaceType &
bra_subspace_index	src/deps/basis/basis.h	/^      int bra_subspace_index() const {return bra_subspace_index_;}$/;"	f	class:basis::BaseSector	typeref:typename:int
bra_subspace_index	src/deps/basis/hypersector.h	/^      int bra_subspace_index() const {return bra_subspace_index_;}$/;"	f	class:basis::BaseHypersector	typeref:typename:int
bra_subspace_index_	src/deps/basis/basis.h	/^      int bra_subspace_index_, ket_subspace_index_;$/;"	m	class:basis::BaseSector	typeref:typename:int
bra_subspace_index_	src/deps/basis/hypersector.h	/^      int bra_subspace_index_, ket_subspace_index_, operator_subspace_index_;$/;"	m	class:basis::BaseHypersector	typeref:typename:int
bra_subspace_ptr_	src/deps/basis/basis.h	/^      const SubspaceType* bra_subspace_ptr_;$/;"	m	class:basis::BaseSector	typeref:typename:const SubspaceType *
bra_subspace_ptr_	src/deps/basis/hypersector.h	/^      const SubspaceType* bra_subspace_ptr_;$/;"	m	class:basis::BaseHypersector	typeref:typename:const SubspaceType *
cache_enabled_	src/deps/basis/mcutils/memoizer.h	/^    bool cache_enabled_;$/;"	m	class:mcutils::Memoizer	typeref:typename:bool
charge_radius	src/chiral.h	/^            charge_radius,$/;"	e	enum:chiral::Operator::Name
chiral	src/chiral.h	/^namespace chiral$/;"	n
chiral	src/operator_rc_sq.h	/^namespace chiral$/;"	n
clean	makefile	/^clean:$/;"	t
clean	old_c/Makefile	/^clean:$/;"	t
clean	src/deps/basis/makefile	/^clean:$/;"	t
clean	src/deps/ndmakefile/makefile	/^clean:$/;"	t
clear	src/deps/basis/mcutils/memoizer.h	/^    void clear() {return values_.clear();};$/;"	f	class:mcutils::Memoizer	typeref:typename:void
clebsch	src/utility.h	/^    inline double clebsch(int ja, int jb, int j, int mja, int mjb, int mj)$/;"	f	namespace:util	typeref:typename:double
const_iterator	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::const_iterator const_iterator;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::const_iterator
const_iterator	src/deps/basis/mcutils/vector_tuple.h	/^    typedef typename std::vector<T>::const_iterator const_iterator;$/;"	t	class:mcutils::VectorTuple	typeref:typename:std::vector<T>::const_iterator
const_pointer	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::const_pointer const_pointer;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::const_pointer
const_reference	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::const_reference const_reference;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::const_reference
const_reverse_iterator	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::const_reverse_iterator const_reverse_iterator;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::const_reverse_iterator
const_reverse_iterator	src/deps/basis/mcutils/vector_tuple.h	/^    typedef typename std::vector<T>::const_reverse_iterator const_reverse_iterator;$/;"	t	class:mcutils::VectorTuple	typeref:typename:std::vector<T>::const_reverse_iterator
constants	src/constants.h	/^namespace constants$/;"	n
cpp_ext	makefile	/^cpp_ext := .cpp$/;"	m
cpp_ext	src/deps/basis/makefile	/^cpp_ext := .cpp$/;"	m
cpp_ext	src/deps/ndmakefile/makefile	/^cpp_ext := .cpp$/;"	m
create_file	main.py	/^        def create_file():$/;"	f	member:MatrixFile.generate_files	file:
current-dir	makefile	/^define current-dir$/;"	m
current-dir	src/deps/basis/makefile	/^define current-dir$/;"	m
current-dir	src/deps/ndmakefile/makefile	/^define current-dir$/;"	m
current_result_	src/deps/basis/mcutils/memoizer.h	/^    T current_result_;$/;"	m	class:mcutils::Memoizer	typeref:typename:T
data	old_c/operator_gt.c	/^struct data { int n; int l; }; $/;"	s	file:
debug_output	makefile	/^debug_output :=$/;"	m
debug_output	src/deps/basis/makefile	/^debug_output :=$/;"	m
debug_output	src/deps/ndmakefile/makefile	/^debug_output :=$/;"	m
degeneracy	src/deps/basis/degenerate.h	/^      int degeneracy() const$/;"	f	class:basis::BaseDegenerateState	typeref:typename:int
delimiter_left_	src/deps/basis/mcutils/memoizer.h	/^    static std::string delimiter_left_;$/;"	m	class:mcutils::Memoizer	typeref:typename:std::string
delimiter_left_	src/deps/basis/mcutils/memoizer.h	/^    std::string Memoizer<Key,T,Compare,Alloc>::delimiter_left_("  ");$/;"	m	class:mcutils::Memoizer<Key,T,Compare,Alloc>	typeref:typename:std::string
delimiter_left_	src/deps/basis/mcutils/vector_tuple.h	/^    static std::string delimiter_left_;$/;"	m	class:mcutils::VectorTuple	typeref:typename:std::string
delimiter_left_	src/deps/basis/mcutils/vector_tuple.h	/^    std::string VectorTuple<T,N,B>::delimiter_left_("(");$/;"	m	class:mcutils::VectorTuple<T,N,B>	typeref:typename:std::string
delimiter_middle_	src/deps/basis/mcutils/memoizer.h	/^    static std::string delimiter_middle_;$/;"	m	class:mcutils::Memoizer	typeref:typename:std::string
delimiter_middle_	src/deps/basis/mcutils/memoizer.h	/^    std::string Memoizer<Key,T,Compare,Alloc>::delimiter_middle_("->");$/;"	m	class:mcutils::Memoizer<Key,T,Compare,Alloc>	typeref:typename:std::string
delimiter_middle_	src/deps/basis/mcutils/vector_tuple.h	/^    static std::string delimiter_middle_;$/;"	m	class:mcutils::VectorTuple	typeref:typename:std::string
delimiter_middle_	src/deps/basis/mcutils/vector_tuple.h	/^    std::string VectorTuple<T,N,B>::delimiter_middle_(",");$/;"	m	class:mcutils::VectorTuple<T,N,B>	typeref:typename:std::string
delimiter_right_	src/deps/basis/mcutils/memoizer.h	/^    static std::string delimiter_right_;$/;"	m	class:mcutils::Memoizer	typeref:typename:std::string
delimiter_right_	src/deps/basis/mcutils/memoizer.h	/^    std::string Memoizer<Key,T,Compare,Alloc>::delimiter_right_("\\n");$/;"	m	class:mcutils::Memoizer<Key,T,Compare,Alloc>	typeref:typename:std::string
delimiter_right_	src/deps/basis/mcutils/vector_tuple.h	/^    static std::string delimiter_right_;$/;"	m	class:mcutils::VectorTuple	typeref:typename:std::string
delimiter_right_	src/deps/basis/mcutils/vector_tuple.h	/^    std::string VectorTuple<T,N,B>::delimiter_right_(")");$/;"	m	class:mcutils::VectorTuple<T,N,B>	typeref:typename:std::string
delta	src/utility.h	/^    inline int delta(int a, int b) { return a == b; };$/;"	f	namespace:util	typeref:typename:int
difference_type	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::difference_type difference_type;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::difference_type
difference_type	src/deps/basis/mcutils/vector_tuple.h	/^    typedef typename std::vector<T>::difference_type difference_type;$/;"	t	class:mcutils::VectorTuple	typeref:typename:std::vector<T>::difference_type
dim	src/deps/basis/am/am.h	/^    double dim(int j)$/;"	f	namespace:am	typeref:typename:double
dim	src/deps/basis/am/am.h	/^    int dim(const HalfInt& j)$/;"	f	namespace:am	typeref:typename:int
dimension_	src/deps/basis/basis.h	/^    int dimension_;$/;"	m	class:basis::BaseSubspace	typeref:typename:int
directories	old_c/Makefile	/^directories: $(BUILDDIR)$/;"	t
distclean	makefile	/^distclean: clean$/;"	t
distclean	src/deps/basis/makefile	/^distclean: clean$/;"	t
distclean	src/deps/ndmakefile/makefile	/^distclean: clean$/;"	t
distrib	makefile	/^distrib:$/;"	t
distrib	src/deps/basis/makefile	/^distrib:$/;"	t
distrib	src/deps/ndmakefile/makefile	/^distrib:$/;"	t
distribution	makefile	/^distribution: distrib$/;"	t
distribution	src/deps/basis/makefile	/^distribution: distrib$/;"	t
distribution	src/deps/ndmakefile/makefile	/^distribution: distrib$/;"	t
elapsed_time_	src/deps/basis/mcutils/profiling.h	/^    clock_t elapsed_time_;$/;"	m	class:mcutils::Timer	typeref:typename:clock_t
end	src/deps/basis/mcutils/memoizer.h	/^    const_iterator end() const {return values_.end();};$/;"	f	class:mcutils::Memoizer	typeref:typename:const_iterator
end	src/deps/basis/mcutils/vector_tuple.h	/^    const_iterator end() const {return values_.end();};$/;"	f	class:mcutils::VectorTuple	typeref:typename:const_iterator
end	src/deps/basis/mcutils/vector_tuple.h	/^    iterator end() {return values_.end();};$/;"	f	class:mcutils::VectorTuple	typeref:typename:iterator
end-module	makefile	/^define end-module$/;"	m
end-module	src/deps/basis/makefile	/^define end-module$/;"	m
end-module	src/deps/ndmakefile/makefile	/^define end-module$/;"	m
executables	makefile	/^executables := $(addsuffix $(binary_ext),$(programs))$/;"	m
executables	src/deps/basis/makefile	/^executables := $(addsuffix $(binary_ext),$(programs))$/;"	m
executables	src/deps/ndmakefile/makefile	/^executables := $(addsuffix $(binary_ext),$(programs))$/;"	m
executables_test	makefile	/^executables_test := $(addsuffix $(binary_ext),$(programs-test))$/;"	m
executables_test	src/deps/basis/makefile	/^executables_test := $(addsuffix $(binary_ext),$(programs-test))$/;"	m
executables_test	src/deps/ndmakefile/makefile	/^executables_test := $(addsuffix $(binary_ext),$(programs-test))$/;"	m
extras	makefile	/^extras :=$/;"	m
extras	src/deps/basis/am/project.mk	/^extras := README.md LICENSE.md$/;"	m
extras	src/deps/basis/makefile	/^extras :=$/;"	m
extras	src/deps/basis/mcutils/project.mk	/^extras := README.md LICENSE.md$/;"	m
extras	src/deps/basis/project.mk	/^extras := README.md LICENSE.md$/;"	m
extras	src/deps/ndmakefile/makefile	/^extras :=$/;"	m
f	src/deps/basis/mcutils/memoizer_test.cpp	/^HalfInt f(int i)$/;"	f	typeref:typename:HalfInt
f_ext	makefile	/^f_ext := .F$/;"	m
f_ext	src/deps/basis/makefile	/^f_ext := .F$/;"	m
f_ext	src/deps/ndmakefile/makefile	/^f_ext := .F$/;"	m
factorial_cached	src/deps/basis/mcutils/memoizer_test.cpp	/^int factorial_cached(int i)$/;"	f	typeref:typename:int
factorial_cached_timing	src/deps/basis/mcutils/memoizer_test.cpp	/^int factorial_cached_timing(int i)$/;"	f	typeref:typename:int
factorial_disabled	src/deps/basis/mcutils/memoizer_test.cpp	/^int factorial_disabled(int i)$/;"	f	typeref:typename:int
factorial_disabled_timing	src/deps/basis/mcutils/memoizer_test.cpp	/^int factorial_disabled_timing(int i)$/;"	f	typeref:typename:int
factorial_dump	src/deps/basis/mcutils/memoizer_test.cpp	/^int factorial_dump(int i)$/;"	f	typeref:typename:int
factorial_plain_timing	src/deps/basis/mcutils/memoizer_test.cpp	/^int factorial_plain_timing(int i)$/;"	f	typeref:typename:int
finished	makefile	/^finished:$/;"	t
finished	src/deps/basis/makefile	/^finished:$/;"	t
finished	src/deps/ndmakefile/makefile	/^finished:$/;"	t
fortran_flags	config.mk	/^fortran_flags :=$/;"	m
fortran_flags	makefile	/^fortran_flags :=$/;"	m
fortran_flags	src/deps/basis/config.mk	/^fortran_flags :=$/;"	m
fortran_flags	src/deps/basis/makefile	/^fortran_flags :=$/;"	m
fortran_flags	src/deps/ndconfig/config-gnu.mk	/^fortran_flags :=$/;"	m
fortran_flags	src/deps/ndconfig/config-intel.mk	/^fortran_flags :=$/;"	m
fortran_flags	src/deps/ndmakefile/makefile	/^fortran_flags :=$/;"	m
fortran_libs	config.mk	/^fortran_libs := -lgfortran -lquadmath$/;"	m
fortran_libs	makefile	/^fortran_libs :=$/;"	m
fortran_libs	src/deps/basis/config.mk	/^fortran_libs := -lgfortran -lquadmath$/;"	m
fortran_libs	src/deps/basis/makefile	/^fortran_libs :=$/;"	m
fortran_libs	src/deps/ndconfig/config-gnu.mk	/^fortran_libs := -lgfortran -lquadmath$/;"	m
fortran_libs	src/deps/ndconfig/config-intel.mk	/^fortran_libs := -lifport -lifcore -limf$/;"	m
fortran_libs	src/deps/ndmakefile/makefile	/^fortran_libs :=$/;"	m
from_input	main.py	/^    def from_input(cls):$/;"	m	class:MatrixFile
full	src/chiral.h	/^        enum class Order { lo, nlo, n2lo, n3lo, n4lo, full };$/;"	e	enum:chiral::Operator::Order
full_dimension	src/deps/basis/degenerate.h	/^    int full_dimension() const$/;"	f	class:basis::BaseDegenerateSubspace	typeref:typename:int
full_dimension_	src/deps/basis/degenerate.h	/^    int full_dimension_;  \/\/ total number of substates$/;"	m	class:basis::BaseDegenerateSubspace	typeref:typename:int
full_labels	src/deps/basis/m_scheme.h	/^      FullSingleParticleStateLabels full_labels() const$/;"	f	class:basis::SingleParticleStatePN	typeref:typename:FullSingleParticleStateLabels
full_labels	src/deps/basis/nlj_orbital.h	/^    FullOrbitalLabels full_labels() const$/;"	f	class:basis::OrbitalStateLJPN	typeref:typename:FullOrbitalLabels
full_labels	src/deps/basis/nlj_orbital.h	/^    FullOrbitalLabels full_labels() const$/;"	f	class:basis::OrbitalStatePN	typeref:typename:FullOrbitalLabels
g	src/deps/basis/degenerate_test.cpp	/^      int g() const {return std::get<4>(labels_);}$/;"	f	class:basis::RelativeDegenerateSubspaceLSJT	typeref:typename:int	file:
g	src/deps/basis/degenerate_test.cpp	/^    int g() const {return subspace().g();}$/;"	f	class:basis::RelativeDegenerateStateLSJT	typeref:typename:int	file:
g	src/deps/basis/jjjpn_scheme.h	/^      int g() const {return std::get<2>(labels_);}$/;"	f	class:basis::TwoBodySubspaceJJJPN	typeref:typename:int
g	src/deps/basis/jjjpn_scheme.h	/^    int g() const {return subspace().g();}$/;"	f	class:basis::TwoBodyStateJJJPN	typeref:typename:int
g	src/deps/basis/jjjt_scheme.h	/^      int g() const {return std::get<2>(labels_);}$/;"	f	class:basis::TwoBodySubspaceJJJT	typeref:typename:int
g	src/deps/basis/jjjt_scheme.h	/^      int g() const {return std::get<2>(labels_);}$/;"	f	class:basis::TwoBodySubspaceJJJTN	typeref:typename:int
g	src/deps/basis/jjjt_scheme.h	/^    int g() const {return subspace().g();}$/;"	f	class:basis::TwoBodyStateJJJT	typeref:typename:int
g	src/deps/basis/jjjt_scheme.h	/^    int g() const {return subspace().g();}$/;"	f	class:basis::TwoBodyStateJJJTN	typeref:typename:int
g	src/deps/basis/lsjt_scheme.h	/^      int g() const {return std::get<4>(labels_);}$/;"	f	class:basis::RelativeCMSubspaceLSJT	typeref:typename:int
g	src/deps/basis/lsjt_scheme.h	/^      int g() const {return std::get<4>(labels_);}$/;"	f	class:basis::RelativeCMSubspaceLSJTN	typeref:typename:int
g	src/deps/basis/lsjt_scheme.h	/^      int g() const {return std::get<4>(labels_);}$/;"	f	class:basis::RelativeSubspaceLSJT	typeref:typename:int
g	src/deps/basis/lsjt_scheme.h	/^      int g() const {return std::get<4>(labels_);}$/;"	f	class:basis::TwoBodySubspaceLSJT	typeref:typename:int
g	src/deps/basis/lsjt_scheme.h	/^      int g() const {return std::get<4>(labels_);}$/;"	f	class:basis::TwoBodySubspaceLSJTN	typeref:typename:int
g	src/deps/basis/lsjt_scheme.h	/^    int g() const {return subspace().g();}$/;"	f	class:basis::RelativeCMStateLSJT	typeref:typename:int
g	src/deps/basis/lsjt_scheme.h	/^    int g() const {return subspace().g();}$/;"	f	class:basis::RelativeCMStateLSJTN	typeref:typename:int
g	src/deps/basis/lsjt_scheme.h	/^    int g() const {return subspace().g();}$/;"	f	class:basis::RelativeStateLSJT	typeref:typename:int
g	src/deps/basis/lsjt_scheme.h	/^    int g() const {return subspace().g();}$/;"	f	class:basis::TwoBodyStateLSJT	typeref:typename:int
g	src/deps/basis/lsjt_scheme.h	/^    int g() const {return subspace().g();}$/;"	f	class:basis::TwoBodyStateLSJTN	typeref:typename:int
g	src/deps/basis/m_scheme.h	/^      int g() const {return l()%2;}$/;"	f	class:basis::SingleParticleStatePN	typeref:typename:int
g	src/deps/basis/mcutils/memoizer_test.cpp	/^int g(int i)$/;"	f	typeref:typename:int
g	src/deps/basis/nlj_orbital.h	/^      int g() const {return l()%2;}$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:int
g	src/deps/basis/nlj_orbital.h	/^    int g() const {return l()%2;}$/;"	f	class:basis::OrbitalStateLJPN	typeref:typename:int
g	src/deps/basis/nlj_orbital.h	/^    int g() const {return l()%2;}$/;"	f	class:basis::OrbitalStatePN	typeref:typename:int
g0	src/deps/basis/jjjpn_scheme.h	/^    int g0() const {return g0_;};$/;"	f	class:basis::TwoBodySectorsJJJPN	typeref:typename:int
g0	src/deps/basis/jt_operator.h	/^    int J0, g0, T0_min, T0_max;$/;"	m	struct:basis::OperatorLabelsJT	typeref:typename:int
g0	src/deps/basis/nlj_orbital.h	/^    int g0()     const {return g0_;}$/;"	f	class:basis::OrbitalSectorsLJPN	typeref:typename:int
g0_	src/deps/basis/jjjpn_scheme.h	/^    int J0_, g0_, Tz0_;$/;"	m	class:basis::TwoBodySectorsJJJPN	typeref:typename:int
g0_	src/deps/basis/nlj_orbital.h	/^    int j0_, g0_, Tz0_;$/;"	m	class:basis::OrbitalSectorsLJPN	typeref:typename:int
gamow_teller	src/chiral.h	/^            gamow_teller,$/;"	e	enum:chiral::Operator::Name
gamow_teller_bare	old_c/operator_gt.c	/^double gamow_teller_bare(q_nums *ket, q_nums *bra, double *b)$/;"	f	typeref:typename:double
gamow_teller_n2lo	old_c/operator_gt.c	/^double gamow_teller_n2lo(q_nums *ket, q_nums *bra, double *b)$/;"	f	typeref:typename:double
gamow_teller_n2lo_d_term	old_c/operator_gt.c	/^double gamow_teller_n2lo_d_term(q_nums *ket, q_nums *bra, double *b)$/;"	f	typeref:typename:double
generate_files	main.py	/^    def generate_files(self):$/;"	m	class:MatrixFile
generated	makefile	/^generated :=$/;"	m
generated	makefile	/^generated: $(generated)$/;"	t
generated	src/deps/basis/makefile	/^generated :=$/;"	m
generated	src/deps/basis/makefile	/^generated: $(generated)$/;"	t
generated	src/deps/ndmakefile/makefile	/^generated :=$/;"	m
generated	src/deps/ndmakefile/makefile	/^generated: $(generated)$/;"	t
get-exe-ext	makefile	/^  get-exe-ext := .exe$/;"	m
get-exe-ext	makefile	/^  get-exe-ext :=$/;"	m
get-exe-ext	src/deps/basis/makefile	/^  get-exe-ext := .exe$/;"	m
get-exe-ext	src/deps/basis/makefile	/^  get-exe-ext :=$/;"	m
get-exe-ext	src/deps/ndmakefile/makefile	/^  get-exe-ext := .exe$/;"	m
get-exe-ext	src/deps/ndmakefile/makefile	/^  get-exe-ext :=$/;"	m
get_matrix_element	src/deps/basis/nlj_operator.h	/^    double get_matrix_element(const OrbitalStatePN& bra, const OrbitalStatePN& ket) const$/;"	f	struct:basis::OneBodyOperatorLJPN	typeref:typename:double
get_rme	src/chiral.h	/^        double get_rme() const { return rme; }$/;"	f	class:chiral::Operator	typeref:typename:double
h_ext	makefile	/^h_ext := .h$/;"	m
h_ext	src/deps/basis/makefile	/^h_ext := .h$/;"	m
h_ext	src/deps/ndmakefile/makefile	/^h_ext := .h$/;"	m
hash_value	src/deps/basis/am/halfint.h	/^std::size_t hash_value(const HalfInt& h)$/;"	f	typeref:typename:std::size_t
help	makefile	/^help:$/;"	t
help	src/deps/basis/makefile	/^help:$/;"	t
help	src/deps/ndmakefile/makefile	/^help:$/;"	t
hypersectors_	src/deps/basis/hypersector.h	/^      std::vector<HypersectorType> hypersectors_;$/;"	m	class:basis::BaseHypersectors	typeref:typename:std::vector<HypersectorType>
identity	src/chiral.h	/^            identity,$/;"	e	enum:chiral::Operator::Name
index	src/deps/basis/basis.h	/^      int index() const$/;"	f	class:basis::BaseState	typeref:typename:int
index1	src/deps/basis/jjjpn_scheme.h	/^    int index1() const {return std::get<0>(labels());}$/;"	f	class:basis::TwoBodyStateJJJPN	typeref:typename:int
index2	src/deps/basis/jjjpn_scheme.h	/^    int index2() const {return std::get<1>(labels());}$/;"	f	class:basis::TwoBodyStateJJJPN	typeref:typename:int
index_	src/deps/basis/basis.h	/^      int index_;   \/\/\/< 0-based index within space$/;"	m	class:basis::BaseState	typeref:typename:int
install	makefile	/^install: install-bin$/;"	t
install	src/deps/basis/makefile	/^install: install-bin$/;"	t
install	src/deps/ndmakefile/makefile	/^install: install-bin$/;"	t
install-bin	makefile	/^install-bin: programs$/;"	t
install-bin	src/deps/basis/makefile	/^install-bin: programs$/;"	t
install-bin	src/deps/ndmakefile/makefile	/^install-bin: programs$/;"	t
install-include	makefile	/^install-include: ${sources_h}$/;"	t
install-include	src/deps/basis/makefile	/^install-include: ${sources_h}$/;"	t
install-include	src/deps/ndmakefile/makefile	/^install-include: ${sources_h}$/;"	t
install-lib	makefile	/^install-lib: libraries$/;"	t
install-lib	src/deps/basis/makefile	/^install-lib: libraries$/;"	t
install-lib	src/deps/ndmakefile/makefile	/^install-lib: libraries$/;"	t
install_dir_bin	makefile	/^install_dir_bin ?= $(install_prefix)\/bin  # use ?= to allow project-specific override$/;"	m
install_dir_bin	src/deps/basis/makefile	/^install_dir_bin ?= $(install_prefix)\/bin  # use ?= to allow project-specific override$/;"	m
install_dir_bin	src/deps/ndmakefile/makefile	/^install_dir_bin ?= $(install_prefix)\/bin  # use ?= to allow project-specific override$/;"	m
install_dir_include	makefile	/^install_dir_include := $(install_prefix)\/include$/;"	m
install_dir_include	src/deps/basis/makefile	/^install_dir_include := $(install_prefix)\/include$/;"	m
install_dir_include	src/deps/ndmakefile/makefile	/^install_dir_include := $(install_prefix)\/include$/;"	m
install_dir_lib	makefile	/^install_dir_lib := $(install_prefix)\/lib$/;"	m
install_dir_lib	src/deps/basis/makefile	/^install_dir_lib := $(install_prefix)\/lib$/;"	m
install_dir_lib	src/deps/ndmakefile/makefile	/^install_dir_lib := $(install_prefix)\/lib$/;"	m
install_prefix	config.mk	/^  install_prefix := $(MCSCRIPT_INSTALL_HOME)$/;"	m
install_prefix	config.mk	/^  install_prefix := install$/;"	m
install_prefix	makefile	/^install_prefix := .$/;"	m
install_prefix	src/deps/basis/config.mk	/^  install_prefix := $(MCSCRIPT_INSTALL_HOME)$/;"	m
install_prefix	src/deps/basis/config.mk	/^  install_prefix := install$/;"	m
install_prefix	src/deps/basis/makefile	/^install_prefix := .$/;"	m
install_prefix	src/deps/ndconfig/config-gnu-nersc.mk	/^install_prefix := $(install_prefix)\/$(CRAY_CPU_TARGET)$/;"	m
install_prefix	src/deps/ndconfig/config-gnu.mk	/^  install_prefix := $(MCSCRIPT_INSTALL_HOME)$/;"	m
install_prefix	src/deps/ndconfig/config-gnu.mk	/^  install_prefix := install$/;"	m
install_prefix	src/deps/ndconfig/config-intel-nersc.mk	/^install_prefix := $(install_prefix)\/$(CRAY_CPU_TARGET)$/;"	m
install_prefix	src/deps/ndconfig/config-intel.mk	/^  install_prefix := $(MCSCRIPT_INSTALL_HOME)$/;"	m
install_prefix	src/deps/ndconfig/config-intel.mk	/^  install_prefix := install$/;"	m
install_prefix	src/deps/ndmakefile/makefile	/^install_prefix := .$/;"	m
is_oscillator_like	src/deps/basis/m_scheme.h	/^      bool is_oscillator_like() const {return is_oscillator_like_;}$/;"	f	class:basis::SingleParticleSubspacePN	typeref:typename:bool
is_oscillator_like	src/deps/basis/m_scheme.h	/^    bool is_oscillator_like() const {return is_oscillator_like_;}$/;"	f	class:basis::SingleParticleSpacePN	typeref:typename:bool
is_oscillator_like	src/deps/basis/nlj_orbital.h	/^      bool is_oscillator_like() const {return is_oscillator_like_;}$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:bool
is_oscillator_like	src/deps/basis/nlj_orbital.h	/^      bool is_oscillator_like() const {return is_oscillator_like_;}$/;"	f	class:basis::OrbitalSubspacePN	typeref:typename:bool
is_oscillator_like	src/deps/basis/nlj_orbital.h	/^    bool is_oscillator_like() const {return is_oscillator_like_;}$/;"	f	class:basis::OrbitalSpaceLJPN	typeref:typename:bool
is_oscillator_like	src/deps/basis/nlj_orbital.h	/^    bool is_oscillator_like() const {return is_oscillator_like_;}$/;"	f	class:basis::OrbitalSpacePN	typeref:typename:bool
is_oscillator_like_	src/deps/basis/m_scheme.h	/^      bool is_oscillator_like_;$/;"	m	class:basis::SingleParticleSubspacePN	typeref:typename:bool
is_oscillator_like_	src/deps/basis/m_scheme.h	/^    bool is_oscillator_like_;$/;"	m	class:basis::SingleParticleSpacePN	typeref:typename:bool
is_oscillator_like_	src/deps/basis/nlj_orbital.h	/^      bool is_oscillator_like_;$/;"	m	class:basis::OrbitalSubspaceLJPN	typeref:typename:bool
is_oscillator_like_	src/deps/basis/nlj_orbital.h	/^      bool is_oscillator_like_;$/;"	m	class:basis::OrbitalSubspacePN	typeref:typename:bool
is_oscillator_like_	src/deps/basis/nlj_orbital.h	/^    bool is_oscillator_like_;$/;"	m	class:basis::OrbitalSpaceLJPN	typeref:typename:bool
is_oscillator_like_	src/deps/basis/nlj_orbital.h	/^    bool is_oscillator_like_;$/;"	m	class:basis::OrbitalSpacePN	typeref:typename:bool
isequal_q_nums	old_c/tdho.c	/^bool isequal_q_nums(q_nums *ket, q_nums *bra)$/;"	f	typeref:typename:bool
isequal_wf_params	old_c/tdho.c	/^bool isequal_wf_params(wf_params *ket, wf_params *bra)$/;"	f	typeref:typename:bool
iterator	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::iterator iterator;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::iterator
iterator	src/deps/basis/mcutils/vector_tuple.h	/^    typedef typename std::vector<T>::iterator iterator;$/;"	t	class:mcutils::VectorTuple	typeref:typename:std::vector<T>::iterator
j	old_c/tdho.h	/^    int j; int mj; int t; int mt; };$/;"	m	struct:q_nums	typeref:typename:int
j	src/deps/basis/m_scheme.h	/^      HalfInt j() const {return std::get<2>(labels());}$/;"	f	class:basis::SingleParticleStatePN	typeref:typename:HalfInt
j	src/deps/basis/nlj_orbital.h	/^      HalfInt j() const {return std::get<2>(labels_);}$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:HalfInt
j	src/deps/basis/nlj_orbital.h	/^    HalfInt j() const {return std::get<2>(labels());}$/;"	f	class:basis::OrbitalStatePN	typeref:typename:HalfInt
j	src/deps/basis/nlj_orbital.h	/^    HalfInt j() const {return subspace().j();}$/;"	f	class:basis::OrbitalStateLJPN	typeref:typename:HalfInt
j	src/deps/basis/nlj_orbital.h	/^    HalfInt j;$/;"	m	struct:basis::OrbitalPNInfo	typeref:typename:HalfInt
j0	src/deps/basis/nlj_orbital.h	/^    int j0()     const {return j0_;}$/;"	f	class:basis::OrbitalSectorsLJPN	typeref:typename:int
j0_	src/deps/basis/nlj_orbital.h	/^    int j0_, g0_, Tz0_;$/;"	m	class:basis::OrbitalSectorsLJPN	typeref:typename:int
j1	src/deps/basis/jjjt_scheme.h	/^    HalfInt j1() const {return std::get<1>(labels());}$/;"	f	class:basis::TwoBodyStateJJJT	typeref:typename:HalfInt
j1	src/deps/basis/jjjt_scheme.h	/^    HalfInt j1() const {return std::get<1>(labels());}$/;"	f	class:basis::TwoBodyStateJJJTN	typeref:typename:HalfInt
j2	src/deps/basis/jjjt_scheme.h	/^    HalfInt j2() const {return std::get<3>(labels());}$/;"	f	class:basis::TwoBodyStateJJJT	typeref:typename:HalfInt
j2	src/deps/basis/jjjt_scheme.h	/^    HalfInt j2() const {return std::get<3>(labels());}$/;"	f	class:basis::TwoBodyStateJJJTN	typeref:typename:HalfInt
jjJCoupledAngularMomentumJ1RME	src/deps/basis/am/rme.h	/^  double jjJCoupledAngularMomentumJ1RME($/;"	f	namespace:am	typeref:typename:double
kASToNAS	src/deps/basis/many_body.h	/^  enum class NormalizationConversion {kNone, kASToNAS, kNASToAS};$/;"	e	enum:basis::NormalizationConversion
kBoth	src/deps/basis/basis.h	/^  enum class SectorDirection {kCanonical,kBoth};$/;"	e	enum:basis::SectorDirection
kCanonical	src/deps/basis/basis.h	/^  enum class SectorDirection {kCanonical,kBoth};$/;"	e	enum:basis::SectorDirection
kFourBody	src/deps/basis/many_body.h	/^  enum class Rank {kOneBody=1, kTwoBody=2, kThreeBody=3, kFourBody=4};$/;"	e	enum:basis::Rank
kHermitian	src/deps/basis/jt_operator.h	/^  enum class SymmetryPhaseMode {kHermitian=0};$/;"	e	enum:basis::SymmetryPhaseMode
kInvSqrt4Pi	src/deps/basis/am/rme.h	/^  constexpr double kInvSqrt4Pi = 0.282094791773878143474039725780386292922025314664;$/;"	v	namespace:am	typeref:typename:double
kN	src/deps/basis/proton_neutron.h	/^  enum class OperatorTypePN {kP=0,kN=1,kTotal=2};$/;"	e	enum:basis::OperatorTypePN
kN	src/deps/basis/proton_neutron.h	/^  enum class OrbitalSpeciesPN {kP=0,kN=1};$/;"	e	enum:basis::OrbitalSpeciesPN
kNASToAS	src/deps/basis/many_body.h	/^  enum class NormalizationConversion {kNone, kASToNAS, kNASToAS};$/;"	e	enum:basis::NormalizationConversion
kNN	src/deps/basis/proton_neutron.h	/^  enum class TwoBodySpeciesPN {kPP=0,kNN=1,kPN=2};$/;"	e	enum:basis::TwoBodySpeciesPN
kNone	src/deps/basis/basis.h	/^  static const int kNone = -1;$/;"	v	namespace:basis	typeref:typename:const int
kNone	src/deps/basis/many_body.h	/^  enum class NormalizationConversion {kNone, kASToNAS, kNASToAS};$/;"	e	enum:basis::NormalizationConversion
kOneBody	src/deps/basis/many_body.h	/^  enum class Rank {kOneBody=1, kTwoBody=2, kThreeBody=3, kFourBody=4};$/;"	e	enum:basis::Rank
kOperatorTypePNCodeChar	src/deps/basis/proton_neutron.cpp	/^  const std::array<const char*,3> kOperatorTypePNCodeChar({"p","n","total"});$/;"	v	namespace:basis	typeref:typename:const std::array<const char *,3>
kOrbitalSpeciesPNCodeChar	src/deps/basis/proton_neutron.cpp	/^  const std::array<const char*,2> kOrbitalSpeciesPNCodeChar({"p","n"});$/;"	v	namespace:basis	typeref:typename:const std::array<const char *,2>
kOrbitalSpeciesPNCodeDecimal	src/deps/basis/proton_neutron.cpp	/^  const std::array<int,2> kOrbitalSpeciesPNCodeDecimal({1,2});$/;"	v	namespace:basis	typeref:typename:const std::array<int,2>
kOrbitalSpeciesPNCodeTz	src/deps/basis/proton_neutron.cpp	/^  const std::array<HalfInt,2> kOrbitalSpeciesPNCodeTz({HalfInt(+1,2),HalfInt(-1,2)});$/;"	v	namespace:basis	typeref:typename:const std::array<HalfInt,2>
kP	src/deps/basis/proton_neutron.h	/^  enum class OperatorTypePN {kP=0,kN=1,kTotal=2};$/;"	e	enum:basis::OperatorTypePN
kP	src/deps/basis/proton_neutron.h	/^  enum class OrbitalSpeciesPN {kP=0,kN=1};$/;"	e	enum:basis::OrbitalSpeciesPN
kPN	src/deps/basis/proton_neutron.h	/^  enum class TwoBodySpeciesPN {kPP=0,kNN=1,kPN=2};$/;"	e	enum:basis::TwoBodySpeciesPN
kPP	src/deps/basis/proton_neutron.h	/^  enum class TwoBodySpeciesPN {kPP=0,kNN=1,kPN=2};$/;"	e	enum:basis::TwoBodySpeciesPN
kPi	src/deps/basis/am/rme.h	/^  constexpr double kPi = 3.141592653589793238462643383279502884197169399375;$/;"	v	namespace:am	typeref:typename:double
kRadial	src/deps/basis/nlj_operator.h	/^    kRadial = 'R',$/;"	e	enum:basis::OneBodyOperatorType
kSpherical	src/deps/basis/nlj_operator.h	/^    kSpherical = 'S'$/;"	e	enum:basis::OneBodyOperatorType
kSqrt4Pi	src/deps/basis/am/rme.h	/^  constexpr double kSqrt4Pi = 3.544907701811032054596334966682290365595098912244;$/;"	v	namespace:am	typeref:typename:double
kThreeBody	src/deps/basis/many_body.h	/^  enum class Rank {kOneBody=1, kTwoBody=2, kThreeBody=3, kFourBody=4};$/;"	e	enum:basis::Rank
kTotal	src/deps/basis/proton_neutron.h	/^  enum class OperatorTypePN {kP=0,kN=1,kTotal=2};$/;"	e	enum:basis::OperatorTypePN
kTwoBody	src/deps/basis/many_body.h	/^  enum class Rank {kOneBody=1, kTwoBody=2, kThreeBody=3, kFourBody=4};$/;"	e	enum:basis::Rank
kTwoBodySpeciesPNCodeChar	src/deps/basis/proton_neutron.cpp	/^  const std::array<const char*,3> kTwoBodySpeciesPNCodeChar({"pp","nn","pn"});$/;"	v	namespace:basis	typeref:typename:const std::array<const char *,3>
kTwoBodySpeciesPNCodeDecimal	src/deps/basis/proton_neutron.cpp	/^  const std::array<int,3> kTwoBodySpeciesPNCodeDecimal({11,22,12});$/;"	v	namespace:basis	typeref:typename:const std::array<int,3>
kTwoBodySpeciesPNCodeTz	src/deps/basis/proton_neutron.cpp	/^  const std::array<int,3> kTwoBodySpeciesPNCodeTz({+1,-1,0});$/;"	v	namespace:basis	typeref:typename:const std::array<int,3>
kVersion15099	src/deps/basis/nlj_orbital.cpp	/^  enum class MFDnOrbitalFormat : int {kVersion15099=15099};$/;"	e	enum:basis::MFDnOrbitalFormat	file:
kWeightTolerance	src/deps/basis/nlj_orbital.h	/^    static constexpr double kWeightTolerance = 1e-8;$/;"	m	struct:basis::OrbitalPNInfo	typeref:typename:double
ket	src/chiral.h	/^        basis::RelativeStateLSJT ket;$/;"	m	class:chiral::Operator	typeref:typename:basis::RelativeStateLSJT
ket_orbital_space	src/deps/basis/nlj_operator.h	/^    OrbitalSpaceLJPN ket_orbital_space;$/;"	m	struct:basis::OneBodyOperatorLJPN	typeref:typename:OrbitalSpaceLJPN
ket_subspace	src/deps/basis/basis.h	/^      const SubspaceType& ket_subspace() const {return *ket_subspace_ptr_;}$/;"	f	class:basis::BaseSector	typeref:typename:const SubspaceType &
ket_subspace	src/deps/basis/hypersector.h	/^      const SubspaceType& ket_subspace() const {return *ket_subspace_ptr_;}$/;"	f	class:basis::BaseHypersector	typeref:typename:const SubspaceType &
ket_subspace_index	src/deps/basis/basis.h	/^      int ket_subspace_index() const {return ket_subspace_index_;}$/;"	f	class:basis::BaseSector	typeref:typename:int
ket_subspace_index	src/deps/basis/hypersector.h	/^      int ket_subspace_index() const {return ket_subspace_index_;}$/;"	f	class:basis::BaseHypersector	typeref:typename:int
ket_subspace_index_	src/deps/basis/basis.h	/^      int bra_subspace_index_, ket_subspace_index_;$/;"	m	class:basis::BaseSector	typeref:typename:int
ket_subspace_index_	src/deps/basis/hypersector.h	/^      int bra_subspace_index_, ket_subspace_index_, operator_subspace_index_;$/;"	m	class:basis::BaseHypersector	typeref:typename:int
ket_subspace_ptr_	src/deps/basis/basis.h	/^      const SubspaceType* ket_subspace_ptr_;$/;"	m	class:basis::BaseSector	typeref:typename:const SubspaceType *
ket_subspace_ptr_	src/deps/basis/hypersector.h	/^      const SubspaceType* ket_subspace_ptr_;$/;"	m	class:basis::BaseHypersector	typeref:typename:const SubspaceType *
key_compare	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::key_compare key_compare;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::key_compare
key_type	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::key_type key_type;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::key_type
l	old_c/operator_gt.c	/^struct data { int n; int l; }; $/;"	m	struct:data	typeref:typename:int	file:
l	old_c/tdho.h	/^struct q_nums { int n; int l; int N; int L; int s;$/;"	m	struct:q_nums	typeref:typename:int
l	old_c/tdho.h	/^struct wf_params { int n; int l; int ml; double b; };$/;"	m	struct:wf_params	typeref:typename:int
l	src/deps/basis/m_scheme.h	/^      int l() const {return std::get<1>(labels());}$/;"	f	class:basis::SingleParticleStatePN	typeref:typename:int
l	src/deps/basis/nlj_orbital.h	/^      int l() const {return std::get<1>(labels_);}$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:int
l	src/deps/basis/nlj_orbital.h	/^    int l() const {return std::get<1>(labels());}$/;"	f	class:basis::OrbitalStatePN	typeref:typename:int
l	src/deps/basis/nlj_orbital.h	/^    int l() const {return subspace().l();}$/;"	f	class:basis::OrbitalStateLJPN	typeref:typename:int
l	src/deps/basis/nlj_orbital.h	/^    int l;$/;"	m	struct:basis::OrbitalPNInfo	typeref:typename:int
l1	src/deps/basis/jjjt_scheme.h	/^    int l1() const$/;"	f	class:basis::TwoBodyStateJJJT	typeref:typename:int
l1	src/deps/basis/jjjt_scheme.h	/^    int l1() const$/;"	f	class:basis::TwoBodyStateJJJTN	typeref:typename:int
l1	src/deps/basis/lsjt_scheme.h	/^    int l1() const {return std::get<1>(labels());}$/;"	f	class:basis::TwoBodyStateLSJT	typeref:typename:int
l1	src/deps/basis/lsjt_scheme.h	/^    int l1() const {return std::get<1>(labels());}$/;"	f	class:basis::TwoBodyStateLSJTN	typeref:typename:int
l2	src/deps/basis/jjjt_scheme.h	/^    int l2() const$/;"	f	class:basis::TwoBodyStateJJJT	typeref:typename:int
l2	src/deps/basis/jjjt_scheme.h	/^    int l2() const$/;"	f	class:basis::TwoBodyStateJJJTN	typeref:typename:int
l2	src/deps/basis/lsjt_scheme.h	/^    int l2() const {return std::get<3>(labels());}$/;"	f	class:basis::TwoBodyStateLSJT	typeref:typename:int
l2	src/deps/basis/lsjt_scheme.h	/^    int l2() const {return std::get<3>(labels());}$/;"	f	class:basis::TwoBodyStateLSJTN	typeref:typename:int
labels	src/deps/basis/basis.h	/^      const StateLabelsType& labels() const$/;"	f	class:basis::BaseState	typeref:typename:const StateLabelsType &
labels	src/deps/basis/basis.h	/^    const SubspaceLabelsType& labels() const$/;"	f	class:basis::BaseSubspace	typeref:typename:const SubspaceLabelsType &
labels_	src/deps/basis/basis.h	/^    SubspaceLabelsType labels_;$/;"	m	class:basis::BaseSubspace	typeref:typename:SubspaceLabelsType
last-word	makefile	/^define last-word$/;"	m
last-word	src/deps/basis/makefile	/^define last-word$/;"	m
last-word	src/deps/ndmakefile/makefile	/^define last-word$/;"	m
lc	src/deps/basis/lsjt_scheme.h	/^    int lc() const {return std::get<3>(labels());}$/;"	f	class:basis::RelativeCMStateLSJT	typeref:typename:int
lc	src/deps/basis/lsjt_scheme.h	/^    int lc() const {return std::get<3>(labels());}$/;"	f	class:basis::RelativeCMStateLSJTN	typeref:typename:int
libraries	makefile	/^libraries :=$/;"	m
libraries	makefile	/^libraries: $(archives) $(shared_objects)$/;"	t
libraries	src/deps/basis/makefile	/^libraries :=$/;"	m
libraries	src/deps/basis/makefile	/^libraries: $(archives) $(shared_objects)$/;"	t
libraries	src/deps/ndmakefile/makefile	/^libraries :=$/;"	m
libraries	src/deps/ndmakefile/makefile	/^libraries: $(archives) $(shared_objects)$/;"	t
library	makefile	/^define library$/;"	m
library	src/deps/basis/makefile	/^define library$/;"	m
library	src/deps/ndmakefile/makefile	/^define library$/;"	m
library-name	makefile	/^define library-name$/;"	m
library-name	src/deps/basis/makefile	/^define library-name$/;"	m
library-name	src/deps/ndmakefile/makefile	/^define library-name$/;"	m
library_journal	makefile	/^library_journal :=$/;"	m
library_journal	src/deps/basis/makefile	/^library_journal :=$/;"	m
library_journal	src/deps/ndmakefile/makefile	/^library_journal :=$/;"	m
lo	src/chiral.h	/^        enum class Order { lo, nlo, n2lo, n3lo, n4lo, full };$/;"	e	enum:chiral::Operator::Order
lookup_	src/deps/basis/basis.h	/^      std::map<typename SectorType::KeyType,int> lookup_;$/;"	m	class:basis::BaseSectors	typeref:typename:std::map<typename SectorType::KeyType,int>
lookup_	src/deps/basis/basis.h	/^      std::map<typename SubspaceType::SubspaceLabelsType,int> lookup_;$/;"	m	class:basis::BaseSpace	typeref:typename:std::map<typename SubspaceType::SubspaceLabelsType,int>
lookup_	src/deps/basis/basis.h	/^      std::unordered_map<typename SectorType::KeyType,int,boost::hash<typename SectorType::KeyTy/;"	m	class:basis::BaseSectors	typeref:typename:std::unordered_map<typename SectorType::KeyType,int,boost::hash<typename SectorType::KeyType>>
lookup_	src/deps/basis/basis.h	/^      std::unordered_map<typename SubspaceType::SubspaceLabelsType,int,boost::hash<typename Subs/;"	m	class:basis::BaseSpace	typeref:typename:std::unordered_map<typename SubspaceType::SubspaceLabelsType,int,boost::hash<typename SubspaceType::SubspaceLabelsType>>
lookup_	src/deps/basis/basis.h	/^    std::map<StateLabelsType,int> lookup_;$/;"	m	class:basis::BaseSubspace	typeref:typename:std::map<StateLabelsType,int>
lookup_	src/deps/basis/basis.h	/^    std::unordered_map<StateLabelsType,int,boost::hash<StateLabelsType>> lookup_;$/;"	m	class:basis::BaseSubspace	typeref:typename:std::unordered_map<StateLabelsType,int,boost::hash<StateLabelsType>>
lookup_	src/deps/basis/hypersector.h	/^      std::map<typename HypersectorType::KeyType,int> lookup_;$/;"	m	class:basis::BaseHypersectors	typeref:typename:std::map<typename HypersectorType::KeyType,int>
lookup_	src/deps/basis/hypersector.h	/^      std::unordered_map<typename HypersectorType::KeyType,int,boost::hash<typename HypersectorT/;"	m	class:basis::BaseHypersectors	typeref:typename:std::unordered_map<typename HypersectorType::KeyType,int,boost::hash<typename HypersectorType::KeyType>>
lr	src/deps/basis/lsjt_scheme.h	/^    int lr() const {return std::get<1>(labels());}$/;"	f	class:basis::RelativeCMStateLSJT	typeref:typename:int
lr	src/deps/basis/lsjt_scheme.h	/^    int lr() const {return std::get<1>(labels());}$/;"	f	class:basis::RelativeCMStateLSJTN	typeref:typename:int
m	src/deps/basis/m_scheme.h	/^      HalfInt m() const {return std::get<3>(labels());}$/;"	f	class:basis::SingleParticleStatePN	typeref:typename:HalfInt
main	main.py	/^def main():$/;"	f
main	old_c/main.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	src/chiral.cpp	/^int main()$/;"	f	typeref:typename:int
main	src/deps/basis/am/am_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/am/halfint_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/degenerate_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/hypersector_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/jjjpn_operator_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/jjjpn_scheme_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/jjjt_scheme_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/lsjt_operator_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/lsjt_scheme_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/m_scheme_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/mcutils/arithmetic_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/mcutils/eigen_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/mcutils/gsl_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/mcutils/io_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/mcutils/memoizer_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/mcutils/profiling_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/mcutils/vector_tuple_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/deps/basis/nlj_orbital_test.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
makefiles	makefile	/^makefiles := $(MAKEFILE_LIST)$/;"	m
makefiles	src/deps/basis/makefile	/^makefiles := $(MAKEFILE_LIST)$/;"	m
makefiles	src/deps/ndmakefile/makefile	/^makefiles := $(MAKEFILE_LIST)$/;"	m
map_type	src/deps/basis/mcutils/memoizer.h	/^    typedef typename std::map<Key,T,Compare,Alloc> map_type;$/;"	t	class:mcutils::Memoizer	typeref:typename:std::map<Key,T,Compare,Alloc>
mapped_type	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::mapped_type mapped_type;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::mapped_type
matrices	src/deps/basis/nlj_operator.h	/^    OperatorBlocks<double> matrices;$/;"	m	struct:basis::OneBodyOperatorLJPN	typeref:typename:OperatorBlocks<double>
mcutils	src/deps/basis/mcutils/arithmetic.h	/^namespace mcutils$/;"	n
mcutils	src/deps/basis/mcutils/eigen.h	/^namespace mcutils$/;"	n
mcutils	src/deps/basis/mcutils/gsl.h	/^namespace mcutils {$/;"	n
mcutils	src/deps/basis/mcutils/io.h	/^namespace mcutils$/;"	n
mcutils	src/deps/basis/mcutils/memoizer.h	/^namespace mcutils$/;"	n
mcutils	src/deps/basis/mcutils/parsing.cpp	/^namespace mcutils$/;"	n	file:
mcutils	src/deps/basis/mcutils/parsing.h	/^namespace mcutils$/;"	n
mcutils	src/deps/basis/mcutils/profiling.h	/^namespace mcutils$/;"	n
mcutils	src/deps/basis/mcutils/vector_tuple.h	/^namespace mcutils$/;"	n
mj	old_c/tdho.h	/^    int j; int mj; int t; int mt; };$/;"	m	struct:q_nums	typeref:typename:int
ml	old_c/tdho.h	/^struct wf_params { int n; int l; int ml; double b; };$/;"	m	struct:wf_params	typeref:typename:int
module_files	makefile	/^module_files := $(addsuffix \/module.mk,$(modules))$/;"	m
module_files	src/deps/basis/makefile	/^module_files := $(addsuffix \/module.mk,$(modules))$/;"	m
module_files	src/deps/ndmakefile/makefile	/^module_files := $(addsuffix \/module.mk,$(modules))$/;"	m
mt	old_c/tdho.h	/^    int j; int mj; int t; int mt; };$/;"	m	struct:q_nums	typeref:typename:int
multiplicity_index	src/deps/basis/basis.h	/^      int multiplicity_index() const {return multiplicity_index_;}$/;"	f	class:basis::BaseSector	typeref:typename:int
multiplicity_index	src/deps/basis/hypersector.h	/^      int multiplicity_index() const {return multiplicity_index_;}$/;"	f	class:basis::BaseHypersector	typeref:typename:int
multiplicity_index_	src/deps/basis/basis.h	/^      int multiplicity_index_;$/;"	m	class:basis::BaseSector	typeref:typename:int
multiplicity_index_	src/deps/basis/hypersector.h	/^      int multiplicity_index_;$/;"	m	class:basis::BaseHypersector	typeref:typename:int
n	old_c/operator_gt.c	/^struct data { int n; int l; }; $/;"	m	struct:data	typeref:typename:int	file:
n	old_c/tdho.h	/^struct q_nums { int n; int l; int N; int L; int s;$/;"	m	struct:q_nums	typeref:typename:int
n	old_c/tdho.h	/^struct wf_params { int n; int l; int ml; double b; };$/;"	m	struct:wf_params	typeref:typename:int
n	src/deps/basis/lsjt_scheme.h	/^    int n() const {return (N()-L())\/2;}$/;"	f	class:basis::RelativeStateLSJT	typeref:typename:int
n	src/deps/basis/m_scheme.h	/^      int n() const {return std::get<0>(labels());}$/;"	f	class:basis::SingleParticleStatePN	typeref:typename:int
n	src/deps/basis/nlj_orbital.h	/^    int n() const {return std::get<0>(labels());}$/;"	f	class:basis::OrbitalStateLJPN	typeref:typename:int
n	src/deps/basis/nlj_orbital.h	/^    int n() const {return std::get<0>(labels());}$/;"	f	class:basis::OrbitalStatePN	typeref:typename:int
n	src/deps/basis/nlj_orbital.h	/^    int n;$/;"	m	struct:basis::OrbitalPNInfo	typeref:typename:int
n2lo	src/chiral.h	/^        enum class Order { lo, nlo, n2lo, n3lo, n4lo, full };$/;"	e	enum:chiral::Operator::Order
n3lo	src/chiral.h	/^        enum class Order { lo, nlo, n2lo, n3lo, n4lo, full };$/;"	e	enum:chiral::Operator::Order
n4lo	src/chiral.h	/^        enum class Order { lo, nlo, n2lo, n3lo, n4lo, full };$/;"	e	enum:chiral::Operator::Order
name	src/chiral.h	/^        Operator::Name name;$/;"	m	class:chiral::Operator	typeref:typename:Operator::Name
name	src/deps/basis/nlj_operator.h	/^    std::string name;$/;"	m	struct:basis::OneBodyOperatorLJPN	typeref:typename:std::string
nlo	src/chiral.h	/^        enum class Order { lo, nlo, n2lo, n3lo, n4lo, full };$/;"	e	enum:chiral::Operator::Order
norm_nl	old_c/tdho.c	/^double norm_nl(const wf_params *params)$/;"	f	typeref:typename:double
o_ext	makefile	/^o_ext := .o$/;"	m
o_ext	src/deps/basis/makefile	/^o_ext := .o$/;"	m
o_ext	src/deps/ndmakefile/makefile	/^o_ext := .o$/;"	m
objects	makefile	/^objects := $(addsuffix $(o_ext),$(units_cpp-h) $(units_f) $(programs_cpp) $(programs_f))$/;"	m
objects	src/deps/basis/makefile	/^objects := $(addsuffix $(o_ext),$(units_cpp-h) $(units_f) $(programs_cpp) $(programs_f))$/;"	m
objects	src/deps/ndmakefile/makefile	/^objects := $(addsuffix $(o_ext),$(units_cpp-h) $(units_f) $(programs_cpp) $(programs_f))$/;"	m
objects_test	makefile	/^objects_test := $(addsuffix $(o_ext),$(programs_cpp_test))$/;"	m
objects_test	src/deps/basis/makefile	/^objects_test := $(addsuffix $(o_ext),$(programs_cpp_test))$/;"	m
objects_test	src/deps/ndmakefile/makefile	/^objects_test := $(addsuffix $(o_ext),$(programs_cpp_test))$/;"	m
offset	src/deps/basis/degenerate.h	/^      int offset() const$/;"	f	class:basis::BaseDegenerateState	typeref:typename:int
one_body	src/deps/basis/jjjpn_scheme.h	/^    std::array<double,2> one_body;$/;"	m	struct:basis::WeightMax	typeref:typename:std::array<double,2>
operator !=	src/deps/basis/am/halfint.h	/^inline bool operator != (const HalfInt& h1, const HalfInt& h2)$/;"	f	typeref:typename:bool
operator !=	src/deps/basis/mcutils/vector_tuple.h	/^    bool operator != (const VectorTuple<T,N,B>& v1, const VectorTuple<T,N,B>& v2)$/;"	f	namespace:mcutils	typeref:typename:bool
operator *	src/deps/basis/am/halfint.h	/^inline HalfInt operator * (const HalfInt& a, const int& b)$/;"	f	typeref:typename:HalfInt
operator *	src/deps/basis/am/halfint.h	/^inline HalfInt operator * (const int& a, const HalfInt& b)$/;"	f	typeref:typename:HalfInt
operator *	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple<T,N,B> operator * (const VectorTuple<T,N,B>& a, const VectorTuple<T,N,B>& b) $/;"	f	namespace:mcutils	typeref:typename:VectorTuple<T,N,B>
operator *=	src/deps/basis/am/halfint.h	/^inline HalfInt& HalfInt::operator *=(const int& b)$/;"	f	class:HalfInt	typeref:typename:HalfInt &
operator *=	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple<T,N,B>& VectorTuple<T,N,B>::operator *= (const VectorTuple& b)$/;"	f	class:mcutils::VectorTuple	typeref:typename:VectorTuple<T,N,B> &
operator +	src/deps/basis/am/halfint.h	/^inline HalfInt HalfInt::operator + () const$/;"	f	class:HalfInt	typeref:typename:HalfInt
operator +	src/deps/basis/am/halfint.h	/^inline HalfInt operator + (const HalfInt& a, const HalfInt& b)$/;"	f	typeref:typename:HalfInt
operator +	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple<T,N,B> VectorTuple<T,N,B>::operator + () const $/;"	f	class:mcutils::VectorTuple	typeref:typename:VectorTuple<T,N,B>
operator +	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple<T,N,B> operator + (const VectorTuple<T,N,B>& a, const VectorTuple<T,N,B>& b) $/;"	f	namespace:mcutils	typeref:typename:VectorTuple<T,N,B>
operator ++	src/deps/basis/am/halfint.h	/^inline HalfInt HalfInt::operator ++ (int)$/;"	f	class:HalfInt	typeref:typename:HalfInt
operator ++	src/deps/basis/am/halfint.h	/^inline HalfInt& HalfInt::operator ++ ()$/;"	f	class:HalfInt	typeref:typename:HalfInt &
operator +=	src/deps/basis/am/halfint.h	/^inline HalfInt& HalfInt::operator +=(const HalfInt& b)$/;"	f	class:HalfInt	typeref:typename:HalfInt &
operator +=	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple<T,N,B>& VectorTuple<T,N,B>::operator += (const VectorTuple& b)$/;"	f	class:mcutils::VectorTuple	typeref:typename:VectorTuple<T,N,B> &
operator -	src/deps/basis/am/halfint.h	/^inline HalfInt HalfInt::operator - () const$/;"	f	class:HalfInt	typeref:typename:HalfInt
operator -	src/deps/basis/am/halfint.h	/^inline HalfInt operator - (const HalfInt& a, const HalfInt& b)$/;"	f	typeref:typename:HalfInt
operator -	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple<T,N,B> VectorTuple<T,N,B>::operator - () const $/;"	f	class:mcutils::VectorTuple	typeref:typename:VectorTuple<T,N,B>
operator -	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple<T,N,B> operator - (const VectorTuple<T,N,B>& a, const VectorTuple<T,N,B>& b) $/;"	f	namespace:mcutils	typeref:typename:VectorTuple<T,N,B>
operator --	src/deps/basis/am/halfint.h	/^inline HalfInt HalfInt::operator -- (int)$/;"	f	class:HalfInt	typeref:typename:HalfInt
operator --	src/deps/basis/am/halfint.h	/^inline HalfInt& HalfInt::operator -- ()$/;"	f	class:HalfInt	typeref:typename:HalfInt &
operator -=	src/deps/basis/am/halfint.h	/^inline HalfInt& HalfInt::operator -=(const HalfInt& b)$/;"	f	class:HalfInt	typeref:typename:HalfInt &
operator -=	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple<T,N,B>& VectorTuple<T,N,B>::operator -= (const VectorTuple& b)$/;"	f	class:mcutils::VectorTuple	typeref:typename:VectorTuple<T,N,B> &
operator /	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple<T,N,B> operator \/ (const VectorTuple<T,N,B>& a, const VectorTuple<T,N,B>& b) $/;"	f	namespace:mcutils	typeref:typename:VectorTuple<T,N,B>
operator /=	src/deps/basis/mcutils/vector_tuple.h	/^    VectorTuple<T,N,B>& VectorTuple<T,N,B>::operator \/= (const VectorTuple& b)$/;"	f	class:mcutils::VectorTuple	typeref:typename:VectorTuple<T,N,B> &
operator <	src/deps/basis/am/halfint.h	/^inline bool operator < (const HalfInt& h1, const HalfInt& h2)$/;"	f	typeref:typename:bool
operator <	src/deps/basis/mcutils/vector_tuple.h	/^    bool operator < (const VectorTuple<T,N,B>& v1, const VectorTuple<T,N,B>& v2)$/;"	f	namespace:mcutils	typeref:typename:bool
operator <<	src/deps/basis/am/halfint.cpp	/^std::ostream& operator<< (std::ostream& os, const HalfInt& h)$/;"	f	typeref:typename:std::ostream &
operator <<	src/deps/basis/am/halfint.cpp	/^std::ostream& operator<< (std::ostream& os, const HalfInt::pair& r)$/;"	f	typeref:typename:std::ostream &
operator <<	src/deps/basis/mcutils/memoizer.h	/^    std::ostream& operator<< (std::ostream& os, const Memoizer<Key,T,Compare,Alloc>& m)$/;"	f	namespace:mcutils	typeref:typename:std::ostream &
operator <<	src/deps/basis/mcutils/vector_tuple.h	/^    std::ostream& operator<< (std::ostream& os, const VectorTuple<T,N,B>& v)$/;"	f	namespace:mcutils	typeref:typename:std::ostream &
operator <<	src/deps/basis/nlj_orbital.cpp	/^  std::ostream& operator<<(std::ostream &out, const OrbitalPNInfo& orbital_info)$/;"	f	namespace:basis	typeref:typename:std::ostream &
operator <=	src/deps/basis/am/halfint.h	/^inline bool operator <= (const HalfInt& h1, const HalfInt& h2)$/;"	f	typeref:typename:bool
operator <=	src/deps/basis/mcutils/vector_tuple.h	/^    bool operator <= (const VectorTuple<T,N,B>& v1, const VectorTuple<T,N,B>& v2)$/;"	f	namespace:mcutils	typeref:typename:bool
operator ==	src/deps/basis/am/halfint.h	/^inline bool operator == (const HalfInt& h1, const HalfInt& h2)$/;"	f	typeref:typename:bool
operator ==	src/deps/basis/m_scheme.h	/^      friend bool operator == (const basis::SingleParticleStatePN& a1, const basis::SinglePartic/;"	f	class:basis::SingleParticleStatePN	typeref:typename:bool
operator ==	src/deps/basis/mcutils/vector_tuple.h	/^    bool operator == (const VectorTuple<T,N,B>& v1, const VectorTuple<T,N,B>& v2)$/;"	f	namespace:mcutils	typeref:typename:bool
operator ==	src/deps/basis/nlj_orbital.h	/^    friend bool operator == (const basis::OrbitalStatePN& a1, const basis::OrbitalStatePN& a2)$/;"	f	class:basis::OrbitalStatePN	typeref:typename:bool
operator ==	src/deps/basis/nlj_orbital.h	/^    inline bool operator==(const OrbitalPNInfo& rhs) const$/;"	f	struct:basis::OrbitalPNInfo	typeref:typename:bool
operator >	src/deps/basis/am/halfint.h	/^inline bool operator > (const HalfInt& h1, const HalfInt& h2)$/;"	f	typeref:typename:bool
operator >	src/deps/basis/mcutils/vector_tuple.h	/^    bool operator > (const VectorTuple<T,N,B>& v1, const VectorTuple<T,N,B>& v2)$/;"	f	namespace:mcutils	typeref:typename:bool
operator >=	src/deps/basis/am/halfint.h	/^inline bool operator >= (const HalfInt& h1, const HalfInt& h2)$/;"	f	typeref:typename:bool
operator >=	src/deps/basis/mcutils/vector_tuple.h	/^    bool operator >= (const VectorTuple<T,N,B>& v1, const VectorTuple<T,N,B>& v2)$/;"	f	namespace:mcutils	typeref:typename:bool
operator >>	src/deps/basis/nlj_orbital.cpp	/^  std::istream& operator>>(std::istream &in, OrbitalPNInfo& orbital_info) {$/;"	f	namespace:basis	typeref:typename:std::istream &
operator []	src/deps/basis/mcutils/vector_tuple.h	/^    T& operator[](size_type i) {return values_[i-B];};$/;"	f	class:mcutils::VectorTuple	typeref:typename:T &
operator []	src/deps/basis/mcutils/vector_tuple.h	/^    const T& operator[](size_type i) const {return values_[i-B];};$/;"	f	class:mcutils::VectorTuple	typeref:typename:const T &
operator_gt	old_c/operator_gt.c	/^double operator_gt(char *order, q_nums *ket, q_nums *bra, double *b)$/;"	f	typeref:typename:double
operator_r_sq	old_c/operator_r_sq.c	/^double operator_r_sq(char *order, q_nums *ket, q_nums *bra, double *b)$/;"	f	typeref:typename:double
operator_rc_sq	src/operator_rc_sq.cpp	/^double chiral::operator_rc_sq(chiral::Operator::Order order,$/;"	f	class:chiral	typeref:typename:double
operator_subspace	src/deps/basis/hypersector.h	/^      const OperatorSubspaceType& operator_subspace() const {return *operator_subspace_ptr_;}$/;"	f	class:basis::BaseHypersector	typeref:typename:const OperatorSubspaceType &
operator_subspace_index	src/deps/basis/hypersector.h	/^      int operator_subspace_index() const {return operator_subspace_index_;}$/;"	f	class:basis::BaseHypersector	typeref:typename:int
operator_subspace_index_	src/deps/basis/hypersector.h	/^      int bra_subspace_index_, ket_subspace_index_, operator_subspace_index_;$/;"	m	class:basis::BaseHypersector	typeref:typename:int
operator_subspace_ptr_	src/deps/basis/hypersector.h	/^      const OperatorSubspaceType* operator_subspace_ptr_;$/;"	m	class:basis::BaseHypersector	typeref:typename:const OperatorSubspaceType *
operator_type	src/deps/basis/nlj_operator.h	/^    OneBodyOperatorType operator_type;$/;"	m	struct:basis::OneBodyOperatorLJPN	typeref:typename:OneBodyOperatorType
orbital_species	src/deps/basis/m_scheme.h	/^      OrbitalSpeciesPN orbital_species() const {return std::get<0>(labels_);}$/;"	f	class:basis::SingleParticleSubspacePN	typeref:typename:OrbitalSpeciesPN
orbital_species	src/deps/basis/m_scheme.h	/^      OrbitalSpeciesPN orbital_species() const {return subspace().orbital_species();}$/;"	f	class:basis::SingleParticleStatePN	typeref:typename:OrbitalSpeciesPN
orbital_species	src/deps/basis/nlj_orbital.h	/^      OrbitalSpeciesPN orbital_species() const {return std::get<0>(labels_);}$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:OrbitalSpeciesPN
orbital_species	src/deps/basis/nlj_orbital.h	/^      OrbitalSpeciesPN orbital_species() const {return std::get<0>(labels_);}$/;"	f	class:basis::OrbitalSubspacePN	typeref:typename:OrbitalSpeciesPN
orbital_species	src/deps/basis/nlj_orbital.h	/^    OrbitalSpeciesPN orbital_species() const {return subspace().orbital_species();}$/;"	f	class:basis::OrbitalStateLJPN	typeref:typename:OrbitalSpeciesPN
orbital_species	src/deps/basis/nlj_orbital.h	/^    OrbitalSpeciesPN orbital_species() const {return subspace().orbital_species();}$/;"	f	class:basis::OrbitalStatePN	typeref:typename:OrbitalSpeciesPN
orbital_species	src/deps/basis/nlj_orbital.h	/^    OrbitalSpeciesPN orbital_species;$/;"	m	struct:basis::OrbitalPNInfo	typeref:typename:OrbitalSpeciesPN
orbital_subspace1	src/deps/basis/jjjpn_scheme.h	/^      const OrbitalSubspacePN& orbital_subspace1() const {return *orbital_subspace1_ptr_;}$/;"	f	class:basis::TwoBodySubspaceJJJPN	typeref:typename:const OrbitalSubspacePN &
orbital_subspace1	src/deps/basis/jjjpn_scheme.h	/^    const OrbitalSubspacePN& orbital_subspace1() const {return subspace().orbital_subspace1();}$/;"	f	class:basis::TwoBodyStateJJJPN	typeref:typename:const OrbitalSubspacePN &
orbital_subspace1_ptr_	src/deps/basis/jjjpn_scheme.h	/^      const OrbitalSubspacePN* orbital_subspace1_ptr_;$/;"	m	class:basis::TwoBodySubspaceJJJPN	typeref:typename:const OrbitalSubspacePN *
orbital_subspace2	src/deps/basis/jjjpn_scheme.h	/^      const OrbitalSubspacePN& orbital_subspace2() const {return *orbital_subspace2_ptr_;}$/;"	f	class:basis::TwoBodySubspaceJJJPN	typeref:typename:const OrbitalSubspacePN &
orbital_subspace2	src/deps/basis/jjjpn_scheme.h	/^    const OrbitalSubspacePN& orbital_subspace2() const {return subspace().orbital_subspace2();}$/;"	f	class:basis::TwoBodyStateJJJPN	typeref:typename:const OrbitalSubspacePN &
orbital_subspace2_ptr_	src/deps/basis/jjjpn_scheme.h	/^      const OrbitalSubspacePN* orbital_subspace2_ptr_;$/;"	m	class:basis::TwoBodySubspaceJJJPN	typeref:typename:const OrbitalSubspacePN *
order	src/chiral.h	/^        Operator::Order order;$/;"	m	class:chiral::Operator	typeref:typename:Operator::Order
osc_b	src/chiral.h	/^        double osc_b; \/\/ Oscillator constant b$/;"	m	class:chiral::Operator	typeref:typename:double
pair	src/deps/basis/am/halfint.h	/^  typedef std::pair<HalfInt,HalfInt> pair;  \/\/ used by am$/;"	t	class:HalfInt	typeref:typename:std::pair<HalfInt,HalfInt>
plm	old_c/operator_r_sq.c	/^double plm(int l, int m)$/;"	f	typeref:typename:double
pointer	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::pointer pointer;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::pointer
print_rme	old_c/main.c	/^void print_rme(char *operator, char *order, q_nums *ket,$/;"	f	typeref:typename:void
programs	makefile	/^programs := $(programs_cpp) $(programs_f)$/;"	m
programs	makefile	/^programs: $(programs)$/;"	t
programs	src/deps/basis/makefile	/^programs := $(programs_cpp) $(programs_f)$/;"	m
programs	src/deps/basis/makefile	/^programs: $(programs)$/;"	t
programs	src/deps/ndmakefile/makefile	/^programs := $(programs_cpp) $(programs_f)$/;"	m
programs	src/deps/ndmakefile/makefile	/^programs: $(programs)$/;"	t
programs-test	makefile	/^programs-test: $(programs_test)$/;"	t
programs-test	src/deps/basis/makefile	/^programs-test: $(programs_test)$/;"	t
programs-test	src/deps/ndmakefile/makefile	/^programs-test: $(programs_test)$/;"	t
programs_cpp	makefile	/^programs_cpp :=$/;"	m
programs_cpp	src/deps/basis/makefile	/^programs_cpp :=$/;"	m
programs_cpp	src/deps/ndmakefile/makefile	/^programs_cpp :=$/;"	m
programs_cpp_test	makefile	/^programs_cpp_test :=$/;"	m
programs_cpp_test	src/deps/basis/makefile	/^programs_cpp_test :=$/;"	m
programs_cpp_test	src/deps/ndmakefile/makefile	/^programs_cpp_test :=$/;"	m
programs_f	makefile	/^programs_f :=$/;"	m
programs_f	src/deps/basis/makefile	/^programs_f :=$/;"	m
programs_f	src/deps/ndmakefile/makefile	/^programs_f :=$/;"	m
programs_test	makefile	/^programs_test := $(programs_cpp_test)$/;"	m
programs_test	src/deps/basis/makefile	/^programs_test := $(programs_cpp_test)$/;"	m
programs_test	src/deps/ndmakefile/makefile	/^programs_test := $(programs_cpp_test)$/;"	m
project_base	makefile	/^project_base := $(dir $(PWD))$/;"	m
project_base	src/deps/basis/makefile	/^project_base := $(dir $(PWD))$/;"	m
project_base	src/deps/ndmakefile/makefile	/^project_base := $(dir $(PWD))$/;"	m
project_name	src/deps/basis/am/project.mk	/^project_name := am$/;"	m
project_name	src/deps/basis/mcutils/project.mk	/^project_name := mcutils$/;"	m
project_name	src/deps/basis/project.mk	/^project_name := basis$/;"	m
pwd_tail	makefile	/^pwd_tail := $(notdir $(CURDIR))$/;"	m
pwd_tail	src/deps/basis/makefile	/^pwd_tail := $(notdir $(CURDIR))$/;"	m
pwd_tail	src/deps/ndmakefile/makefile	/^pwd_tail := $(notdir $(CURDIR))$/;"	m
q_nums	old_c/tdho.h	/^struct q_nums { int n; int l; int N; int L; int s;$/;"	s
q_nums	old_c/tdho.h	/^typedef struct q_nums q_nums;$/;"	t	typeref:struct:q_nums
r_sq_bare	old_c/operator_r_sq.c	/^double r_sq_bare(q_nums *ket, q_nums *bra, double *b)$/;"	f	typeref:typename:double
r_sq_lo	old_c/operator_r_sq.c	/^double r_sq_lo(q_nums *ket, q_nums *bra, double *b)$/;"	f	typeref:typename:double
r_sq_n2lo	old_c/operator_r_sq.c	/^double r_sq_n2lo(q_nums *ket, q_nums *bra, double *b)$/;"	f	typeref:typename:double
radial_integral	old_c/operator_gt.c	/^double radial_integral(int n, int l)$/;"	f	typeref:typename:double
radial_integral_bare	old_c/operator_r_sq.c	/^double radial_integral_bare(int ni, int li, int nf, int lf, double b)$/;"	f	typeref:typename:double
radial_integral_lo	old_c/operator_r_sq.c	/^double radial_integral_lo(int ni, int li, int nf, int lf, double b)$/;"	f	typeref:typename:double
radial_integrand	old_c/operator_gt.c	/^double radial_integrand(double y, void *userdata)$/;"	f	typeref:typename:double
radial_nl	old_c/tdho.c	/^double radial_nl(double p, const wf_params *params)$/;"	f	typeref:typename:double
rbegin	src/deps/basis/mcutils/memoizer.h	/^    const_reverse_iterator rbegin() const {return values_.rbegin();};$/;"	f	class:mcutils::Memoizer	typeref:typename:const_reverse_iterator
rbegin	src/deps/basis/mcutils/vector_tuple.h	/^    const_reverse_iterator rbegin() const {return values_.rbegin();};$/;"	f	class:mcutils::VectorTuple	typeref:typename:const_reverse_iterator
rbegin	src/deps/basis/mcutils/vector_tuple.h	/^    reverse_iterator rbegin() {return values_.rbegin();};$/;"	f	class:mcutils::VectorTuple	typeref:typename:reverse_iterator
rc_sq_full	src/operator_rc_sq.cpp	/^double chiral::rc_sq_full(basis::RelativeStateLSJT bra,$/;"	f	class:chiral	typeref:typename:double
rc_sq_lo	src/operator_rc_sq.cpp	/^double chiral::rc_sq_lo(basis::RelativeStateLSJT bra,$/;"	f	class:chiral	typeref:typename:double
rc_sq_n2lo	src/operator_rc_sq.cpp	/^double chiral::rc_sq_n2lo(basis::RelativeStateLSJT bra,$/;"	f	class:chiral	typeref:typename:double
rc_sq_n3lo	src/operator_rc_sq.cpp	/^double chiral::rc_sq_n3lo(basis::RelativeStateLSJT bra,$/;"	f	class:chiral	typeref:typename:double
rc_sq_n4lo	src/operator_rc_sq.cpp	/^double chiral::rc_sq_n4lo(basis::RelativeStateLSJT bra,$/;"	f	class:chiral	typeref:typename:double
rc_sq_nlo	src/operator_rc_sq.cpp	/^double chiral::rc_sq_nlo(basis::RelativeStateLSJT bra,$/;"	f	class:chiral	typeref:typename:double
reference	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::reference reference;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::reference
rend	src/deps/basis/mcutils/memoizer.h	/^    const_reverse_iterator rend() const {return values_.rend();};$/;"	f	class:mcutils::Memoizer	typeref:typename:const_reverse_iterator
rend	src/deps/basis/mcutils/vector_tuple.h	/^    const_reverse_iterator rend() const {return values_.rend();};$/;"	f	class:mcutils::VectorTuple	typeref:typename:const_reverse_iterator
rend	src/deps/basis/mcutils/vector_tuple.h	/^    reverse_iterator rend() {return values_.rend();};$/;"	f	class:mcutils::VectorTuple	typeref:typename:reverse_iterator
reverse_iterator	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::reverse_iterator reverse_iterator;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::reverse_iterator
reverse_iterator	src/deps/basis/mcutils/vector_tuple.h	/^    typedef typename std::vector<T>::reverse_iterator reverse_iterator;$/;"	t	class:mcutils::VectorTuple	typeref:typename:std::vector<T>::reverse_iterator
rme	src/chiral.h	/^        double rme; \/\/ Reduced matrix element$/;"	m	class:chiral::Operator	typeref:typename:double
s	old_c/tdho.h	/^struct q_nums { int n; int l; int N; int L; int s;$/;"	m	struct:q_nums	typeref:typename:int
sandwich	makefile	/^define sandwich$/;"	m
sandwich	src/deps/basis/makefile	/^define sandwich$/;"	m
sandwich	src/deps/ndmakefile/makefile	/^define sandwich$/;"	m
search_dirs_include	config.mk	/^search_dirs_include :=$/;"	m
search_dirs_include	makefile	/^search_dirs_include :=$/;"	m
search_dirs_include	src/deps/basis/config.mk	/^search_dirs_include :=$/;"	m
search_dirs_include	src/deps/basis/makefile	/^search_dirs_include :=$/;"	m
search_dirs_include	src/deps/ndconfig/config-gnu.mk	/^search_dirs_include :=$/;"	m
search_dirs_include	src/deps/ndconfig/config-intel.mk	/^search_dirs_include := $(EIGEN3_DIR)\/include\/eigen3$/;"	m
search_dirs_include	src/deps/ndmakefile/makefile	/^search_dirs_include :=$/;"	m
search_dirs_lib	config.mk	/^search_dirs_lib :=$/;"	m
search_dirs_lib	makefile	/^search_dirs_lib :=$/;"	m
search_dirs_lib	src/deps/basis/config.mk	/^search_dirs_lib :=$/;"	m
search_dirs_lib	src/deps/basis/makefile	/^search_dirs_lib :=$/;"	m
search_dirs_lib	src/deps/ndconfig/config-gnu.mk	/^search_dirs_lib :=$/;"	m
search_dirs_lib	src/deps/ndconfig/config-intel.mk	/^search_dirs_lib :=$/;"	m
search_dirs_lib	src/deps/ndmakefile/makefile	/^search_dirs_lib :=$/;"	m
search_prefix	config.mk	/^search_prefix := $(EIGEN3_DIR) $(GSL_DIR) $(BOOST_ROOT)$/;"	m
search_prefix	makefile	/^search_prefix :=$/;"	m
search_prefix	src/deps/basis/config.mk	/^search_prefix := $(EIGEN3_DIR) $(GSL_DIR) $(BOOST_ROOT)$/;"	m
search_prefix	src/deps/basis/makefile	/^search_prefix :=$/;"	m
search_prefix	src/deps/ndconfig/config-gnu.mk	/^search_prefix := $(EIGEN3_DIR) $(GSL_DIR) $(BOOST_ROOT)$/;"	m
search_prefix	src/deps/ndconfig/config-intel.mk	/^search_prefix := $(EIGEN3_DIR) $(GSL_DIR) $(BOOST_ROOT) $(MKLROOT)$/;"	m
search_prefix	src/deps/ndmakefile/makefile	/^search_prefix :=$/;"	m
sectors	src/deps/basis/nlj_operator.h	/^    OrbitalSectorsLJPN sectors;$/;"	m	struct:basis::OneBodyOperatorLJPN	typeref:typename:OrbitalSectorsLJPN
sectors_	src/deps/basis/basis.h	/^      std::vector<SectorType> sectors_;$/;"	m	class:basis::BaseSectors	typeref:typename:std::vector<SectorType>
set_q_nums	old_c/tdho.c	/^void set_q_nums(q_nums *nums, int n, int l, int N, int L,$/;"	f	typeref:typename:void
set_rme	src/chiral.h	/^        void set_rme()$/;"	f	class:chiral::Operator	typeref:typename:void
shared-library	makefile	/^define shared-library$/;"	m
shared-library	src/deps/basis/makefile	/^define shared-library$/;"	m
shared-library	src/deps/ndmakefile/makefile	/^define shared-library$/;"	m
shared_ldflags	makefile	/^shared_ldflags :=$/;"	m
shared_ldflags	src/deps/basis/makefile	/^shared_ldflags :=$/;"	m
shared_ldflags	src/deps/ndmakefile/makefile	/^shared_ldflags :=$/;"	m
shared_libraries	makefile	/^shared_libraries :=$/;"	m
shared_libraries	src/deps/basis/makefile	/^shared_libraries :=$/;"	m
shared_libraries	src/deps/ndmakefile/makefile	/^shared_libraries :=$/;"	m
shared_objects	makefile	/^shared_objects := $(addsuffix $(so_ext),$(shared_libraries))$/;"	m
shared_objects	src/deps/basis/makefile	/^shared_objects := $(addsuffix $(so_ext),$(shared_libraries))$/;"	m
shared_objects	src/deps/ndmakefile/makefile	/^shared_objects := $(addsuffix $(so_ext),$(shared_libraries))$/;"	m
size	src/deps/basis/basis.h	/^      int size() const$/;"	f	class:basis::BaseSectors	typeref:typename:int
size	src/deps/basis/basis.h	/^      int size() const$/;"	f	class:basis::BaseSpace	typeref:typename:int
size	src/deps/basis/basis.h	/^    int size() const$/;"	f	class:basis::BaseSubspace	typeref:typename:int
size	src/deps/basis/hypersector.h	/^      int size() const$/;"	f	class:basis::BaseHypersectors	typeref:typename:int
size	src/deps/basis/mcutils/memoizer.h	/^    size_type size() const {return values_.size();};$/;"	f	class:mcutils::Memoizer	typeref:typename:size_type
size	src/deps/basis/mcutils/vector_tuple.h	/^    size_type size() const {return values_.size();};$/;"	f	class:mcutils::VectorTuple	typeref:typename:size_type
size_type	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::size_type size_type;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::size_type
size_type	src/deps/basis/mcutils/vector_tuple.h	/^    typedef typename std::vector<T>::size_type size_type;$/;"	t	class:mcutils::VectorTuple	typeref:typename:std::vector<T>::size_type
so_ext	makefile	/^so_ext := .so$/;"	m
so_ext	src/deps/basis/makefile	/^so_ext := .so$/;"	m
so_ext	src/deps/ndmakefile/makefile	/^so_ext := .so$/;"	m
sources	makefile	/^sources := $(sources_cpp) $(sources_h) $(sources_f)$/;"	m
sources	src/deps/basis/makefile	/^sources := $(sources_cpp) $(sources_h) $(sources_f)$/;"	m
sources	src/deps/ndmakefile/makefile	/^sources := $(sources_cpp) $(sources_h) $(sources_f)$/;"	m
sources_cpp	makefile	/^sources_cpp := $(addsuffix $(cpp_ext),$(units_cpp-h) $(programs_cpp) $(programs_cpp_test))$/;"	m
sources_cpp	src/deps/basis/makefile	/^sources_cpp := $(addsuffix $(cpp_ext),$(units_cpp-h) $(programs_cpp) $(programs_cpp_test))$/;"	m
sources_cpp	src/deps/ndmakefile/makefile	/^sources_cpp := $(addsuffix $(cpp_ext),$(units_cpp-h) $(programs_cpp) $(programs_cpp_test))$/;"	m
sources_f	makefile	/^sources_f := $(addsuffix $(f_ext),$(units_f) $(programs_f))$/;"	m
sources_f	src/deps/basis/makefile	/^sources_f := $(addsuffix $(f_ext),$(units_f) $(programs_f))$/;"	m
sources_f	src/deps/ndmakefile/makefile	/^sources_f := $(addsuffix $(f_ext),$(units_f) $(programs_f))$/;"	m
sources_h	makefile	/^sources_h := $(addsuffix $(h_ext),$(units_cpp-h) $(units_h))$/;"	m
sources_h	src/deps/basis/makefile	/^sources_h := $(addsuffix $(h_ext),$(units_cpp-h) $(units_h))$/;"	m
sources_h	src/deps/ndmakefile/makefile	/^sources_h := $(addsuffix $(h_ext),$(units_cpp-h) $(units_h))$/;"	m
spherical_integral_lo	old_c/operator_r_sq.c	/^double spherical_integral_lo(int li, int mli, int lf, int mlf)$/;"	f	typeref:typename:double
splash	makefile	/^splash:$/;"	t
splash	src/deps/basis/makefile	/^splash:$/;"	t
splash	src/deps/ndmakefile/makefile	/^splash:$/;"	t
sqr	src/deps/basis/mcutils/arithmetic.h	/^    T sqr(const T& x) $/;"	f	namespace:mcutils	typeref:typename:T
src_library_dir	makefile	/^src_library_dir := .\/libraries$/;"	m
src_library_dir	src/deps/basis/makefile	/^src_library_dir := .\/libraries$/;"	m
src_library_dir	src/deps/ndmakefile/makefile	/^src_library_dir := .\/libraries$/;"	m
start_time_	src/deps/basis/mcutils/profiling.h	/^    clock_t start_time_;$/;"	m	class:mcutils::Timer	typeref:typename:clock_t
start_time_	src/deps/basis/mcutils/profiling.h	/^    std::chrono::steady_clock::time_point start_time_;$/;"	m	class:mcutils::SteadyTimer	typeref:typename:std::chrono::steady_clock::time_point
state_multiplicities	src/deps/basis/degenerate.h	/^    const std::vector<int>& state_multiplicities() const$/;"	f	class:basis::BaseDegenerateSubspace	typeref:typename:const std::vector<int> &
state_multiplicities_	src/deps/basis/degenerate.h	/^    std::vector<int> state_multiplicities_;  \/\/ given state's number of substates$/;"	m	class:basis::BaseDegenerateSubspace	typeref:typename:std::vector<int>
state_offsets	src/deps/basis/degenerate.h	/^    const std::vector<int>& state_offsets() const$/;"	f	class:basis::BaseDegenerateSubspace	typeref:typename:const std::vector<int> &
state_offsets_	src/deps/basis/degenerate.h	/^    std::vector<int> state_offsets_;  \/\/ offset to given state's starting substate$/;"	m	class:basis::BaseDegenerateSubspace	typeref:typename:std::vector<int>
state_table_	src/deps/basis/basis.h	/^    std::vector<StateLabelsType> state_table_;$/;"	m	class:basis::BaseSubspace	typeref:typename:std::vector<StateLabelsType>
strip-trailing-slash	makefile	/^define strip-trailing-slash$/;"	m
strip-trailing-slash	src/deps/basis/makefile	/^define strip-trailing-slash$/;"	m
strip-trailing-slash	src/deps/ndmakefile/makefile	/^define strip-trailing-slash$/;"	m
subspace	src/deps/basis/basis.h	/^      const SubspaceType& subspace() const$/;"	f	class:basis::BaseState	typeref:typename:const SubspaceType &
subspace_ptr_	src/deps/basis/basis.h	/^      const SubspaceType* subspace_ptr_;  \/\/\/< subspace in which state lies$/;"	m	class:basis::BaseState	typeref:typename:const SubspaceType *
subspaces_	src/deps/basis/basis.h	/^      std::vector<SubspaceType> subspaces_;$/;"	m	class:basis::BaseSpace	typeref:typename:std::vector<SubspaceType>
symmetry_phase_mode	src/deps/basis/jt_operator.h	/^    basis::SymmetryPhaseMode symmetry_phase_mode;$/;"	m	struct:basis::OperatorLabelsJT	typeref:typename:basis::SymmetryPhaseMode
t	old_c/tdho.h	/^    int j; int mj; int t; int mt; };$/;"	m	struct:q_nums	typeref:typename:int
tag	makefile	/^tag ?= $(shell date +%y%m%d)$/;"	m
tag	src/deps/basis/makefile	/^tag ?= $(shell date +%y%m%d)$/;"	m
tag	src/deps/ndmakefile/makefile	/^tag ?= $(shell date +%y%m%d)$/;"	m
tar_constituents	makefile	/^tar_constituents = $(sources) $(makefiles) $(extras)$/;"	m
tar_constituents	src/deps/basis/makefile	/^tar_constituents = $(sources) $(makefiles) $(extras)$/;"	m
tar_constituents	src/deps/ndmakefile/makefile	/^tar_constituents = $(sources) $(makefiles) $(extras)$/;"	m
tarball	makefile	/^tarball = $(project_name)-$(tag).tgz$/;"	m
tarball	src/deps/basis/makefile	/^tarball = $(project_name)-$(tag).tgz$/;"	m
tarball	src/deps/ndmakefile/makefile	/^tarball = $(project_name)-$(tag).tgz$/;"	m
timer_is_running_	src/deps/basis/mcutils/profiling.h	/^    bool timer_is_running_;$/;"	m	class:mcutils::SteadyTimer	typeref:typename:bool
twice_value_	src/deps/basis/am/halfint.h	/^  int twice_value_;$/;"	m	class:HalfInt	typeref:typename:int
two_body	src/deps/basis/jjjpn_scheme.h	/^    std::array<double,3> two_body;$/;"	m	struct:basis::WeightMax	typeref:typename:std::array<double,3>
two_body_species	src/deps/basis/jjjpn_scheme.h	/^      TwoBodySpeciesPN two_body_species() const {return std::get<0>(labels_);}$/;"	f	class:basis::TwoBodySubspaceJJJPN	typeref:typename:TwoBodySpeciesPN
two_body_species	src/deps/basis/jjjpn_scheme.h	/^    TwoBodySpeciesPN two_body_species() const {return subspace().two_body_species();}$/;"	f	class:basis::TwoBodyStateJJJPN	typeref:typename:TwoBodySpeciesPN
units_cpp-h	makefile	/^units_cpp-h :=$/;"	m
units_cpp-h	src/deps/basis/makefile	/^units_cpp-h :=$/;"	m
units_cpp-h	src/deps/ndmakefile/makefile	/^units_cpp-h :=$/;"	m
units_f	makefile	/^units_f :=$/;"	m
units_f	src/deps/basis/makefile	/^units_f :=$/;"	m
units_f	src/deps/ndmakefile/makefile	/^units_f :=$/;"	m
units_h	makefile	/^units_h :=$/;"	m
units_h	src/deps/basis/makefile	/^units_h :=$/;"	m
units_h	src/deps/ndmakefile/makefile	/^units_h :=$/;"	m
util	src/utility.h	/^namespace util$/;"	n
value_compare	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::value_compare value_compare;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::value_compare
value_type	src/deps/basis/mcutils/memoizer.h	/^    typedef typename map_type::value_type value_type;$/;"	t	class:mcutils::Memoizer	typeref:typename:map_type::value_type
value_type	src/deps/basis/mcutils/vector_tuple.h	/^    typedef typename std::vector<T>::value_type value_type;$/;"	t	class:mcutils::VectorTuple	typeref:typename:std::vector<T>::value_type
values_	src/deps/basis/mcutils/memoizer.h	/^    map_type values_;$/;"	m	class:mcutils::Memoizer	typeref:typename:map_type
values_	src/deps/basis/mcutils/vector_tuple.h	/^    vector_type values_;$/;"	m	class:mcutils::VectorTuple	typeref:typename:vector_type
vcs-git	makefile	/^define vcs-git$/;"	m
vcs-git	src/deps/basis/makefile	/^define vcs-git$/;"	m
vcs-git	src/deps/ndmakefile/makefile	/^define vcs-git$/;"	m
vcs-svn	makefile	/^define vcs-svn$/;"	m
vcs-svn	src/deps/basis/makefile	/^define vcs-svn$/;"	m
vcs-svn	src/deps/ndmakefile/makefile	/^define vcs-svn$/;"	m
vector	src/deps/basis/am/halfint.h	/^  typedef std::vector<HalfInt> vector;  \/\/ used by am$/;"	t	class:HalfInt	typeref:typename:std::vector<HalfInt>
vector_type	src/deps/basis/mcutils/memoizer.h	/^    typedef typename std::vector<value_type> vector_type;$/;"	t	class:mcutils::Memoizer	typeref:typename:std::vector<value_type>
vector_type	src/deps/basis/mcutils/vector_tuple.h	/^    typedef typename std::vector<T> vector_type;$/;"	t	class:mcutils::VectorTuple	typeref:typename:std::vector<T>
wavefunc_nlm_imag	old_c/tdho.c	/^double wavefunc_nlm_imag(double p, double theta,$/;"	f	typeref:typename:double
wavefunc_nlm_real	old_c/tdho.c	/^double wavefunc_nlm_real(double p, double theta,$/;"	f	typeref:typename:double
weight	src/deps/basis/m_scheme.h	/^      double weight() const {return subspace().weights()[index()];}$/;"	f	class:basis::SingleParticleStatePN	typeref:typename:double
weight	src/deps/basis/nlj_orbital.h	/^    double weight() const {return subspace().weights()[index()];}$/;"	f	class:basis::OrbitalStateLJPN	typeref:typename:double
weight	src/deps/basis/nlj_orbital.h	/^    double weight() const {return subspace().weights()[index()];}$/;"	f	class:basis::OrbitalStatePN	typeref:typename:double
weight	src/deps/basis/nlj_orbital.h	/^    double weight;$/;"	m	struct:basis::OrbitalPNInfo	typeref:typename:double
weight_max	src/deps/basis/jjjpn_scheme.h	/^      const WeightMax& weight_max() const {return weight_max_;}$/;"	f	class:basis::TwoBodySubspaceJJJPN	typeref:typename:const WeightMax &
weight_max	src/deps/basis/jjjpn_scheme.h	/^    const WeightMax& weight_max() const {return weight_max_;}$/;"	f	class:basis::TwoBodySpaceJJJPN	typeref:typename:const WeightMax &
weight_max	src/deps/basis/m_scheme.h	/^      double weight_max() const {return weight_max_;}$/;"	f	class:basis::SingleParticleSubspacePN	typeref:typename:double
weight_max	src/deps/basis/m_scheme.h	/^    double weight_max() const {return weight_max_;}$/;"	f	class:basis::SingleParticleSpacePN	typeref:typename:double
weight_max	src/deps/basis/nlj_orbital.h	/^      double weight_max() const {return weight_max_;}$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:double
weight_max	src/deps/basis/nlj_orbital.h	/^      double weight_max() const {return weight_max_;}$/;"	f	class:basis::OrbitalSubspacePN	typeref:typename:double
weight_max	src/deps/basis/nlj_orbital.h	/^    double weight_max() const {return weight_max_;}$/;"	f	class:basis::OrbitalSpaceLJPN	typeref:typename:double
weight_max	src/deps/basis/nlj_orbital.h	/^    double weight_max() const {return weight_max_;}$/;"	f	class:basis::OrbitalSpacePN	typeref:typename:double
weight_max_	src/deps/basis/jjjpn_scheme.h	/^      WeightMax weight_max_;$/;"	m	class:basis::TwoBodySubspaceJJJPN	typeref:typename:WeightMax
weight_max_	src/deps/basis/jjjpn_scheme.h	/^    WeightMax weight_max_;$/;"	m	class:basis::TwoBodySpaceJJJPN	typeref:typename:WeightMax
weight_max_	src/deps/basis/m_scheme.h	/^      double weight_max_;$/;"	m	class:basis::SingleParticleSubspacePN	typeref:typename:double
weight_max_	src/deps/basis/m_scheme.h	/^    double weight_max_;$/;"	m	class:basis::SingleParticleSpacePN	typeref:typename:double
weight_max_	src/deps/basis/nlj_orbital.h	/^      double weight_max_;$/;"	m	class:basis::OrbitalSubspaceLJPN	typeref:typename:double
weight_max_	src/deps/basis/nlj_orbital.h	/^      double weight_max_;$/;"	m	class:basis::OrbitalSubspacePN	typeref:typename:double
weight_max_	src/deps/basis/nlj_orbital.h	/^    double weight_max_;$/;"	m	class:basis::OrbitalSpaceLJPN	typeref:typename:double
weight_max_	src/deps/basis/nlj_orbital.h	/^    double weight_max_;$/;"	m	class:basis::OrbitalSpacePN	typeref:typename:double
weights	src/deps/basis/m_scheme.h	/^      const std::vector<double>& weights() const {return weights_;}$/;"	f	class:basis::SingleParticleSubspacePN	typeref:typename:const std::vector<double> &
weights	src/deps/basis/nlj_orbital.h	/^      const std::vector<double>& weights() const {return weights_;}$/;"	f	class:basis::OrbitalSubspaceLJPN	typeref:typename:const std::vector<double> &
weights	src/deps/basis/nlj_orbital.h	/^      const std::vector<double>& weights() const {return weights_;}$/;"	f	class:basis::OrbitalSubspacePN	typeref:typename:const std::vector<double> &
weights_	src/deps/basis/m_scheme.h	/^      std::vector<double> weights_;$/;"	m	class:basis::SingleParticleSubspacePN	typeref:typename:std::vector<double>
weights_	src/deps/basis/nlj_orbital.h	/^      std::vector<double> weights_;$/;"	m	class:basis::OrbitalSubspaceLJPN	typeref:typename:std::vector<double>
weights_	src/deps/basis/nlj_orbital.h	/^      std::vector<double> weights_;$/;"	m	class:basis::OrbitalSubspacePN	typeref:typename:std::vector<double>
wf_params	old_c/tdho.h	/^struct wf_params { int n; int l; int ml; double b; };$/;"	s
wf_params	old_c/tdho.h	/^typedef struct wf_params wf_params;$/;"	t	typeref:struct:wf_params
y_lm_imag	old_c/tdho.c	/^double y_lm_imag(double theta, double phi, const wf_params *params)$/;"	f	typeref:typename:double
y_lm_real	old_c/tdho.c	/^double y_lm_real(double theta, double phi, const wf_params *params)$/;"	f	typeref:typename:double
~Operator	src/chiral.h	/^        ~Operator() {}$/;"	f	class:chiral::Operator
